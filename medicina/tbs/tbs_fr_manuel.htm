<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>TBS Manuel</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<style type="text/css">
<!--
.pagebreak { page-break-before:always;
}
.tbsname {	font-size: 12px;
	font-weight: bolder;
  color: #4D3A81;
}
.norm {
	margin-left: 30px;
	padding: 5px;
	border: 1px solid #999999;
	margin-top: 12px;
	margin-bottom: 12px;
}
.decal {
	margin-left: 20px;
	padding: 2px;
	margin-top: 3px;
}
.title-1 {
	font-size: 16px;
}
.title-1b {
	text-decoration: underline;
}
.title-1c {
	font-weight: bold;
}
.title-2 {
	font-size: 16px;
	text-decoration: underline;
}
.title-3 {
	font-size: 16px;
	text-decoration: underline;
	background-color: #6699CC;
	margin-top: 20px;
	margin-bottom: 20px;
}
.txt-small {
	font-size: 10px;
}
.txt-code {
	font-family: "Courier New", Courier, mono;
	font-size: 12px;
}
.txt-tiny {
	font-size: 9px;
}
.asciiart {
	font-family: "Courier New", Courier, mono;
	font-size: 8px;
	font-weight: bold;
	color: #0066CC;
}
table {
	font-family: Verdana, Arial, Helvetica, sans-serif;
	font-size: 12px;
}
body {
	font-family: Verdana, Arial, Helvetica, sans-serif;
	font-size: 12px;
}
.opt-name {
	color: #990000;
}
a.opt-name {
	color: #990000;
	text-decoration:none;
}
a.opt-name:hover {
	color: #990000;
	text-decoration:underline;
}
.opt-value {
	color: #000099;
}
.opt-html {
	color: #006600;
}
.opt-type {
	font-style: italic;
	color: #0033CC;
}
.border-0 {
	border: 1px solid #999999;
}
.border-1 {
	border: 1px solid #FF3399;
}
.border-2 {
	border: 1px solid #336699;
}
.border-3 {
	border: 1.5px solid #CC6600;
}
.border-sep {
	border-bottom-width: 1px;
	border-bottom-style: solid;
	border-bottom-color: #999999;
}
.versioning {
	background-color: #EAEAEA;
}
.blockzone {
	border: 1px dotted #666666;
	padding: 2px;
	margin: 2px;
}
.blocksep {
	border-left-width: 1px;
	border-left-style: dotted;
	border-left-color: #666666;
}
.contextual {
	padding: 1px;
	border: 1px dotted #6699CC;
}
.note {
	background-color: #D9FFD9;
	border: thin solid #00EC9F;
	padding: 2px;
	margin-top: 3px;
	margin-left: 20px;
}
.todo {
	background-color: #FF6633;
}
-->
</style>
</head>
<body bgcolor="#FFFFFF">
<strong><span class="title-1"></span></strong>
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td width="33%" align="left" valign="top"><table width="180" border="0" cellspacing="0" cellpadding="0">
        <tr class="txt-tiny">
          <td width="50">Site :</td>
          <td><a href="http://www.tinybutstrong.com/fr" target="_top">www.tinybutstrong.com</a></td>
        </tr>
        <tr class="txt-tiny">
          <td>Auteur :</td>
          <td><a href="http://www.tinybutstrong.com/onlyyou.html">skrol29</a><a href="mailto:skrol29@freesurf.fr"></a></td>
        </tr>
        <tr class="txt-tiny">
          <td>Date :</td>
          <td>2008-03-06</td>
        </tr>
      </table></td>
    <td width="34%" align="center"><span class="asciiart">*.^.*.^.*.^.*.^.*.^.*.^.*.^.*.^.*.^.*.^.*.^.*.^.*.^.*.^.*</span><br>
      <span class="title-1 title-1c">TinyButStrong</span><br>
      <span class="txt-tiny">version 3.3</span><br>
      <span class="asciiart">*.^.*.^.*.^.*.^.*.^.*.^.*.^.*.^.*.^.*.^.*.^.*.^.*.^.*.^.*</span></td>
    <td width="33%" align="right" valign="top" class="txt-small">&nbsp;</td>
  </tr>
  <tr>
    <td width="33%" align="left" valign="top"><br>
    </td>
    <td><div align="center">Template Engine pour Pro et débutants<br>
        sous PHP <span class="txt-tiny">version 4.0.6 ou supérieure</span><br>
      </div></td>
    <td align="right" valign="top" class="txt-small">&nbsp;</td>
  </tr>
</table>
<br>
<div class="title-1c"><strong>Plan de ce fichier d'aide :</strong></div>
<div class="norm">
  <table border="0" cellspacing="0">
    <tr class="title-1c">
      <td>Rubrique</td>
      <td>Description</td>
    </tr>
    <tr>
      <td>&nbsp;</td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td><a href="#introduction" class="title-1c">&#8226; Présentation</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#principles">Principes de base</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#installation">Installation</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#examples">Mini exemples</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td><a href="#php_side" class="title-1c">&#8226; Coté PHP</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&#8226; Pour commencer</td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="#php_loadtemplate"><span class="txt-small">méthode</span> LoadTemplate()</a></td>
      <td>charge le contenu d'un modèle à partir d'un fichier </td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="#php_mergeblock"><span class="txt-small">méthode</span> MergeBlock()</a></td>
      <td>fusionne une partie du modèle avec une source de données</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="#php_show"><span class="txt-small">méthode</span> Show()</a></td>
      <td>traitements automatiques et affichage du résultat</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&#8226; Avancé</td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="#php_getblocksource"><span class="txt-small">méthode</span> GetBlockSource()</a></td>
      <td>retourne le source de la définition d'un bloc</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="txt-small"><a href="#php_mergefield">méthode</a></span><a href="#php_mergefield"> MergeField()</a></td>
      <td>fusionne un champ particulier avec une valeur</td>
    </tr>
    <tr>
			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="txt-small"><a href="#php_mergefield">m&eacute;thode</a></span><a href="#php_plugin"> PlugIn()</a></td>
    	<td>ex&eacute;cute une action d'un plug-in </td>
   	</tr>
    <tr>
			<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="txt-small"><a href="#php_render">propri&eacute;t&eacute;</a></span><a href="#php_noerr"> NoErr </a></td>
    	<td>emp&ecirc;che les messages d'erreur</td>
   	</tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="txt-small"><a href="#php_render">propriété</a></span><a href="#php_render"> Render</a></td>
      <td>pour modifier les options de fin de fusion</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="txt-small"><a href="#php_source">propriété</a></span><a href="#php_source"> Source</a></td>
      <td>retourne le contenu courant du résultat de la fusion </td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="#php_tplvars"><span class="txt-small">propriété</span> TplVars</a></td>
      <td>retourne les variables du modèle</td>
    </tr>
    <tr  id="v202_oop_plan">
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#php_oop">Programmation Orient&eacute;e Objet</a> (POO)</td>
      <td>pour que TBS vous facilite la POO. </td>
    </tr>
    <tr>
      <td><a href="#html_side" class="title-1c">&#8226; Coté HTML</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&#8226; les champs TBS </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <a href="#html_field">définition et syntaxe </a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <a href="#html_field_prm">paramètres</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <a href="#html_field_prm_order">ordre de traitement des param&egrave;tres</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <a href="#html_field_var">les champs [var] </a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <a href="#html_field_specialvar">les champs [var] Spéciaux </a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&#8226; les blocs TBS </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="#html_block">définition et syntaxes </a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <a href="#html_block_prm">paramètres</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <a href="#html_block_section">sections de bloc</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <a href="#html_block_serial">affichage en série (en colonnes) </a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <a href="#html_block_subblock">requêtes dynamiques / sous-blocs</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&#8226; Autre</td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="#html_automatic">champs et blocs automatiques</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="#html_subtemplate">sous-modèles</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="#html_conditional">vue d'ensemble de l'affichage conditionnel</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
    	<td><a href="#plugins" class="title-1c">&#8226; Coder des plug-ins </a></td>
    	<td>&nbsp;</td>
   	</tr>
    <tr>
    	<td>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#plugins_db">Plug-ins de base de donn&eacute;es </a></td>
    	<td>&nbsp;</td>
   	</tr>
    <tr>
    	<td><a href="#plugins_tbs">&nbsp;&nbsp;&nbsp;&nbsp;Autres plug-ins </a></td>
    	<td>&nbsp;</td>
   	</tr>
    <tr>
      <td><a href="#summaries" class="title-1c">&#8226; Résumés</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#appendix_field">paramètres des champs TBS</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#appendix_block">paramètres des blocs TBS</a></td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#appendix_specialname">noms de champs et blocs spéciaux</a></td>
      <td>&nbsp;</td>
    </tr>
  </table>
</div>
<div class="title-2 pagebreak"><a name="introduction" id="introduction"></a>Présentation :</div>
<span class="tbsname"><br>
</span><span class="title-1c"> TinyButStrong</span> (TBS) est une classe PHP utile pour développer une application en séparant proprement vos scripts PHP de vos pages HTML. Avec TBS, les pages HTML sont générées dynamiquement en fusionnant un modèle avec des données. C'est ce qu'on appelle un moteur de modèle (Template Engine).<br>
<br>
TBS tient son nom du fait qu'il ne présente que 8 fonctions mais qu'il permet de faire le maximum. Il est <span style="color:#FF0000;">&#8226;&#8226;&#8226;&nbsp;très&nbsp;très&nbsp;fort&nbsp;&#8226;&#8226;&#8226;</span> pour fusionner des modèles de pages HTML avec vos variables PHP ou vos requêtes MySQL, PostgreSQL, ou SQLite.<br>
<br>
TBS a été conçu pour que vous puissiez développer avec facilité vos modèles depuis n'importe quel éditeur HTML visuel (comme Dreamweaver ou FrontPage), mais si vous avez l'habitude d'utiliser un éditeur textuel il est tout aussi pratique. TBS permet aussi de créer du JavaScript dynamiquement.<br>
<br>
Comme son nom l'indique, TBS est simple à utiliser, puissant et rapide. Il est complètement <font color="#009900">&deg;~&deg;&nbsp;freeware&nbsp;&deg;~&deg;</font>.<br>
<br>
<div class="title-2"><a name="principles" id="principles"></a>Principes de base :</div>
<br>
Du coté HTML :<br>
Vous concevez une page qui n'a pas besoin de contenir de script PHP, ni de programmation. Dans cette page vous placez des balises TBS aux endroits où doivent s'afficher les données dynamiques. Cette page est appelée un 'modèle'. Il existe deux types de balises : les <a href="#html_field">'champs'</a> qui servent à afficher une donnée dynamiquement, et les <a href="#html_block">'blocs'</a> qui servent à définir une zone, le plus souvent pour afficher les enregistrements d'une source de données.<br>
<br>
Du coté PHP :<br>
Vous utilisez une variable objet TBS pour piloter la fusion de votre modèle HTML avec des données. à la fin, TBS affiche le résultat de la fusion.<br>
<br>
<br>
<div class="title-2"><a name="installation"></a>Installation :</div>
<br>
<table width="100%" border="0" cellpadding="0" cellspacing="0">
  <tr align="left" valign="top">
    <td width="25">1.</td>
    <td>Copiez le fichier <span class="opt-html">tbs_class.php</span> dans un répertoire de votre site Web.</td>
  </tr>
  <tr align="left" valign="top">
    <td>2.</td>
    <td>Au début de votre programme PHP, ajoutez les lignes :<br>
      <span class="txt-code">&nbsp;&nbsp;include_once(<span class="opt-value">'tbs_class.php'</span>);</span><br>
      <span class="txt-code"><span class="opt-name">&nbsp;&nbsp;$TBS</span> = <strong>new</strong> clsTinyButStrong ;</span> <br>
      <span class="txt-small">Remarque : si le fichier tbs_class.php se trouve dans un répertoire différent de celui de votre programme, vous devrez préciser le répertoire devant le nom du fichier.</span></td>
  </tr>
</table>
<span class="title-1b"><br>
Explications et détails techniques :</span><br>
TinyButStrong est un librairie écrite en PHP, c'est un composant à référencer dans vos propres programmes PHP. En terme technique, TinyButStrong est une 'classe' d'objet PHP ; le nom de cette classe est clsTinyButStrong.<br>
La variable $TBS que ajoutez en début de programme sert à piloter la fusion de votre modèle depuis votre application PHP. En terme technique, la variable $TBS est une 'instance' de la classe clsTinyButStrong.<br>
<br>
<br>
<div class="title-2"><a name="examples" id="examples"></a>Mini exemples :</div>
<br>
Exemple 1 : <br>
<table width="100%" border="0" cellpadding="2" cellspacing="4">
  <tr class="title-1c">
    <td width="33%">Modèle Html</td>
    <td>Programme Php</td>
    <td width="33%">Résultat</td>
  </tr>
  <tr class="norm">
    <td valign="top"><span class="opt-html">&lt;html&gt;<br>
&nbsp;&lt;body&gt;<br>
&nbsp;&nbsp;[var.message] <br>
&nbsp;&lt;/body&gt;<br>
&lt;/html&gt;</span><br>
    </td>
    <td valign="top" class="txt-code">&lt;?<br>
      <br>
      include_once(<span class="opt-value">'tbs_class.php'</span>);<br>
      <span class="opt-name">$TBS</span> = <strong>new</strong> clsTinyButStrong ;<br>
      <span class="opt-name">$TBS</span>-&gt;LoadTemplate(<span class="opt-value">'template.htm'</span>) ;<br>
      <br>
      $message = <span class="opt-value">'Hello'</span> ;<br>
      <span class="opt-name">$TBS</span>-&gt;Show() ;<br>
      <br>
      ?&gt; <br>
    </td>
    <td valign="top" class="opt-html">&lt;html&gt;<br>
&nbsp;&lt;body&gt;<br>
&nbsp;&nbsp;Hello<br>
&nbsp;&lt;/body&gt;<br>
&lt;/html&gt;</td>
  </tr>
</table>
<br>
<div class="pagebreak">Exemple 2 :</div>
<table width="100%" border="0" cellpadding="2" cellspacing="4">
  <tr class="title-1c">
    <td width="33%">Modèle Html</td>
    <td>Programme Php</td>
    <td width="33%">Résultat</td>
  </tr>
  <tr class="norm">
    <td valign="top"><span class="opt-html">&lt;table&gt;<br>
&nbsp;&lt;tr&gt;&lt;td&gt;[blk.val;block=tr]&lt;/td&gt;&lt;/tr&gt;<br>
&lt;/table&gt;</span><br>
    </td>
    <td valign="top" class="txt-code">&lt;?<br>
      <br>
      include_once(<span class="opt-value">'tbs_class.php'</span>);<br>
      <span class="opt-name">$TBS</span> = <strong>new</strong> clsTinyButStrong ;<br>
      <span class="opt-name">$TBS</span>-&gt;LoadTemplate(<span class="opt-value">'template.htm'</span>) ;<br>
      <br>
      $liste = array(<span class="opt-value">'X'</span>,<span class="opt-value">'Y'</span>,<span class="opt-value">'Z'</span>) ;<br>
      <span class="opt-name">$TBS</span>-&gt;MergeBlock(<span class="opt-value">'blk'</span>,$liste) ; <br>
      <span class="opt-name">$TBS</span>-&gt;Show() ;<br>
      <br>
      ?&gt; <br>
    </td>
    <td valign="top" class="opt-html">&lt;table&gt;<br>
&nbsp;&lt;tr&gt;&lt;td&gt;X&lt;/td&gt;&lt;/tr&gt;<br>
&nbsp;&lt;tr&gt;&lt;td&gt;Y&lt;/td&gt;&lt;/tr&gt;<br>
&nbsp;&lt;tr&gt;&lt;td&gt;Z&lt;/td&gt;&lt;/tr&gt;<br>
&lt;/table&gt;</td>
  </tr>
</table>
<div class="title-3"><a name="php_side"></a>Coté PHP :</div>
Le pilotage de la fusion d'un modèle se fait dans un programme PHP en utilisant une variable objet déclaré à partir de la classe <span class="opt-html">clsTinyButStrong</span>.<br>
Exemple de déclaration : <span class="txt-code"><span class="opt-name">$TBS</span> = <strong>new</strong> clsTinyButStrong ;</span> <br>
Cet objet vous permet de charger un modèle, piloter sa fusion avec des données, puis afficher le résultat.<br>
<br>
Exemple de code PHP :<br>
<br>
<div class=" txt-code decal"> include_once(<span class="opt-value">'tbs_class.php'</span>);<br>
  <span class="opt-name">$TBS</span> = <strong>new</strong> clsTinyButStrong ;<br>
  <span class="opt-name">$TBS</span>-&gt;LoadTemplate(<span class="opt-value">'template.htm'</span>) ;<br>
  <span class="opt-name">$TBS</span>-&gt;MergeBlock(<span class="opt-value">'ctry','mysql','SELECT * FROM t_coutry'</span>) ;<br>
  <span class="opt-name">$TBS</span>-&gt;Show() ; </div>
<br>
Voici la liste des propriétés et méthodes d'un objet TinyButStrong :<br>
<br>
<div class="title-2"><a name="php_loadtemplate" id="php_loadtemplate"></a>Méthode LoadTemplate() :</div>
<div class="norm">Charge un modèle en vue de son traitement pour la fusion.<br>
  Le contenu complet du fichier est enregistré dans la propriété <a href="#php_source">Source</a> de l'objet TinyButStrong, et les champ <a href="#html_automatic">[onload]</a> sont fusionn&eacute;s.<br>
  Si le fichier n'est pas trouv&eacute; il sera aussi recherch&eacute; dans le r&eacute;pertoire du dernier mod&egrave;le charg&eacute; (<span class="versioning">depuis TBS version 3.2.0</span>).<br>
  <br>
  Syntaxe : <span class="txt-code"><span class="opt-name">$TBS</span>-&gt;LoadTemplate(<span class="opt-type">string</span> <span class="opt-name">Fichier</span><span class="opt-name"><font color="#333333">{</font></span>, <span class="opt-type">string</span><span class="opt-name"> HtmlCharSet<font color="#333333">}</font></span>)<br>
  <br>
  </span>
  <table border="0" cellpadding="5" cellspacing="0">
    <tr class="title-1b">
      <td width="80" align="left" valign="top">Argument</td>
      <td align="left" valign="top">Description</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">Fichier</td>
      <td align="left" valign="top">Chemin local ou absolu du fichier modèle à charger.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">HtmlCharSet</td>
      <td align="left" valign="top">Facultatif. Indique l'encodage des caractères (charset) à utiliser pour la conversion Html des données lorsqu'elles seront fusionnées. La valeur par défaut est <span class="opt-value">''</span> (chaîne vide) qui équivaut à <span class="opt-value">'ISO-8859-1'</span> (Latin 1).<br>
        <br>
        Si votre modèle utilise un charset spécial, indiquez la valeur Html de ce charset.<br>
        Dans une page Html, le charset se trouve en tête du fichier, dans l'attribut <span class="opt-html">'content'</span> d'une balise <span class="opt-html">&lt;Meta&gt;</span>. Les charset supportés par TBS sont ceux supportés par la fonction <a href="http://www.php.net/htmlentities" target="_blank">htmlentities()</a> de Php. Par exemple : <span class="opt-value">'BIG5'</span> (chinois) ou <span class="opt-value">'EUCJP'</span> (japonais).</td>
    </tr>
  </table>
  <br>
  <span class="title-1b">Scope of the file path:</span><br>
  Si le fichier n'est pas trouv&eacute;, il sera aussi recherch&eacute; dans le r&eacute;pertoire du dernier mod&egrave;le ou sous-mod&egrave;le charg&eacute;. <br>

  <span class="versioning">Depuis TBS version 3.3.0</span>, le fichier est aussi recherch&eacute; dans le <a href="http://www.php.net/manual/en/ini.core.php#ini.include-path">include_path</a>.<br>
<br>
  <span class="title-1b">Pas de conversion Html :</span> <br>
  Si vous utilisez la valeur False pour l'argument <span class="opt-name">HtmlCharSet</span>, alors les données ne seront pas converties lors de la fusion avec le modèle.<br>
  <br>
  <span class="title-1b">Fonction utilisateur :</span> <br>
  Si votre charset n'est pas supporté par PHP, vous pouvez désigner une fonction utilisateur qui réalise la conversion Html. Pour cela, utilisez l'argument <span class="opt-name">HtmlCharSet</span> avec la syntaxe '=myfunction'.<br>
  <span class="versioning">Depuis TBS version 3.0</span>, il est aussi possible d'indiquer une m&eacute;thode de classe (voir <a href="#php_oop">POO</a>).<br>
  <span class="versioning">Depuis TBS version 3.3.0</span>, cette fonction utilisateur devrait avoir un second argument pour la conversion des sauts-de-lignes.<br>
Voici un exemple qui donne la syntaxe attendue : <br>
<div class="decal txt-code">function f_StrToXml(<span class="opt-name">$Txt</span> <span class="opt-type">string</span>,<span class="opt-name">$ConvBr <span class="opt-type">boolean</span></span>) {<br>
    <span class="opt-html">// Convertie une cha&icirc;ne en texte  XML.</span><br>
  &nbsp;&nbsp;<span class="opt-type"><span class="opt-name">$x</span></span> = htmlspecialchars(utf8_encode(<span class="opt-name">$Txt</span>));<br>
  &nbsp;&nbsp;if (<span class="opt-name">$ConvBr</span>) {<br>
  &nbsp;&nbsp;  &nbsp;<span class="opt-name">$x</span> = nl2br(<span class="opt-name">$x</span>); <span class="opt-html">// Convertie tout type de saut-de-ligne</span><br>
  &nbsp;&nbsp;&nbsp;&nbsp;<span class="opt-name">$x</span> = str_replace(<span class="opt-value">'&lt;br /&gt;'</span>, <span class="opt-value">'&lt;text:line-break/&gt;'</span>,<span class="opt-name">$x</span>);<br>
  &nbsp;&nbsp;return <span class="opt-name">$x</span>;<br>
  } </div>
<span class="title-1b"></span><br>
  <span class="title-1b"> <br>
  Ajouter le fichier à la suite du modèle en cours :</span><br>
Vous pouvez utiliser le mot-clé '+' à la place du charset pour que le fichier spécifié soit ajouté à la fin du modèle en cours au lieu de l'écraser. Le charset utilisé est alors le même que pour le premier modèle.<br>
<br>
<span class="title-1b">Modifier le charset du mod&egrave;le en cours sans charger un nouveau mod&egrave;le :</span><br>
<span class="versioning">Depuis TBS version 3.3.0</span>, l'utilisation de LoadTemplate(<span class="opt-value">''</span>,<span class="opt-value">moncharset</span>) chnagera le charset sans changer le mod&egrave;le en cours. </div>
<div class="title-2"><a name="php_mergeblock" id="php_mergeblock"></a>Méthode MergeBlock() :</div>
<div class="norm">Fusionne un ou plusieurs <a href="#html_block">blocs TBS</a> avec les données d'une source d'enregistrements.<br>
  Par d&eacute;fault, cette m&eacute;thode retourne le nombre d'enregistrements fusionn&eacute;s (plus exactement, elle retourne le  num&eacute;ro du dernier enregistrement), mais elle peut aussi retourner le jeu complet des enregistrements fusionn&eacute;s (voir argument <span class="opt-name">NomBloc</span>). <br>
  <br>
  TinyButStrong supporte plusieurs types de sources de données en natif :<br>
  <span class="title-1b">Données Php :</span> un tableau ; une chaîne texte, un nombre.<br>
  <span class="title-1b">Base de données :</span> MySQL ; PostgreSQL ; SQLite.<br>
  Mais vous pouvez aussi en ajouter de nouveaux : '<a href="#plug-ins_db">plug-ins de base de donn&eacute;es</a>'.<br>
  <br>
  Syntaxe : <span class="txt-code"><span class="opt-type">int</span><span class="opt-name"></span> <span class="opt-name">$TBS</span>-&gt;MergeBlock(<span class="opt-type">string</span><span class="opt-name"> NomBloc</span>, <span class="opt-type">mixed</span> <span class="opt-name">Source<font color="#333333">{</font></span>, <span class="opt-type">string</span><span class="opt-name"> Requête<font color="#333333">}</font></span>)</span>
  <table border="0" cellpadding="5" cellspacing="0">
    <tr class="title-1b">
      <td width="80" align="left" valign="top">Argument</td>
      <td align="left" valign="top">Description</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">NomBloc</td>
      <td align="left" valign="top">Indique le nom du <a href="#html_block">bloc</a> TBS à fusionner.<span class="opt-name"><span class="txt-code"><br>
        </span></span> Vous pouvez fusionner plusieurs blocs avec les mêmes données en indiquant leurs noms séparés par des virgules. Si vous ajoutez <span class="opt-value">'*'</span> comme nom de bloc, alors la m&eacute;thode retournera le jeu complet des enregistrements fusionn&eacute;s sous forme de tableau PHP, &agrave; la place du nombre d'enregistrements.
        <div class="versioning">Historique : le mot cl&eacute; '*' est support&eacute; depuis TBS version 3.0.</div>
</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">Source</td>
      <td align="left" valign="top"><p>Variable ou mot-clé qui désigne la source de données pour la fusion.<br>
          Le tableau ci-dessous indique les valeurs possibles selon le type de source de données.</p></td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">Requête</td>
      <td align="left" valign="top"> Facultatif. Indique la requête SQL qui retourne les données à fusionner.<br>
        Le tableau ci-dessous indique les valeurs possibles selon le type de source de données.</td>
    </tr>
  </table>
  <br>
  <div class="title-1b">Liaison entre le bloc et les enregistrements :</div>
  <br>
  <div class="decal">La méthode MergeBlock() recherche le bloc TBS avec le nom spécifié dans votre modèle. Puis, le bloc TBS est répété autant de fois qu'il y a d'enregistrement dans la source de données.<br>
    Pour afficher les données d'un enregistrement, vous devez utiliser un champ TBS lié. Un champ TBS est lié lorsque son nom est composé du nom du bloc, suivi d'un point et du nom d'une colonne ou d'une clé du jeu d'enregistrements. Un champ lié doit se trouver à l'intérieur du bloc.<br>
    <br>
    Exemple :<br>
    <div class="decal">Nom du bloc : <span class="opt-value">bloc1</span><br>
      Colonnes retournées par la requête : <span class="opt-value">champ1</span>,c<span class="opt-value">hamp2</span>,c<span class="opt-value">hamp3</span><br>
      Champs TBS liés : <span class="opt-value">[bloc1.champ1]</span>, <span class="opt-value">[bloc1.champ2]</span>, <span class="opt-value">[bloc1.champ3]</span></div>
    <br>
    Si aucune définition de bloc n'est trouvée dans le modèle, La méthode MergeBlock() fusionnera le premier enregistrement avec tous les champs liés trouvés dans le modèle.<br>
    <br>
    Vous pouvez définir des blocs plus évolués. Pour plus d'information, consultez la rubrique <a href="#html_block">Blocs TBS</a>.</div>
  <span class="title-1b"><br>
  </span> <span class="title-1b">Fusionner plusieurs blocs avec les mêmes données :</span><br>
  <div class="decal"><br>
    Vous pouvez fusionner plusieurs blocs avec les mêmes données en indiquant leurs noms séparés par des virgules dans l'argument <span class="opt-name">NomBloc</span>. Dans ce cas, la requête n'est ouverte qu'une seule fois et les enregistrements sont mis dans un cache afin de remplir les blocs.<br>
    Exemple : <span class="txt-code"><span class="opt-name">$TBS</span>-&gt;MergeBlock(<span class="opt-value">'bloc1,bloc2,bloc3'</span>,<span class="opt-value">'mysql'</span>,<span class="opt-value">'SELECT * FROM MaTable'</span>);</span></div>
  <span class="title-1b"><br>
  Retourner l'ensemble des enregistrements fusionn&eacute;s :</span>
  <div class="decal"><br>
  Dans certains cas, il vous sera peut &ecirc;tre pratique de r&eacute;cup&eacute;rer l'ensemble des enregistrements fusionn&eacute;s apr&egrave;s la fusion. Pour cela, il suffit d'ajouter le mot-cl&eacute; <span class="opt-value">'*'</span> dans la liste des noms de bloc. Utilisez cet fontionnalit&eacute; avec partimonie car elle conserve les donn&eacute;es fusionn&eacute;es en m&eacute;moire ce qui consomme plus ressource.<br>
    Exemple : <span class="opt-name">$data</span> = <span class="opt-name"><span class="txt-code">$TBS</span></span><span class="txt-code">-&gt;MergeBlock(<span class="opt-value">'bloc1,*'</span>,<span class="opt-value">'mysql'</span>,<span class="opt-value">'SELECT * FROM MaTable'</span>);</span></div>
  <span class="title-1b"><br>
  <a name="php_mergeblock_counting"></a>Décompte des enregistrements :</span><br>
  <br>
  <div class="decal">Pour afficher le numéro d'enregistrement adns le mod&egrave;le, utilisez un champ TBS lié à la colonne virtuelle '<span class="opt-value">#'</span>. 
    Si vous placez ce champ en dehors du bloc, il affichera le nombre total d'enregistrements.<br>
    Exemple : <span class="opt-value">[bloc1.#]<br>
    <br>
    </span> La colonne virtuelle '<span class="opt-value">$'</span> permet d'afficher la clé de l'enregistrement en cours lorsque la source de données est un tableau Php (array).<br>
    Exemple: <span class="opt-value">[bloc1.$]</span><span class="opt-value"></span></div>
  <br>
  <span class="title-1b">Utilisation des arguments Source et Requête selon le type de source de données :</span><br>
  <br>
  <table cellpadding="2" cellspacing="0" class="border-0">
    <tr bgcolor="#B2B2B2" class="title-1c">
      <td width="110" class="border-0">Type de source de données</td>
      <td width="200" class="border-0">Source<span class="opt-name"></span></td>
      <td width="200" class="border-0">Requête</td>
    </tr>
    <tr valign="top">
      <td class="border-0">Texte <span class="txt-tiny">(*)</span></td>
      <td class="border-0">Le mot-clé <span class="opt-value">'text'</span></td>
      <td valign="top" class="border-0">Un texte</td>
    </tr>
    <tr valign="top">
      <td class="border-0">Nombre <span class="txt-tiny">(*)</span></td>
      <td class="border-0">Le mot-clé <span class="opt-value">'num'</span></td>
      <td valign="top" class="border-0">Un nombre<br>
        ou un tableau spécial (voir plus bas)</td>
    </tr>
    <tr valign="top">
      <td class="border-0">Vide<span class="txt-tiny"> (*)</span></td>
      <td class="border-0">Le mot-clé <span class="opt-value">'clear'</span></td>
      <td class="border-0">-</td>
    </tr>
    <tr valign="top">
      <td class="border-0">Conditionnel<span class="txt-tiny"> (*)</span></td>
      <td class="border-0">Le mot-clé <span class="opt-value">'cond'</span></td>
      <td class="border-0">-</td>
    </tr>
    <tr valign="top">
      <td rowspan="3" class="border-0">Tableau PHP <span class="txt-tiny">(*)</span></td>
      <td valign="top" class="border-0">Un tableau Php</td>
      <td valign="top" class="border-0">-</td>
    </tr>
    <tr>
      <td valign="top" class="border-0">Le mot-clé <span class="opt-value">'array'</span></td>
      <td valign="top" class="border-0">Un tableau Php</td>
    </tr>
    <tr>
      <td valign="top" class="border-0">Le mot-clé <span class="opt-value">'array'</span></td>
      <td valign="top" class="border-0">Une chaîne texte qui représente un tableau contenu ou encapsulé dans une variable PHP globale (voir ci-après) </td>
    </tr>
    <tr valign="top">
      <td rowspan="2" class="border-0">MySQL</td>
      <td valign="top" class="border-0">Une ressource de connexion MySql ou le mot-clé <span class="opt-value">'mysql'</span></td>
      <td valign="top" class="border-0">Une requête SQL</td>
    </tr>
    <tr>
      <td valign="top" class="border-0">Une ressource de résultat MySql</td>
      <td valign="top" class="border-0">-</td>
    </tr>
    <tr valign="top">
      <td rowspan="2" class="border-0">PostgreSQL</td>
      <td valign="top" class="border-0">Une ressource de connexion PostgreSql</td>
      <td valign="top" class="border-0">Une requête SQL</td>
    </tr>
    <tr>
      <td valign="top" class="border-0">Une ressource de résultat PostgreSql</td>
      <td valign="top" class="border-0">-</td>
    </tr>
    <tr valign="top">
      <td rowspan="2" class="border-0">SQLite</td>
      <td valign="top" class="border-0">Une ressource de connexion SQLite</td>
      <td valign="top" class="border-0">Une requête SQLite</td>
    </tr>
    <tr>
      <td valign="top" class="border-0">Une ressource de résultat SQLite</td>
      <td valign="top" class="border-0">-</td>
    </tr>
    <tr valign="top">
      <td class="border-0">Personnalisé<br>      </td>
      <td valign="top" class="border-0">Un mot-clé, un objet ou une ressource non listé dans ce tableau.<br>
        Voir le paragraphe '<a href="#plugins_db">plug-ins de base de donn&eacute;es</a>'.</td>
      <td valign="top" class="border-0">Une requête SQL ou autre chose.</td>
    </tr>
  </table>
  <span class="txt-tiny">(*) Voir explications dans la rubrique ci-après.</span><br>
  <br>
  <span class="title-1b">Source de données Php :<br>
  <br>
  </span>
  <div class="decal"> <span class="title-1c">Texte</span><br>
    <div class="decal">L'argument <span class="opt-name">Source</span> doit être égale à <span class="opt-value">'text'</span>.<br>
      Tout le bloc est remplacé par le texte contenu dans la paramètre <span class="opt-name">Requête</span>. Les champs liés ne sont pas gérés sauf '<span class="opt-value">#'</span> qui retourne 1, ou 0 si <span class="opt-name">Requête</span> est une chaîne vide.<br>
    Exemple : <span class="txt-code"><span class="opt-name">$TBS</span>-&gt;MergeBlock(<span class="opt-value">'b1'</span>,<span class="opt-value">'text'</span>,<span class="opt-value">'Bonjour, comment allez-vous ?'</span>); </span></div>
    <br>
    <span class="title-1c">Nombre</span><br>
    <div class="decal">L'argument<span class="opt-name"> </span><span class="opt-name">Source</span> doit être égale à <span class="opt-value">'num'</span>.<br>
      L'argument <span class="opt-name">Requête</span> peut être soit un nombre, soit un tableau.<br>
      <br>
      <table border="0" cellspacing="0" cellpadding="0">
        <tr>
          <td width="80" class="title-1b">arg&nbsp;Requête</td>
          <td class="title-1b">Jeu d'enregistrements retourné</td>
        </tr>
        <tr>
          <td valign="top">Nombre :</td>
          <td>Ce nombre doit être supérieur ou égale à zéro. Le jeu d'enregistrement retourné est composé d'une colonne <span class="opt-value">'val'</span> dont la valeur va de 1 à ce nombre.</td>
        </tr>
        <tr>
          <td valign="top">Tableau :</td>
          <td>Ce tableau doit contenir une clé <span class="opt-value">'min'</span> et une clé <span class="opt-value">'max'</span> et éventuellement une clé <span class="opt-value">'step'</span>.<br>
            Le jeu d'enregistrement retourné est composé d'une colonne <span class="opt-value">'val'</span> qui va de la valeur de <span class="opt-value">'min'</span> à la valeur de <span class="opt-value">'max'</span>.</td>
        </tr>
      </table>
      Exemples :<br>
    <div class="decal"><span class="txt-code"><span class="opt-name">$TBS</span>-&gt;MergeBlock(<span class="opt-value">'b1'</span>,<span class="opt-value">'num'</span>,<span class="opt-value">12</span>);</span><br>
        <span class="txt-code"><span class="opt-name">$TBS</span>-&gt;MergeBlock(<span class="opt-value">'b2'</span>,<span class="opt-value">'num'</span>,array(<span class="opt-value">'min'</span>=&gt;<span class="opt-value">20</span>,<span class="opt-value">'max'</span>=&gt;3<span class="opt-value">0</span>));</span><br>
      <span class="txt-code"><span class="opt-name">$TBS</span>-&gt;MergeBlock(<span class="opt-value">'b3'</span>,<span class="opt-value">'num'</span>,array(<span class="opt-value">'min'</span>=&gt;<span class="opt-value">10</span>,<span class="opt-value">'max'</span>=&gt;<span class="opt-value">20</span>,<span class="opt-value">'step'</span>=&gt;<span class="opt-value">2</span>));</span></div>
    </div>
    <br>
    <span class="title-1c">Vide</span><br>
    <div class="decal">L'argument <span class="opt-name">Source</span> doit être le mot-clé <span class="opt-value">'clear'</span>.<br>
      Tous les blocs et leurs sections sont supprimés. C'est la même chose que fusionner avec un tableau vide.<br>
    Exemple : <span class="txt-code"><span class="opt-name">$TBS</span>-&gt;MergeBlock(<span class="opt-value">'b1'</span>,<span class="opt-value">'clear'</span>); </span></div>
    <br>
    <span class="title-1c">Conditionnel</span><br>
    <div class="decal">L'argument <span class="opt-name">Source</span> doit être le mot-clé <span class="opt-value">'cond'</span>.<br>
      Le bloc est fusionné comme si c'était un <a href="#html_conditional_section">bloc conditionnel</a> <span class="opt-name">onload</span> et <span class="opt-name">onshow</span>. Le bloc n'est pas fusionné avec des données et donc il ne doit pas avoir de champ TBS lié. Chaque section de bloc doit avoir un paramètre <span class="opt-name">when</span> ou un paramètre <span class="opt-name">default</span>. Voir <a href="#html_conditional_section">bloc conditionnel</a> pour plus de détails.<br>
    Exemple : <span class="txt-code"><span class="opt-name">$TBS</span>-&gt;MergeBlock(<span class="opt-value">'bz'</span>,<span class="opt-value">'cond'</span>); </span></div>
    <br>
    <span class="title-1c">Tableau</span><br>
    <div class="decal">L'argument <span class="opt-name">Source</span> doit être un tableau Php (type Array), ou le mot-clé <span class="opt-value">'array'</span>. Si le mot-clé <span class="opt-value">'array'</span> est utilisé, alors l'argument <span class="opt-name">Requête</span> doit être un tableau Php ou une chaîne texte qui représente tableau contenu ou encapsulé par une variable Php globale.<br>
      <br>
      <span class="title-1b">Syntaxe de la chaîne :</span> <span class="opt-value">'globvar[item1][item2]...'</span><br>
      <div class="decal">'globvar' est le nom d'un variable globale $globvar qui doit être un tableau.<br>
        'item1' et 'item2' sont des clés d'un item ou d'un sous item de $globvar.<br>
        Exemple:<br>
        <div class="decal"> <span class="txt-code"><span class="opt-name">$TBS</span>-&gt;MergeBlock(<span class="opt-value">'bloc1'</span>,<span class="opt-value">'array'</span>,<span class="opt-value">'jours[lun]'</span>);</span><br>
          Cela va fusionner 'block1' avec $jours['lun'] qui est suppos&eacute; &ecirc;tre un tableau.</div>
        Il est possible de représenter un nom de variable sans item.<br>
        Exemple:<br>
        <div class="decal"> <span class="txt-code"><span class="opt-name">$TBS</span>-&gt;MergeBlock(<span class="opt-value">'bloc1'</span>,<span class="opt-value">'array'</span>,<span class="opt-value">'jours'</span>);</span></div>
      </div>
      <br>
      Il y a deux avantages à utiliser une chaîne pour représenter le tableau :<br>
      -&gt; Les items seront lus directement dans le tableau (assigné par référence) au lieu de lire une copie des items. Cela peut améliorer les performances. <br>
      -&gt; Vous pouvez utiliser des requêtes dynamiques.<br>
      <br>
      <span class="title-1b">Afficher la clé de l'enregistrement en cours : </span> <br>
      Vous pouvez utiliser la colonne virtuelle '<span class="opt-value">$'</span> qui affiche la clé de l'enregistrement en cours. Cela peut être particulièrement utile pour les <a href="#html_block_subblock">requêtes dynamiques et sous-blocs</a>. <br>
      Exemple: [bloc1.$]<br>
      <span class="title-1b"><br>
      Structure des tableaux supportés :</span> <br>
      Les items du tableau spécifié peuvent être de deux types : des valeurs simples avec des clés associées (cas&nbsp;1), ou des valeurs tableaux dont les items sont eux-mêmes des valeurs simples avec des clés associées (cas&nbsp;2).<br>
      <br>
      Cas 1 :<br>
      <table  border="0" cellpadding="0" cellspacing="0">
        <tr>
          <td width="80" valign="top">Exemple : </td>
          <td valign="top">['clé1']=&gt;valeur1<br>
            ['clé2']=&gt;valeur2<br>
            ...</td>
        </tr>
      </table>
      Le jeu d'enregistrement retourné est composé d'une colonne <span class="opt-value">'key'</span> contenant le nom de la clé, et d'une colonne <span class="opt-value">'val'</span> contenant la valeur de la clé.<br>
      <br>
      Cas 2 :<br>
      <table  border="0" cellpadding="0" cellspacing="0">
        <tr>
          <td width="80" valign="top">Exemple : </td>
          <td valign="top">[0] =&gt; (['colonne1']=&gt;valeur1-0 ; ['colonne2']=&gt;valeur2-0 ; ...)<br>
            [1] =&gt; (['colonne1']=&gt;valeur1-1 ; ['colonne2']=&gt;valeur2-1 ; ...)<br>
            [2] =&gt; (['colonne1']=&gt;valeur1-2 ; ['colonne2']=&gt;valeur2-2 ; ...)<br>
            ...</td>
        </tr>
      </table>
      Le jeu d'enregistrement retourné est composé des colonnes <span class="opt-value">'colonne1'</span>, <span class="opt-value">'colonne2'</span>, ... avec leurs valeurs associées.</div>
  </div>
</div>
<div class="title-2"><a name="php_show" id="php_show"></a>Méthode Show() :</div>
<div class="norm"><span class="zone-normal">Termine la fusion.<br>
  <br>
  Syntaxe : <span class="txt-code"><span class="opt-name">$TBS</span>-&gt;Show(<span class="opt-name"><font color="#333333">{</font></span><span class="opt-type">int</span><span class="opt-name"> </span><span class="opt-name">Render</span><span class="opt-name"></span><span class="opt-name"><font color="#333333">}</font></span>)</span><br>
  <br>
  La méthode Show() exécute les actions suivantes :<br>
  - fusion des champs <a href="#html_field_var">[var]</a>,<br>
  - fusion des champs <a href="#html_automatic">[onshow]</a>,<br>
  - affiche le résultat (cette action peut être annulée par la propriété ou l'argument <a href="#php_render">Render</a>),<br>
  - termine le script (cette action peut être annulée par la propriété ou l'argument <a href="#php_render">Render</a>). <br>
  <br>
  La propriété et l'argument  <a href="#php_render">Render</a> permetent de régler le comportement de la méthode Show().</span> Consultez la propri&eacute;t&eacute; <a href="#php_render">Render</a> pour plus d'information. </div>
<div class="title-2"><a name="php_getblocksource" id="php_getblocksource"></a>Méthode GetBlockSource() :</div>
<div class="norm">Retourne le source d'un bloc TBS.<br>
  Seule la définition de la première section du bloc sera retournée à moins que l'argument <span class="opt-name">Sections</span> soit à <span class="txt-code"><em><font color="#0033CC">True</font></em></span>.<br>
  Si aucun bloc n'est trouvé, la méthode retourne la valeur <span class="txt-code"><em><font color="#0033CC">False</font></em></span>.<br>
  <br>
  Syntaxe : <span class="txt-code"><span class="opt-type">string</span> <span class="opt-name"></span><span class="opt-name">$TBS</span>-&gt;GetBlockSource(<span class="opt-type">string </span><span class="opt-name">NomBloc </span>{,<span class="opt-type"> boolean</span> <span class="opt-name">Sections</span>}{,<span class="opt-type"> boolean</span> <span class="opt-name">BalisesDef</span>})</span> <br>
  <br>
  <table border="0" cellpadding="5" cellspacing="0">
    <tr class="title-1b">
      <td width="80" align="left" valign="top">Argument</td>
      <td align="left" valign="top">Description</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">NomBloc</td>
      <td align="left" valign="top">Nom du bloc à rechercher.<br>      </td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">Sections</td>
      <td align="left" valign="top">Facultatif. La valeur par défaut est <span class="txt-code"><em><font color="#0033CC">False</font></em></span>.<br>
        Si ce paramètre est à <span class="txt-code"><em><font color="#0033CC">True</font></em></span>, la méthode retourne un tableau contenant les définitions de toutes les sections du bloc nommé. La première section est retournée dans l'élément [1] du tableau.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">BalisesDef</td>
      <td align="left" valign="top">Facultatif. La valeur par d&eacute;faut est <span class="txt-code"><em><font color="#0033CC">True</font></em></span>.<br>
        Par d&eacute;faut, la m&eacute;thode GetBlockSource() retourne le source du bloc avec ses balises de d&eacute;finition. Si vous souhaitez que ces balises soient retir&eacute;es, forcez l'argument<span class="opt-name"> BalisesDef</span> &agrave; <em><font color="#0033CC">False</font></em>. Si le bloc est d&eacute;fini avec une <a href="#html_block">syntaxe simplifi&eacute;e</a> alors les balises de d&eacute;finition de bloc ne seront de toute fa&ccedil;on pas supprim&eacute;es car elles sont aussi des balises de champ.<br>
        <div class="versioning">Historique : cet argument est support&eacute; depuis TBS version 3.0.</div> </td>
    </tr>
  </table>
  <span class="txt-code"> </span><br>
  Cette méthode permet de récupérer le source d'un bloc afin de gérer manuellement sa fusion. 
  Si par la suite vous souhaitez remplacer le bloc par du texte, vous pouvez utiliser ma méthode <a href="#php_mergeblock">MergeBlock()</a> avec le paramètre '<span class="opt-value">text</span>'.</div>
<div class="title-2"><a name="php_mergefield" id="php_mergefield"></a>Méthode MergeField() :</div>
<div class="norm">Fusionne un ou plusieurs champs TBS avec une valeur fixe ou en appelant une fonction utilisateur.<br>
	Depuis TBS version 3.0, il est aussi possible d'indiquer une m&eacute;thode de classe (voir <a href="#php_oop">POO</a>).<br>
  Tous les champs du mod&egrave;le ayant le nom de base indiqu&eacute; seront fusionn&eacute;s.<br>
  Il est aussi possible de fusionner les champs sp&eacute;ciaux [var], [onload] et [onshow] (voir plus bas). <br>
  <br>
  Syntaxe : <span class="txt-code"><span class="opt-name">$TBS</span>-&gt;MergeField(<span class="opt-type">string </span><span class="opt-name">NomBase</span>,<span class="opt-type"> mixed</span> <span class="opt-name">X</span><span class="opt-name"> </span>{,<span class="opt-type"> boolean</span> <span class="opt-name">ModeFonction</span>})</span> <br>
  <br>
  <table border="0" cellpadding="5" cellspacing="0">
    <tr class="title-1b">
      <td width="80" align="left" valign="top">Argument</td>
      <td align="left" valign="top">Description</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">NomBase</td>
      <td align="left" valign="top">Le nom de base des champs TBS. Par exemple <span class="opt-value">'compte'</span>.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">X</td>
      <td align="left" valign="top">La valeur à afficher (ou une cha&icirc;ne repr&eacute;sentant le nom d'une fonction utilisateur si l'argument <span class="opt-name">ModeFonction</span> est &agrave; <span class="opt-value">true</span>).</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">ModeFonction</td>
      <td align="left" valign="top"><p>Indique que la valeur à afficher est calculée par une fonction utilisateur. La valeur par défaut est <span class="opt-value">false</span>. Si cet argument est à <span class="opt-value">true</span>, alors <span class="opt-name">X</span> doit être une chaîne texte donnant le nom de la fonction utilisateur. Cette fonction doit exister et avoir la syntaxe décrite ci-après.</p></td>
    </tr>
  </table>
  <br>
  <span class="title-1b">Fusion avec une valeur :</span><br>
  <br>
  <span class="opt-name">X</span> peut &ecirc;tre un num&eacute;rique, une cha&icirc;ne, un tableau ou un objet. Pour un tableau ou un object, les noms de champs TBS doivent avoir des suffixes commes pour les <a href="#html_field_var">champs [var]</a>.<br>
  <br>
  Exemple : <br>
  <div class="decal">
    <div class="txt-code"><span class="opt-name">$TBS-&gt;</span>MergeField(<span class="opt-value">'compte'</span>,array(<span class="opt-value">'id'</span>=&gt;<span class="opt-value">55</span>,<span class="opt-value">'nom'</span>=&gt;<span class="opt-value">'Bob'</span>));<br>
    </div>
    <div class="txt-small">Dans cet exemple, les champs <span class="opt-value"></span>[compte.id] et [compte.nom] seront fusionn&eacute;s.</div>
  </div>
  <br>
  <span class="title-1b">Fusion avec une fonction utilisateur :</span><br>
  <br>
  TBS appelle une fonction utilisateur pour chaque champ trouvé dans le modèle.<br>
  Cette fonction doit avoir la syntaxe suivante:<br>
  <div class="decal txt-code">function fct_utilisateur(<span class="opt-name">$Subname</span> [, <span class="opt-name">$PrmLst</span>]) {...}</div>
  Lors de l'appel à la fonction, son argument <span class="opt-name">$Subname</span> a pour valeur le suffixe du nom du champ (par exemple pour un champ nommé <span class="opt-value">'ml.titre'</span>, <span class="opt-name">$Subname</span> aura pour valeur <span class="opt-value">'titre')</span>. Et l'argument optionel <span class="opt-name">$PrmLst</span> contient un tableau associatif avec les paramètres du champ. La fonction doit retourner la valeur à fusionner. <br>
  <br>
  Exemple : <br>
  <div class="decal">
    <div class="txt-code"><span class="opt-name">$TBS-&gt;</span>MergeField(<span class="opt-value">'ml'</span>,<span class="opt-value">'m_multilangue'</span>,<span class="opt-value">true</span>);<br>
      ...<br>
      function m_multilangue(<span class="opt-name">$Subname</span>) {<br>
&nbsp;&nbsp;global <span class="opt-name">$langue_id</span>; <br>
&nbsp;&nbsp;<span class="opt-name">$rs</span> = mysql_query(<span class="opt-value">&quot;SELECT texte_$langue_id AS txt FROM t_langue WHERE cle='$Subname&quot;</span>);<br>
&nbsp;&nbsp;<span class="opt-name">$rec</span> = mysql_fetch_array(<span class="opt-name">$rs</span>);<br>
&nbsp;&nbsp;return <span class="opt-name">$rec</span>[<span class="opt-value">'txt'</span>] ;<br>
      }</div>
    <div class="txt-small">Dans cet exemple, un champ tel que <span class="opt-value">[ml.titre]</span> sera fusionné avec la valeur retournée par <span class="opt-value">m_multilangue('titre')</span>.</div>
  </div>
  <span class="title-1b"><br>
  Fusion de champs sp&eacute;ciaux :</span><br>
  <br>
  Vous pouvez vous servir de la m&eacute;thode MergeField() pour forcer la fusion des champs sp&eacute;ciaux <a href="#html_field_var">[var]</a>, <a href="#html_automatic">[onload]</a> et <a href="#html_automatic">[onshow]</a>. Mais dans ce cas, seul le premier argument doit &ecirc;tre indiqu&eacute;.<br>
  Exemple :  <span class="txt-code"><span class="opt-name">$TBS-&gt;</span>MergeField(<span class="opt-value">'var'</span>);<br>
  </span>
  <div class="versioning">Historique : la fusion des champs sp&eacute;ciaux est support&eacute; depuis TBS version 3.0. Elle remplace l'ancienne m&eacute;thode MergeSpecial() qui n'est plus support&eacute;e. <br>
    <br>
</div>
</div>
<div class="title-2"><a name="php_plugin" id="php_plugin"></a>M&eacute;thode PlugIn() :</div>
<div class="norm">Permet d'appeler une commande d'un <a href="#plugins_tbs">plug-in TBS</a> ou d'installer un plug-in TBS. <br>
	<br>
	Syntaxe : <span class="opt-type"><span class="txt-code">mixed</span></span> <span class="txt-code"><span class="opt-name">$TBS</span>-&gt;PlugIn(<span class="opt-type"><span class="opt-value">mixed</span></span> arg1, <span class="opt-type">mixed</span> arg2, ...)</span><br>
	<br>
	<span class="title-1b">Rappel :</span> pour que votre plug-in TBS fonctionne, sont script PHP doit pr&eacute;alablement &ecirc;tre ins&eacute;r&eacute; dans votre application.<br>
	Exemple : <span class="txt-code"><span class="opt-name">include_once</span>(<span class="opt-value">'tbs_plugin_xxx.php'</span>);
	</span><br>
	De plus, chaque plug-in TBS doit avoir une cl&eacute; comme expliqu&eacute; au chapitre <a href="#plugins_tbs">Plug-ins</a>.<br>
	<br>
	<span class="title-1c">Appeler une commande d'un plug-in :</span><br>
	Utilisez la cl&eacute; du plug-in comme argument principal. Les arguments suivants sont propres au plug-in appel&eacute;. <br>
	Exemple : <br>
	<div class="decal">
		<div class="txt-code"><span class="opt-name">$TBS-&gt;</span>PlugIn(<span class="opt-value">TBS_XXX</span>,<span class="opt-name">$arg1</span>,<span class="opt-name">arg2</span>);</div>
		<span class="txt-small">Dans	cet exemple,	le plug-in identifi&eacute; par la cl&eacute; TBS_XXX est invoqu&eacute;.</span></div>
	<span class="title-1b">Remarque :</span> lorsque vous vous appelez une commande d'un plug-in pour la premi&egrave;re fois, ce plug-in  est install&eacute; automatiquement sur l'instance TBS (<span class="opt-name">$TBS</span>).<br>
	<br>
	<span class="title-1c">Installer un plug-in  : </span><br>
	Bien que certains plug-in soient install&eacute;s automatiquement, dans d'autres cas il peut &ecirc;tre utile de faire une installation manuelle. Pour cela on utilise la constante TBS_INSTALL avec la cl&eacute; du plug-in .<br>
	Exemple : <br>
	<br>
	<div class="decal">
		<div class="txt-code"><span class="opt-name">$TBS-&gt;</span>PlugIn(<span class="opt-value">TBS_INSTALL</span>,<span class="opt-value">TBS_XXX</span>);</div>
   	<span class="txt-small">Dans	cet exemple,	le plug-in identifi&eacute; par la cl&eacute; TBS_XXX est install&eacute;.</span> </div>
	<span class="title-1b">Remarques :</span><br>
	* Un plug-in est install&eacute; relativement &agrave; une instance de TBS (une variable <span class="opt-name">$TBS</span> par exemple ). Si vous utilisez une deuxi&egrave;me instance de TBS (par exemple <span class="opt-name">$TBS2</span>) alors il vous faudra aussi installer le plug-in sur cette intance. <br>
	* 
	Un plug-ins est install&eacute; automatiquement lors que vous appelez une de ses commandes &agrave; l'aide de la m&eacute;thode PlugIn() (voir plus haut).<br>
	<br>
	<br>
	<div class="versioning">Historique : la m&eacute;thode PlugIn() est support&eacute;e depuis TBS version 3.0. </div>
</div>
<div class="title-2"><a name="php_noerr" id="php_noerr"></a>Propri&eacute;t&eacute; NoErr :</div>
<div class="norm"> Permet d'emp&ecirc;cher l'affichage de tous les messages d'erreur TinyButStrong pour les op&eacute;rations qui suivent. Par d&eacute;faut la valeur est &agrave; <span class="opt-value">false</span>. Cette propri&eacute;t&eacute; est d&eacute;di&eacute;e aux  sites professionnels mis en production, car vous n'aurez plus aucune indication sur le bon d&eacute;roulement de votre fusion. Il est souvent plus judicieux d'utiliser le param&egrave;tre <a href="#html_field_prm_noerr" class="opt-name">noerr</a>  qui permet d'annuler des messages sur une balise TBS bien pr&eacute;cise. <br>
	<br>
	Syntaxe : <span class="txt-code"><span class="opt-type">boolean</span> <span class="opt-name">$TBS</span>-&gt;NoErr<br>
	<br>
	</span>Exemple : <br>
	<div class="decal">
		<div class="txt-code"><span class="opt-name">$TBS-&gt;</span>NoErr = <span class="opt-value">true</span>; <span class="opt-html">// plus aucun message d'erreur ne s'affiche. </span><br>
</div>
	</div>
	<br>
	<div class="versioning">Historique : la propri&eacute;t&eacute; NoErr est support&eacute; depuis TBS version 3.0. </div>
</div>
<div class="title-2"><a name="php_render" id="php_render"></a>Propriété Render :</div>
<div class="norm"> Détermine comment doit se terminer la fusion.<br>
  Sa valeur doit être une combinaison des constantes du tableau ci-dessous.<br>
  Par défaut, sa valeur est (<span class="opt-value">TBS_OUTPUT</span> + <span class="opt-value">TBS_EXIT</span>).<br>
  <br>
  Syntaxe : <span class="txt-code"><span class="opt-type">int</span> <span class="opt-name">$TBS</span>-&gt;Render<br>
  <br>
  </span>La propriété Render influe sur le comportement des méthodes <a href="#php_show">Show()</a>.<br>
  <br>
  <table border="0" cellpadding="5" cellspacing="0">
    <tr class="title-1b">
      <td width="80" align="left" valign="top">Constante</td>
      <td align="left" valign="top">Description</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-value">TBS_NOTHING</td>
      <td align="left" valign="top">Indique que aucune action ci-dessous n'est effectuée à la fin de la fusion.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-value">TBS_OUTPUT</td>
      <td align="left" valign="top">Indique que le résultat de la fusion doit être affiché. (utilisation de la commande PHP Echo)</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-value">TBS_EXIT</td>
      <td align="left" valign="top">Indique qu'on doit quitter le script juste après la fin de la fusion.</td>
    </tr>
  </table>
</div>
<div class="title-2"><a name="php_source" id="php_source"></a>Propriété Source :</div>
<div class="norm">Cette propri&eacute;t&eacute; contient le source du mod&egrave;le en cours de fusion. Elle est en lecture/&eacute;criture. <br>
	Lorsque TinyButStrong op&egrave;re une fusion (en utilisant la m&eacute;thode MergeBlock() par exemple), la propri&eacute;t&eacute; Source est  modifi&eacute;e imm&eacute;diatement. <br>
	<br>
	Syntaxe : <span class="txt-code"><span class="opt-type">string</span> <span class="opt-name">$TBS</span>-&gt;Source</span><br>
	<br>
	Remarques : <br>
	- La m&eacute;thode <a href="#php_loadtemplate">LoadTemplate()</a> charge un fichier dans la propri&eacute;t&eacute; Source et fusionne automatiquement les champs <a href="#html_automatic">[onload]</a>. Il se peut donc que Source soit un peu diff&eacute;rent du mod&egrave;le initial apr&egrave;s LoadTemplate(). <br>
	- La m&eacute;thode <a href="#php_show">Show()</a> fusionne automatiquement les champs <a href="#html_automatic">[onshow]</a> et <a href="#html_field_var">[var]</a> avant d'afficher le r&eacute;sultat.
	<br>
	<br>
	Pour charger un mod&egrave;le  contenue dans une variable Php, vous pouvez coder : <br>
<div class="decal"><span class="opt-name">$TBS</span>-&gt;Source = <span class="opt-name">$mon_modele</span>;<br>
	<span class="opt-name">$TBS</span>-&gt;MergeField(<span class="opt-value">'onload'</span>); <span class="opt-html">// force la fusion des champs [onload] si il y en a</span></div>
<br>
Pour r&eacute;cup&eacute;rer le r&eacute;sultat &agrave; la fin d'une fusion, vous pouvez coder :<br>
<div class="decal"><span class="opt-name">$TBS</span>-&gt;Show(<span class="opt-value">TBS_NOTHING</span>) <span class="opt-html">// termine la fusion sans quitter ni afficher le r&eacute;sultat</span><br>
	<span class="opt-name">$resultat</span> = <span class="opt-name">$TBS</span>-&gt;Source;</div>
</div>
<div class="title-2"><a name="php_tplvars" id="php_tplvars"></a>Propriété TplVars :</div>
<div class="norm">Contient le tableau des variables de modèle correspondant au modèle en cours.<br>
  <br>
  Syntaxe : <span class="txt-code"><span class="opt-type">array</span> <span class="opt-name">$TBS</span>-&gt;TplVars<br>
  </span><br>
  Vous pouvez définir des variables de modèle en utilisant un ou des <a href="#html_automatic">champs automatiques</a> <span class="opt-name">onload</span> avec le paramètre <span class="opt-name">tplvars</span>. 
  Tous les  paramètres qui suivent le paramètre <span class="opt-name">tplvars</span> sont ajoutés à la propriété TplVars quand la méthode LoadTemplate() est appelée.<br>
  <div class="decal">Exemple :<br>
&nbsp;&nbsp;[<span class="opt-name">onload</span>;<span class="opt-name">tplvars</span>;<span class="opt-name">template_version</span>=<span class="opt-value">'1.12.27'</span>;<span class="opt-name">template_date</span>=<span class="opt-value">'2004-10-26'</span>]<br>
    <span class="txt-small">Cette balise TBS va créer deux items équivalents au code PHP suivant : </span><br>
    <span class="txt-code"><span class="opt-name">&nbsp;$TBS</span>-&gt;TplVars[<span class="opt-value">'template_version'</span>] = <span class="opt-value">'1.12.27'</span>;</span><br>
    <span class="txt-code"><span class="opt-name">&nbsp;$TBS</span>-&gt;TplVars[<span class="opt-value">'template_date'</span>] = <span class="opt-value">'2004-10-26'</span>;</span> <br>
  </div>
  Remarques :<br>
  - Le paramètre <span class="opt-name">tplvars</span> ne fonctionne que avec les <a href="#html_automatic">champs automatiques</a> <span class="opt-name">onload</span>.<br>
  - Vous pouvez utiliser le paramètre <span class="opt-name">tplvars</span> plusieurs fois dans le même modèle. <br>
</div>
<div class="title-2" id="v202_oop_title"><a name="php_oop" id="php_oop"></a>Programmation Orient&eacute;e Objet (POO):</div>
<div class="norm" id="v202_oop"> TinyButStrong int&egrave;gre une technique pour faire appel &agrave; des m&eacute;thodes ou des propri&eacute;t&eacute;s d'objets que vous avez cod&eacute;s du c&ocirc;t&eacute; PHP.<br>
  <br>
  <span class="title-1c">Appels &agrave;  des m&eacute;thodes de classe sans objet cr&eacute;es  :</span> <br> 
  <div class="decal">Les fonctionnalit&eacute;s TBS suivantes supportent l'appel &agrave; des m&eacute;thodes de classe sans objet cr&eacute;es.
  	<div class="decal"><table width="100%"  border="0" cellspacing="0" cellpadding="2">
  		<tr class="title-1b">
  			<td width="180">Fonctionnalit&eacute;</td>
				<td>Exemple</td>
			</tr>
  		<tr id="v205_ondata_ooo">
  			<td>Param&egrave;tre <a href="#html_block_prm_ondata">ondata</a></td>
				<td>[<span class="opt-name">blk1</span>.colonne1;<span class="opt-name">block</span>=<span class="opt-value">tr</span>;<span class="opt-name">ondata</span>=<span class="opt-value">MaClasse.methA</span>]</td>
			</tr>
  		<tr>
  			<td>Param&egrave;tre <a href="#html_field_prm_onformat">onformat</a></td>
				<td>[<span class="opt-name">blk1</span>.colonne2;<span class="opt-name">onformat</span>=<span class="opt-value">MaClasse.methB</span>]</td>
			</tr>
  		<tr>
  			<td>M&eacute;thode <a href="#php_loadtemplate">LoadTemplate()</a></td>
				<td>$TBS-&gt;<span class="opt-name">LoadTemplate</span>(<span class="opt-value">'monmodele.htm'</span>,<span class="opt-value">'=MaClasse.methC'</span>);</td>
			</tr>
  		<tr>
  			<td>M&eacute;thode <a href="#php_mergefield">MergeField()</a></td>
				<td>$TBS-&gt;<span class="opt-name">MergeField</span>(<span class="opt-value">'nomchamp'</span>,<span class="opt-value">'MaClasse.methD'</span>,<span class="opt-value">true</span>);</td>
			</tr>
  		</table>
		</div>	
  	<span class="title-1b">Remarque :</span> 
  	Les m&eacute;thodes appel&eacute;es par cette technique doivent respecter la syntaxe de fonction attendue par la fonctionnalit&eacute; (voir description de la fonctionnalit&eacute; correspondante).</div>
  <br>
  <span class="title-1c">Appels &agrave; des objet cr&eacute;es  :</span> <br>
  <br>
  <div class="decal">TBS poss&egrave;de un propri&eacute;t&eacute; ObjectRef qui est &agrave; <span class="opt-type">false</span> par d&eacute;faut, et dont vous pouvez vous servir pour r&eacute;f&eacute;rencer vos objets d&eacute;j&agrave; cr&eacute;es. Vous pouvez r&eacute;f&eacute;rencer un objet directement sur la propri&eacute;t&eacute; ObjectRef, ou bien vous pouvez en r&eacute;f&eacute;rencer plusieurs &agrave; l'aide de tableaux PHP.<br>
 		Exemple :
 		<br>
		<div class="decal"> <span class="txt-code"><span class="opt-name">$TBS</span>-&gt;ObjectRef =&amp; <span class="opt-name">$MonObjet1</span>;</span><br>
			&nbsp;&nbsp;&nbsp;Vous pouvez utiliser un tableau si vous avez plusieurs objets &agrave; r&eacute;f&eacute;rencer :<br>
			<span class="txt-code"><span class="opt-name">$TBS</span>-&gt;ObjectRef[<span class="opt-value">'item1'</span>] =&amp; <span class="opt-name">$MonObjet1</span>;</span><br>
			<span class="txt-code"><span class="opt-name">$TBS</span>-&gt;ObjectRef[<span class="opt-value">'item2'</span>] =&amp; <span class="opt-name">$MonObjet2</span>;</span><br>
			&nbsp;&nbsp;&nbsp;Vous pouvez utilisez autant de niveau que vous le souhaitez :<br>
		<span class="txt-code"><span class="opt-name">$TBS</span>-&gt;ObjectRef[<span class="opt-value">'item3'</span>][<span class="opt-value">'a'</span>][<span class="opt-value">0</span>] =&amp; <span class="opt-name">$MonObjet3</span>;</span></div>
		<span class="title-1b">Remarques :</span><br>
		* Pensez &agrave; utiliser l'assignation par r&eacute;f&eacute;rence &agrave; l'aide de &quot;=&amp;&quot; au lieu de &quot;=&quot;, sinon une copie de l'objet sera cr&eacute;&eacute;e.<br>
 		* Une fois un objet r&eacute;f&eacute;renc&eacute; sous ObjectRef, ses sous-objets seront aussi accessibles par la syntaxe TBS. <br>
 		<br>
  <span class="title-1b">&bull; Utilisation d'ObjectRef dans les champs [var] :</span> <br>
  Utilisez le symbole '~' pour appeler ce qui est r&eacute;f&eacute;renc&eacute; sous ObjectRef.<br>
  Par exemple :<br> 
  <div class="decal"> 
  	<table border="0" cellpadding="3" cellspacing="0">
  		<tr class="title-1b">
  			<td>Le champ </td>
  			<td width="10">&nbsp;</td>
  			<td>Ferra appel &agrave; </td>
  			</tr>
  		<tr>
  			<td>[<span class="opt-name">var</span>.~<span class="opt-name">propA</span>]</td>
        	<td class="txt-code">&nbsp;</td>
        	<td class="txt-code"><span class="opt-name">$TBS</span>-&gt;ObjectRef-&gt;propA</td>
      	</tr>
  		<tr>
  			<td>[<span class="opt-name">var</span>.~<span class="opt-name">propA</span>.<span class="opt-name">propB</span>]</td>
        	<td class="txt-code">&nbsp;</td>
        	<td class="txt-code"><span class="opt-name">$TBS</span>-&gt;ObjectRef-&gt;propA-&gt;propB</td>
      	</tr>
  		
  		<tr>
  			<td>[<span class="opt-name">var</span>.~<span class="opt-name">item2</span>.<span class="opt-name">propA</span>]</td>
        	<td class="txt-code">&nbsp;</td>
        	<td class="txt-code"><span class="opt-name">$TBS</span>-&gt;ObjectRef[<span class="opt-value">'item2'</span>]-&gt;propA</td>
      	</tr>
  		<tr>
  			<td>[<span class="opt-name">var</span>.~<span class="opt-name">item2</span>.<span class="opt-name">methX</span>]</td>
        	<td class="txt-code">&nbsp;</td>
        	<td class="txt-code"><span class="opt-name">$TBS</span>-&gt;ObjectRef[<span class="opt-value">'item2'</span>]-&gt;methX()</td>
      	</tr>
  		<tr>
  			<td>[<span class="opt-name">var</span>.~<span class="opt-name">item2</span>.<span class="opt-name">methY(a,b)</span>]</td>
        	<td class="txt-code">&nbsp;</td>
        	<td class="txt-code"><span class="opt-name">$TBS</span>-&gt;ObjectRef[<span class="opt-value">'item2'</span>]-&gt;methY(<span class="opt-value">'a'</span>,<span class="opt-value">'b'</span>)</td>
      	</tr>
  		</table>
  	</div>
  <span class="title-1b">Remarques : </span><br>
  TBS op&egrave;re un contr&ocirc;le de coh&eacute;rence, il d&eacute;terminera de lui m&ecirc;me  si votre d&eacute;finition de champ [var] fait appel &agrave; ObjectRef via un item d'un tableau, une propri&eacute;t&eacute; d'objet ou une m&eacute;thode d'objet. Dans tous les cas, faites bien attention &agrave; ce que votre champ [var] doit au final retourner  une valeur et non pas un objet.<br>
  <br>
  <span class="title-1b">&bull; Utilisation d'ObjectRef dans d'autres fonctionnalit&eacute;s TBS :</span> <br>
  Les fonctionnalit&eacute;s TBS suivantes supportent l'appel &agrave; des m&eacute;thodes d'objets r&eacute;f&eacute;renc&eacute;s sous ObjectRef.<br>
  <div class="decal">
  	<table width="100%"  border="0" cellspacing="0" cellpadding="2">
  		<tr class="title-1b">
  			<td width="180">Fonctionnalit&eacute;</td>
      	<td>Exemple</td>
    	</tr>
  		<tr id="v205_ondata_ooo">
  			<td>Param&egrave;tre <a href="#html_block_prm_ondata">ondata</a></td>
      	<td>[<span class="opt-name">blk1</span>.colonne1;<span class="opt-name">block</span>=<span class="opt-value">tr</span>;<span class="opt-name">ondata</span>=<span class="opt-value">~item1.methA</span>]</td>
    	</tr>
  		<tr>
  			<td>Param&egrave;tre <a href="#html_field_prm_onformat">onformat</a></td>
      	<td>[<span class="opt-name">blk1</span>.colonne2;<span class="opt-name">onformat</span>=<span class="opt-value">~item1.methB</span>]</td>
    	</tr>
  		<tr>
  			<td>M&eacute;thode <a href="#php_loadtemplate">LoadTemplate()</a></td>
      	<td>$TBS-&gt;<span class="opt-name">LoadTemplate</span>(<span class="opt-value">'monmodele.htm'</span>,<span class="opt-value">'=~item1.methC'</span>);</td>
    	</tr>
  		<tr>
  			<td>M&eacute;thode <a href="#php_mergefield">MergeField()</a></td>
      	<td>$TBS-&gt;<span class="opt-name">MergeField</span>(<span class="opt-value">'nomchamp'</span>,<span class="opt-value">'~item1.methD'</span>,<span class="opt-value">true</span>);</td>
    	</tr>
  		<tr>
  			<td>M&eacute;thode <a href="#plug-in_db">MergeBlock()</a></td>
      	<td>$TBS-&gt;<span class="opt-name">MergeBlock</span>(<span class="opt-value">'blk1'</span>,<span class="opt-value">'~madb'</span>,<span class="opt-value">'SELECT * FROM t_table'</span>);</td>
    	</tr>
  		</table>
  	</div>
  <span class="title-1b">Remarque :</span> Les m&eacute;thodes appel&eacute;es par cette technique doivent respecter la syntaxe de fonction attendue par la fonctionnalit&eacute; (voir description de la fonctionnalit&eacute; correspondante).</div>
  <br>
  <br>
</div>
<div class="title-3"><a name="html_side" id="html_side"></a>Coté HTML :</div>
Vous concevez votre modèle en plaçant des balises TBS aux endroits où doivent figurer les données.<br>
<br>
Il existe deux types de balises TBS : les <em>champs</em> et les <em>blocs</em>.<br>
<br>
Un <span class="title-1b">champ TBS</span> est une balise TBS qui doit être remplacé par une donnée simple. Il est possible de spécifier un format d'affichage ainsi que d'autres paramètres. La syntaxe des champs TBS est décrite <a href="#html_field">ci-après</a>.<br>
<br>
Un <span class="title-1b">bloc TBS</span> est une région qui devra être répétée. Il est défini par une ou deux balises TBS.<br>
Le plus souvent il s'agit d'une ligne d'un tableau HTML. La syntaxe des blocs TBS est décrite <a href="#html_block">ci-après</a>.<br>
<br>
<br>
<div class="title-2"><a name="html_field" id="html_field"></a>Les champs TBS :</div>
<div class="norm">Un champ TBS est une balise TBS qui doit être remplacé par une donnée simple.<br>
  Un champ TBS doit  avoir un nom pour l'identifier (qui n'est pas obligatoirement unique) et il peut avoir des param&egrave;tres pour modifier la valeur affich&eacute;e.<br>
  <br>
  Syntaxe : <span class="opt-html"><strong>HTML ... </strong></span>[<span class="opt-name">NomChamp</span>{;<span class="opt-name">param1</span>}{;<span class="opt-name">param2</span>}{;<span class="opt-name">param3</span>}{...}]<span class="opt-html"><strong> ... HTML</strong></span> <br>
  <br>
  <table border="0" cellpadding="5" cellspacing="0">
    <tr class="title-1b">
      <td width="80" align="left" valign="top">&Eacute;lément</td>
      <td align="left" valign="top">Description</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">NomChamp</td>
      <td align="left" valign="top">Le nom du champ.<br>
        Attention : les noms de champs commençant par <span class="opt-name">var</span>. ,<span class="opt-name"> onload</span> et <span class="opt-name">onshow</span> sont réservés pour les <a href="#html_field_var">champs [var]</a>, les <a href="#html_automatic">champs automatiques</a>.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">param1</td>
      <td align="left" valign="top"> Facultatif. Un ou plusieurs paramètres de la liste ci-dessous, séparés par des ';'.<br>
        Certains paramètres peuvent être affectés d'une valeur en utilisant le caractère '='.<br>
        <span class="decal">Exemple : <span class="opt-name">frm</span>=<span class="opt-value">0.00</span></span><br>
        Si la valeur du paramètre contient des espaces, des points-virgules ou des guillemets, alors vous pouvez utiliser les guillemets simples comme d&eacute;limiteurs.<br>
        <span class="decal">Exemple : <span class="opt-name">frm</span>=<span class="opt-value">'0 000.00'</span></span><br>
Utilisez deux guillemets simples pour d&eacute;finir un caract&egrave;re guillemet   dans une cha&icirc;ne d&eacute;limit&eacute;e.<br>
        <span class="decal">Example: <span class="opt-name">ifempty</span>=<span class="opt-value">'coucou c''est moi'</span></span><br>
        <br>
        Il est possible d'imbriquer des champs TBS les uns dans les autres.<br>
        Cela veut dire que vous pouvez écrire ceci : [var.v1; if [var.v2]=1]. Mais :<br>
        - pour les <a href="#html_field_var">champs [var]</a>, vous devez vous assurer que v2 sera fusionné avant v1.<br>
        - pour les <a href="#html_block">champs de blocs</a>, vous devez vous assurer que la colonne v2 est avant la colonne v1.</td>
    </tr>
  </table>
  <span class="opt-name"><a name="html_field_prm" id="html_field_prm"></a></span><br>
  <div class="title-1c">Paramètres des champs :</div>
  <br>
  <table border="0" cellpadding="5" cellspacing="0">
    <tr class="title-1b">
      <td width="80" align="left" valign="top">Paramètre</td>
      <td align="left" valign="top">Description</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><a name="html_field_prm_htmlconv" id="html_field_prm_htmlconv"></a>htmlconv</span>=<span class="opt-name"><span class="opt-value">val</span></span></td>
      <td align="left" valign="top" class="border-sep">Permet de forcer ou empêcher la conversion de la donnée en texte Html.<br>
        La valeur <span class="opt-name"><span class="opt-value">val</span></span> peut être l'un des mots-clés suivants :
        <div class="decal">
          <table border="0" cellspacing="0" cellpadding="2">
            <tr>
              <td width="50" valign="top"><span class="opt-name"><span class="opt-value">yes</span></span> :</td>
              <td>(valeur par défaut) Force la conversion en Html avec sauts de ligne.</td>
            </tr>
            <tr>
              <td valign="top"><span class="opt-name"><span class="opt-value">no</span></span> :</td>
              <td>Emp&ecirc;che la conversion en Html. Utile pour modifier du code Javascript ou modifier le source HTML.</td>
            </tr>
            <tr>
              <td valign="top"><span class="opt-name"><span class="opt-value">nobr</span></span> :</td>
              <td> Force la conversion en Html sans les sauts de ligne (utile pour la balise &lt;pre&gt; par exemple).</td>
            </tr>
            <tr>
              <td valign="top"><span class="opt-name"><span class="opt-value">wsp</span></span> :</td>
              <td>Préserve les espaces blancs (utile pour les espaces de début de ligne).</td>
            </tr>
            <tr>
              <td valign="top"><span class="opt-name"><span class="opt-value">esc</span></span> :</td>
              <td>Pas de conversion Html et double les caract&egrave;res guillemets simples ('). </td>
            </tr>
            <tr id="v202_js">
              <td valign="top"><span class="opt-value">js</span> : </td>
              <td>Convertie la donn&eacute;e en une cha&icirc;ne qui peut &ecirc;tre ins&eacute;r&eacute;e entre des d&eacute;limiteur texte JavaScript </td>
            </tr>
            <tr>
              <td valign="top"><span class="opt-name"><span class="opt-value">look</span></span> :</td>
              <td>Convertie la donnée en Html si aucune balise Html n'est trouvée dans cette donnée.</td>
            </tr>
          </table>
        </div>
      Vous pouvez sp&eacute;cifier plusieurs mots-cl&eacute;s en utilisant le s&eacute;parateur <span class="opt-value">'+'</span>. Exemple : <span class="opt-name">htmlconv</span>=<span class="opt-value">yes+js</span></td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><a name="html_field_prm_dot" id="html_field_prm_dot"></a>. </span>(point)</td>
      <td align="left" valign="top" class="border-sep">Si la donnée est vide, on affiche un espace Html insécable. Utile pour les cellules d'un tableau.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><a name="html_field_prm_ifempty" id="html_field_prm_ifempty"></a>ifempty</span>=<span class="opt-name"><span class="opt-value">val</span></span></td>
      <td align="left" valign="top" class="border-sep">Si la donnée est vide, on la remplace par la valeur indiquée.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><a name="html_field_prm_magnet" id="html_field_prm_magnet"></a></span><span class="opt-name">magnet</span>=<span class="opt-value">tag</span><br>
        <span class="txt-small">ou</span><br>
        <span class="opt-name">magnet</span>=<span class="opt-value">expr</span></td>
      <td align="left" valign="top" class="border-sep">Assigne une balise Html magnétique à un champ TBS. Une balise magnétique est gardée telle quelle quand le champ à une valeur, et elle est supprimée quand le champ est null ou chaîne vide. Le param&egrave;tre <span class="opt-name">magnet</span> a la m&ecirc;me syntaxe que le param&egrave;tre <a href="#html_block_prm_block" class="opt-name">block</a>, c'est &agrave; dire que <span class="opt-value">expr</span> doit &ecirc;tre une balise Html ou une extension de bloc TBS.<br>
        <div class="decal">Exemple :<br>
          <span class="opt-html">(&lt;a href=&quot;[var.lien;magnet=a]&quot;&gt;cliquez ici&lt;/a&gt;)</span><br>
          Résultat pour <span class="txt-code">$lien='www.tbs.com'</span>: <span class="opt-html">(&lt;a href=&quot;www.tbs.com&quot;&gt;cliquez ici&lt;/a&gt;)</span><br>
          Résultat pour <span class="txt-code">$lien=''</span>: <span class="opt-html">()</span></div>
        Par défault, la balise Html magnétique doit être un couple de balises ouvrante-fermante (comme <span class="opt-html">&lt;a&gt;&lt;/a&gt;</span>) dont la première balise est placée avant le champ TBS. Mais cela peut être changé en utilisant le paramètre <span class="opt-name">mtype</span> (voir ci-après).<br>
        <span class="versioning">Depuis TBS version 3.3.0</span>,  les <a href="#html_field_prm_ope">param&egrave;tres</a> <a href="#html_field_prm_ope" class="opt-name">ope</a>=<span class="opt-value">nif:x</span> et <a href="#html_field_prm_ope" class="opt-name">ope</a>=<span class="opt-value">minv</span> peuvent am&eacute;liorer l'utililisation du param&egrave;tre <span class="opt-name">magnet</span>.<br>
      Remarque : les paramètres <span class="opt-name">if then else</span> sont traités avant le paramètre<span class="opt-name"> magnet.</span></td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><a name="html_field_prm_mtype" id="html_field_prm_mtype"></a><span class="opt-name">mtype</span>=<span class="opt-value">val</span></td>
      <td align="left" valign="top" class="border-sep">S'utilise avec la paramètre<span class="opt-name"> magnet</span>. Définit le comportement de la balise magnétique.<br>
        <br>
        <div class="decal">
          <table  border="0" cellpadding="0" cellspacing="0">
            <tr align="left" valign="top">
              <td class="title-1b">Valeur</td>
              <td class="title-1b">Comportement magnétique lorsque le champ est nul ou chaîne vide</td>
            </tr>
            <tr align="left" valign="top">
              <td width="60" class="opt-value">m*m </td>
              <td>C'est la valeur par défaut. Supprime le couple de balises qui entoure le champ TBS. Tout ce qui se trouve entre ces balises est aussi supprimé. Il est possible de placer le champ TBS à l'intérieur de l'une des balises.<br>
                <div class="decal">Exemple :<br>
                  <span class="opt-html">(&lt;a href=&quot;[var.lien;magnet=a]&quot;&gt;cliquez ici&lt;/a&gt;)</span><br>
                  Résultat pour <span class="txt-code">$lien='www.tbs.com'</span>: <span class="opt-html">(&lt;a href=&quot;www.tbs.com&quot;&gt;cliquez ici&lt;/a&gt;)</span><br>
                  Resultat pour <span class="txt-code">$lien=''</span>: <span class="opt-html">()</span></div></td>
            </tr>
            <tr align="left" valign="top">
              <td class="opt-value">m+m</td>
              <td>Supprime le couple de balises qui entoure le champ TBS, mais conserve ce qui est entre les balises.
                <div class="decal">Exemple :<br>
                  <span class="opt-html">(&lt;a href=&quot;mailto:[blk.email;magnet=a;mtype=m+m]&quot;&gt;[blk.nom]&lt;/a&gt;)</span><br>
                  Résultat pour<span class="txt-code"> $email='moi@tbs.com'</span>: <span class="opt-html">(&lt;a href=&quot;mailto:moi@tbs.com&quot;&gt;MonNom&lt;/a&gt;)</span><br>
                  Résultat pour <span class="txt-code">$email=''</span>: <span class="opt-html">(MyName)</span></div></td>
            </tr>
            <tr align="left" valign="top">
              <td class="opt-value">m*</td>
              <td>Supprime la balise simple qui se trouve avant le champ TBS, ainsi que tout de qui se trouve entre la balise et le champ.
                <div class="decal">Exemple 1: <span class="opt-html">&lt;img href=&quot;[var.link;magnet=img;mtype=m*]&quot;&gt;</span> <br>
                  Exemple 2:<span class="opt-html"> &lt;br&gt; [var.address;magnet=br]</span></div></td>
            </tr>
            <tr align="left" valign="top">
              <td class="opt-value">*m</td>
              <td>Supprime la balise simple qui se trouve après le champ TBS, ainsi que tout de qui se trouve entre la balise et le champ.
                <div class="decal">Exemple :<span class="opt-html"> [var.address;magnet=br;mtype=*m]&lt;br&gt;</span></div></td>
            </tr>
          </table>
        </div>
      <div class="decal"></div></td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><a name="html_field_prm_comm"></a><span class="opt-name">comm</span></td>
      <td align="left" valign="top" class="border-sep">&Eacute;tendre les limites du champ TBS jusqu'aux limites de la balise Html commentaire Html qui l'entoure, ou bien jusqu'aux limites d'un autre couple de balise Html.<br>
      	Exemple : <br>
				<div class="decal"><span class="opt-html">xxx &lt;!-- </span>[<span class="opt-name">mochamp</span>;<span class="opt-name">comm</span>]<span class="opt-html"> des commentaires ici --&gt; yyy</span></div>
				ou<br>
				<div class="decal"><span class="opt-html">xxx &lt;div&gt; </span>[<span class="opt-name">monchamp</span>;<span class="opt-name">comm</span>=<span class="opt-value">div</span>] <span class="opt-html">des commentaires ici &lt;/div&gt; yyy</span></div>
				sont strictement identiques &agrave; :<br>
				<div class="decal"><span class="opt-html">xxx</span> [<span class="opt-name">monchamp</span>]<span class="opt-html"> yyy </span></div>
			<span class="opt-html"></span> Ce param&egrave;tre particulièrement pratique pour l'élaboration du modèle avec un éditeur HTML visuel (tel que Dreamweaver ou FrontPage).<br>
			<div class="versioning">Historique : Le support pour les balises Html autres que commentaire a &eacute;t&eacute; ajout&eacute; &agrave;  TBS 3.0.</div></td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><a name="html_field_prm_noerr"></a><span class="opt-name">noerr</span></td>
      <td align="left" valign="top" class="border-sep">Empêche l'affichage de certains messages d'erreurs TBS. Quand un message peut être annulé, cela est mentionné dans le message.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><a name="html_field_prm_file"></a>file</span>=<span class="opt-name"><span class="opt-value">nomfichier</span></span></td>
      <td align="left" valign="top" class="border-sep">Remplace le champ par le contenu du fichier. <span class="opt-name"><span class="opt-value">Nomfichier</span></span> peut être une chaîne fixe ou une expression.<br>
        Vous pouvez utiliser le mot-cl&eacute; <span class="opt-value">[val]</span> dans l'expression pour ins&eacute;rer la valeur  du champ en cours.<br>
Vous pouvez utiliser des champs <span class="opt-value">[var]</span> dans l'expression.<br>

        Exemples : <br>
        <div class="decal">[<span class="opt-name">onload</span>;<span class="opt-name">file</span>=<span class="opt-value">entete.html</span>]<br>
          [<span class="opt-name">onload</span>;<span class="opt-name">file</span>=[<span class="opt-name">var</span>.<span class="opt-name">fichier</span>]] </div>
        Si le fichier n'est pas trouv&eacute; il sera aussi recherch&eacute; dans le r&eacute;pertoire du dernier mod&egrave;le charg&eacute; (<span class="versioning">depuis TBS version 3.2.0</span>). <br>
        Si <span class="opt-value">nomfichier</span> est une cha&icirc;ne vide, alors aucun message d'erreur n'est affich&eacute;, c'est comme si le param&egrave;tre <span class="opt-name">file</span> est ignor&eacute;. Cela peut &ecirc;tre utilis&eacute; pour g&eacute;rer l'ins&eacute;rtion conditionelle de fichier. <br>
Exemple : <br>
<div class="decal"> [<span class="opt-name">onload</span>;<span class="opt-name">file</span>=[<span class="opt-name">var</span>.<span class="opt-name">insertion</span>;if [<span class="opt-name">val</span>]=1;<span class="opt-name">then</span> <span class="opt-value">'entete.html'</span>;<span class="opt-name">else</span> <span class="opt-value">''</span>]]</div>
Vous trouverez plus de d&eacute;tails sur ce param&egrave;tre la rubrique <a href="#html_subtemplate">Sous-mod&egrave;les</a>.<br>
      <span class="txt-small">Voir aussi : <a href="#html_field_prm_getbody" class="opt-name">getbody</a> <a href="#html_field_prm_script" class="opt-name">script</a></span> </td>
    </tr>
    <tr>
    	<td align="left" valign="top" class="border-sep"><span class="opt-name"><a name="html_field_prm_getbody" id="html_field_prm_getbody"></a>getbody</span></td>
    	<td align="left" valign="top" class="border-sep">S'utilise avec le param&egrave;tre <span class="opt-name">file</span> ou <span class="opt-name">script</span>. Indique qu'on ne charge pas le fichier enti&egrave;rement mais seulement le corps d&eacute;limit&eacute; par les balises &lt;body&gt; et &lt;/body&gt;. Il est possible de pr&eacute;ciser un autre couple de balise avec la syntaxe <span class="opt-name">getbody</span>=<span class="opt-value">tag</span>.<br>
    		Exemple :
    			<div class="decal">[onload;<span class="opt-name">file</span>=<span class="opt-value">header.htm</span>;<span class="opt-name">getbody</span>]</div>
    		<br>
   		<div class="versioning">Historique : le param&egrave;tre getbody   est support&eacute; depuis TBS version 3.0. 
   		Dans les versions pr&eacute;c&eacute;dentes, il &eacute;tait op&eacute;r&eacute; automatiquement lors de l'utilisation du param&egrave;tre file. Maintenant il devient explicite. </div></td>
   	</tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><span class="opt-value"><a name="html_field_prm_script"></a></span>script</span>=<span class="opt-name"><span class="opt-value">nomfichier</span></span></td>
      <td align="left" valign="top" class="border-sep">Exécute le script PHP juste avant le remplacement du champ.<br>
        <span class="opt-name"><span class="opt-value">Nomfichier</span></span> peut être une chaîne fixe ou une expression.<br>
        Vous pouvez utiliser le mot-cl&eacute; <span class="opt-value">[val]</span> dans l'expression pour ins&eacute;rer la valeur  du champ en cours.<br>
Vous pouvez utiliser des champs <span class="opt-value">[var]</span> dans l'expression.<br>
Si le fichier n'est pas trouv&eacute; il sera aussi recherch&eacute; dans le r&eacute;pertoire du dernier mod&egrave;le charg&eacute; (<span class="versioning">depuis TBS version 3.2.0</span>).<br>
        <table width="100%" border="0" cellpadding="2" cellspacing="0" >
          <tr>
            <td width="10" valign="top">*</td>
            <td>Tennez compte du fait que dans votre script <span class="title-1c"> les variables PHP  seront forc&eacute;ment locales au lieu de globales</span>. Cela est d&ucirc; &agrave; ce que le script est appel&eacute; depuis un m&eacute;thode de TBS. Pour atteindre ou d&eacute;finir une variable globale dans votre script, vous devez utiliser l'instruction Php <a href="http://fr.php.net/global" target="_blank">global</a> ou le tableau <span class="txt-code">$GLOBAL</span>.</td>
          </tr>
          <tr id="v202_locvar">
            <td valign="top">*</td>
            <td >TBS met &agrave; disposition des variables locales pr&eacute;d&eacute;finies que vous pouvez utiliser dans votre script :<br>
      - <span class="opt-name">$CurrVal</span> se r&eacute;f&egrave;re &agrave; la valeur du champ en cours. Elle peut &ecirc;tre modifi&eacute;e.<br>
      - <span class="opt-name">$CurrPrm</span> se r&eacute;f&egrave;re au tableau de param&egrave;tre du champ en cours.<br>
      - <span class="opt-name">$this</span> se r&eacute;f&egrave;re &agrave; l'instance en cours de TBS. (Voir le param&egrave;tre <span class="opt-name">subtpl</span> pour un bon usage) </td>
          </tr>
          <tr>
            <td valign="top">*</td>
            <td>Le param&egrave;tre <span class="opt-name">script</span> est sensible au param&egrave;tre <span class="opt-name">if</span>. Si le champ poss&egrave;de un param&egrave;tre <span class="opt-name">if</span>, alors le script n'est ex&eacute;cut&eacute; que si la condition est v&eacute;rifi&eacute;e.</td>
          </tr>
        </table>
      <span id="v202_subtpl_script">Voir le chapitre <a href="#html_subtemplate">Sous-mod&egrave;les</a> pour plus d'information sur l'utilisation de ce param&egrave;tre en mode sous-mod&egrave;le.</span></td>
    </tr>
    <tr id="v202_subtpl">
      <td align="left" valign="top" class="border-sep"><a name="html_field_prm_subtpl" id="html_field_prm_subtpl"></a><span class="opt-name">subtpl</span></td>
      <td align="left" valign="top" class="border-sep">S'utilise avec le param&egrave;tre <span class="opt-name"> script</span> ou <span class="opt-name">onformat</span>.<br>
        Active le mode sous-mod&egrave;le pendant l'ex&eacute;cution du script ou de la fonction.<br>
      Voir le chapitre <a href="#html_subtemplate">Sous-mod&egrave;les</a> pour plus d'information. </td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><span class="opt-value"><a name="html_field_prm_if" id="html_field_prm_if"></a></span>if</span> <span class="opt-value">exp1</span><span class="opt-name">=</span><span class="opt-value">exp2</span></td>
      <td align="left" valign="top" class="border-sep">Affiche la donnée si la condition est vérifiée, sinon n'affiche rien à moins que les paramètres <span class="opt-name">then</span> ou <span class="opt-name">else</span> soient utilisés. <br>
        Les opérateurs supportés sont :
        <div class="decal">
          <table  border="0" cellpadding="0" cellspacing="0">
            <tr>
              <td width="80"><span class="opt-name">=</span> ou <span class="opt-name">==</span> </td>
              <td>égale</td>
            </tr>
            <tr>
              <td class="opt-name">!=</td>
              <td>différent</td>
            </tr>
            <tr>
              <td class="opt-name">+-</td>
              <td>supérieur strictement </td>
            </tr>
            <tr>
              <td class="opt-name">+=-</td>
              <td>supérieur ou égal </td>
            </tr>
            <tr>
              <td class="opt-name">-+</td>
              <td>inférieur strictement </td>
            </tr>
            <tr>
              <td class="opt-name">-=+</td>
              <td>inférieur ou égal</td>
            </tr>
            <tr>
              <td class="opt-name">~=</td>
              <td>v&eacute;rifie l'<a href="http://www.php.net/manual/fr/function.preg-match.php">expression rationelle</a> <span class="versioning">(depuis TBS version 3.0)</span> </td>
            </tr>
          </table>
        </div>
        <span class="opt-value">exp1</span> et <span class="opt-value">exp2</span> doivent être des expressions numériques ou textes.<br>
        Vous pouvez utiliser le mot-cl&eacute; <span class="opt-value">[val]</span> dans l'expression pour ins&eacute;rer la valeur  du champ en cours.<br>
Vous pouvez utiliser des champs <span class="opt-value">[var]</span> dans l'expression.<br> 
        Les expressions peuvent contenir d'autres champs TBS, mais vous devez vous assurer qu'ils soient fusionnés avant le champ contenant.<br>
        <span class="versioning">Depuis TBS version 3.0</span>, il est aussi possible de d&eacute;finir plusieurs couple de if/then dans le m&ecirc;me champ. <br>
      Voir paramètres <span class="opt-name">then</span> et <span class="opt-name">else</span> pour des exemples. </td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><span class="opt-value"><a name="html_field_prm_then" id="html_field_prm_then"></a></span>then</span><span class="opt-name"><span class="opt-value"> val1</span></span></td>
      <td align="left" valign="top" class="border-sep">Si le paramètre <span class="opt-name">if</span> a été défini et que sa condition est vérifiée, alors la donnée sera replacée par <span class="opt-value">val1</span>.<br>
        <span class="versioning">Depuis TBS version 3.0</span>, il est aussi possible de d&eacute;finir plusieurs couple de if/then dans le m&ecirc;me champ. <br>
        Exemple :
        <div class="decal">[<span class="opt-name">var.image</span>;<span class="opt-name">if</span> <span class="opt-value">[val]</span>=<span class="opt-value">''</span>;<span class="opt-name">then</span> <span class="opt-value">'image0.gif'</span>]<br>
      [<span class="opt-name">var</span>.<span class="opt-name">x</span>;<span class="opt-name">if</span> <span class="opt-value">[val]=1</span>;<span class="opt-name">then</span> <span class="opt-value">'un'</span>;<span class="opt-name">if</span> <span class="opt-value">[val]=2</span>;<span class="opt-name">then</span> <span class="opt-value">'deux'</span>;<span class="opt-name">else</span> <span class="opt-value">'plus'</span>] </div>
	  Vous pouvez utiliser le mot-cl&eacute; <span class="opt-value">[val]</span> dans l'expression pour ins&eacute;rer la valeur  du champ en cours.<br>
Vous pouvez utiliser des champs <span class="opt-value">[var]</span> dans l'expression.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-value"><a name="html_field_prm_else" id="html_field_prm_else"></a></span><span class="opt-name">else</span> <span class="opt-value">val2</span></td>
      <td align="left" valign="top" class="border-sep">Si le paramètre<span class="opt-name">if</span> a été défini et que sa condition n'est pas vérifiée, alors la donnée sera replacée par <span class="opt-value">val2</span>.<br>
        Exemple :
        <div class="decal">        [<span class="opt-name">var.error_id</span>;<span class="opt-name">if</span> <span class="opt-value">[val]</span>=<span class="opt-value">0</span>;<span class="opt-name">then</span> <span class="opt-value">'pas d''erreur'</span>;<span class="opt-name">else</span> <span class="opt-value">'erreur constatée'</span>] </div>
        Vous pouvez utiliser le mot-cl&eacute; <span class="opt-value">[val]</span> dans l'expression pour ins&eacute;rer la valeur  du champ en cours.<br>
Vous pouvez utiliser des champs <span class="opt-value">[var]</span> dans l'expression.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-value"><a name="html_field_prm_onformat" id="html_field_prm_onformat"></a></span><span class="opt-name">onformat</span>=<span class="opt-value">nom_fct</span></td>
      <td align="left" valign="top" class="border-sep"> Indique le nom d'un fonction PHP utilisateur  qui sera exécutée avant la fusion du champ.<br>
      	Depuis TBS version 3.0, il est aussi possible d'indiquer une m&eacute;thode de classe (voir <a href="#php_oop">POO</a>). <br> 
      	La fonction <span class="opt-value">nom_fct</span> doit avoir la syntaxe suivante :<br>
        <span class="txt-code">&nbsp;&nbsp;function <span class="opt-value">nom_fct</span>(<span class="opt-name">$NomChamp</span>,&amp;<span class="opt-name">$CurrVal</span>,{&amp;<span class="opt-name">$CurrPrm</span>,{&amp;<span class="opt-name">$TBS</span>}}) { ... }<br>
        </span> <span class="opt-name"> </span>
        <table border="0" cellspacing="0" cellpadding="2">
          <tr>
            <td width="10" valign="top" class="title-1b">&nbsp;</td>
            <td width="80" valign="top" class="title-1b">Argument</td>
            <td class="title-1b">Description</td>
          </tr>
          <tr>
            <td valign="top">&nbsp;</td>
            <td valign="top"><span class="opt-name">$</span><span class="opt-name">NomChamp</span></td>
            <td>Retourne le nom du champ qui appel la fonction (lecture seule).</td>
          </tr>
          <tr>
            <td valign="top" class="opt-name">&nbsp;</td>
            <td valign="top" class="opt-name">$CurrVal</td>
            <td>Retourne la valeur en cours (lecture/écriture<span class="txt-small"> <em>; ne pas oublier le &amp; dans la déclaration de la variable</em></span>).</td>
          </tr>
          <tr id="v202_onformat_currprm">
            <td valign="top" class="opt-name">&nbsp;</td>
            <td valign="top" class="opt-name">$CurrPrm</td>
            <td>Facultatif. Fait r&eacute;f&eacute;rence au tableau des param&egrave;tres du champ courrant (<span class="txt-small"><em>ne pas oublier le &amp; dans la d&eacute;claration de la variable</em></span>).</td>
          </tr>
          <tr id="v202_onformat_tbs">
            <td valign="top" class="opt-name">&nbsp;</td>
            <td valign="top" class="opt-name">$TBS</td>
            <td>Facultatif. Fait r&eacute;f&eacute;rence &agrave; l'instance courrante de TBS. (<span class="txt-small"><em>ne pas oublier le &amp; dans la d&eacute;claration de la variable</em></span>).<br>
    Utilisez cet argument avec prudence. Il est fournit pour le mode Sous-mod&egrave;le.</td>
          </tr>
        </table>
      <span id="v202_subtpl_onformat">Voir le paragraphe  '<a href="#html_subtemplate">Sous-mod&egrave;les</a>' pour plus de d&eacute;tails sur l'utilisation de ces arguments en mode sous-mod&egrave;le.</span>      </td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><span class="opt-value"><a name="html_field_prm_protect" id="html_field_prm_protect"></a></span>protect</span>=<span class="opt-name"><span class="opt-value">val</span></span></td>
      <td align="left" valign="top" class="border-sep">Permet de protéger ou non la donnée à fusionner en remplaçant les caractères '<span class="opt-html">[</span>' pour leur équivalent Html '<span class="opt-html">&amp;#91;</span>'. La valeur <span class="opt-name"><span class="opt-value">val</span></span> peut être l'un des mots-clés suivants :<br>
&nbsp; <span class="opt-name"><span class="opt-value">yes</span></span> : (valeur par défaut) la donnée est protégée.<br>
&nbsp; <span class="opt-name"><span class="opt-value">no</span></span> : la donnée n'est pas protégée.<br>
      Par défaut, toutes données fusionnées avec un modèle sont protégées sauf s'il s'agit de l'inclusion d'un autre fichier. Il est fortement recommandé de protéger les valeurs affichées lorsque qu'il s'agit de données saisies librement comme sur un forum par exemple.</td>
    </tr>
    <tr>
    	<td align="left" valign="top" class="border-sep"><span class="opt-name"><span class="opt-value"><a name="html_field_prm_ope" id="html_field_prm_ope"></a></span>ope</span>=<span class="opt-name"><span class="opt-value">action</span></span></td>
    	<td align="left" valign="top" class="border-sep">Effectue une ou plusieurs op&eacute;rations sur la valeur &agrave; fusionner. Vous pouvez d&eacute;finir plusieurs op&eacute;ration &agrave; ex&eacute;cuter en ordre en les s&eacute;parant par des virgules (,). <br>
    		Exemple :
    	    <br>
          <div class="decal">[<span class="opt-name">var</span>.<span class="opt-name">x</span>;<span class="opt-name">ope</span>=<span class="opt-value">add:-1</span>,<span class="opt-value">mod:10</span>]</div>
        Les op&eacute;rations support&eacute;es sont :
    		<div class="decal">
    			<table  border="0" cellspacing="0" cellpadding="3">
						<tr>
							<td width="50" valign="top"><span class="opt-value">max:n</span></td>
							<td>Limite la cha&icirc;ne  texte &agrave; un maximum de <span class="opt-value">(n)</span> caract&egrave;res. Si la cha&icirc;ne est coup&eacute;e, alors sa fin est remplac&eacute;e par des pointill&eacute;s '...'.<br>
								<span class="decal">Exemple :							[var.libelle;<span class="opt-name">ope</span>=<span class="opt-value">max:10</span>]</span><br>
								Ajoutez le param&egrave;tre <span class="opt-name">maxhtml</span> pour indiquer que la valeur &agrave; fusionner peut contenir des caract&egrave;res Html. 
								Ajoutez le param&egrave;tre <span class="opt-name">maxend</span> pour changer le symbole de coupe.<br>
								<span class="decal">Exemple :
								[var.libelle;<span class="opt-name">ope</span>=<span class="opt-value">max:10</span>;<span class="opt-name">maxhtml</span>;<span class="opt-name">maxend</span>=<span class="opt-value">'+'</span>]</span></td>
						</tr>
						<tr>
							<td valign="top" class="opt-value">mod:n</td>
							<td>Applique le modulo <span class="opt-value">n</span> &agrave; la valeur &agrave; fusionner. Exemple :							[var.numlig;<span class="opt-name">ope</span>=<span class="opt-value">mod:7</span>]</td>
						</tr>
						<tr>
							<td valign="top"><span class="opt-value">add:n</span></td>
							<td>Ajoute le num&eacute;rique <span class="opt-value">n</span> &agrave; la valeur &agrave; fusionner.								Exemple :							[var.numero;<span class="opt-name">ope</span>=<span class="opt-value">add:-1</span>]</td>
						</tr>
						<tr>
						  <td valign="top"><span class="opt-value">mul:n</span></td>
						  <td>Mutliplie la valeur &agrave; fusionner par <span class="opt-value">n</span>. </td>
					  </tr>
						<tr>
						  <td valign="top"><span class="opt-value">div:n</span></td>
						  <td>Divise la valeur &agrave; fusionner par <span class="opt-value">n</span>. </td>
					  </tr>
						<tr>
							<td valign="top"><span class="opt-value">list</span> </td>
							<td>Si la valeur &agrave; fusionner est un tableau Php, alors ses items sont affich&eacute;s separ&eacute;s par une virgule (,).<br>
								<span class="decal">Exemple :							[var.tableau;<span class="opt-name">ope</span>=<span class="opt-value">list</span>]</span><br>
							Ajoutez le param&egrave;tre <span class="opt-name">valsep</span> pour changer le s&eacute;parateur d'item.<br>
							<span class="decal">Exemple :							[var.tableau;<span class="opt-name">ope</span>=<span class="opt-value">list</span>;<span class="opt-name">valsep</span>=<span class="opt-value">'+'</span>]</span></td>
						</tr>
						<tr>
              <td valign="top" class="opt-value">nif:x</td>
						  <td>Si la valeur est &eacute;gale &agrave;  <span class="opt-value">'x'</span> alors elle est remplac&eacute;e par  <span class="opt-value">''</span> <span class="txt-small">(cha&icirc;ne vide)</span>. Cette op&eacute;ration est con&ccedil;ue pour faire fonctionner le param&egrave;tre  <a href="#html_field_prm_magnet" class="opt-name">magnet</a> avec  d'autres valeurs que  <span class="opt-value">''</span>. <span class="versioning">(support&eacute; depuis  TBS version 3.3.0)</span> </td>
					  </tr>
						<tr>
              <td valign="top" class="opt-value">minv</td>
						  <td>Remplace la valeur par  <span class="opt-value">''</span> <span class="txt-small">(cha&icirc;ne vide)</span> mais le param&egrave;tre <a href="#html_field_prm_magnet" class="opt-name">magnet</a><a href="#html_field_prm_magnet"></a>  ne prendra en compte que l'ancienne valeur. Cette op&eacute;ration est con&ccedil;ue pour rendre compl&egrave;tement invisible un champ TBS qui actionne un magnet. <span class="versioning">(support&eacute; depuis TBS version 3.3.0)</span> </td>
					  </tr>
					</table>
    		</div>
				<div class="versioning">Historique :<br>
				  - Le param&egrave;tre ope   est support&eacute; depuis TBS version 3.0. 
			Il remplace le param&egrave;tre max qui n'existe plus depuis cette version.<br>
				- Les op&eacute;rations multiples et &quot;mul&quot; et &quot;div&quot; sont support&eacute;es depuis TBS version 3.2.0 </div></td>
   	</tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><span class="opt-value"><a name="html_field_prm_frm" id="html_field_prm_frm"></a></span>frm</span>=<span class="opt-value">format</span></td>
      <td align="left" valign="top" class="border-sep">Spécifie un format d'affichage pour une donnée de type date/heure ou numérique. Il est possible d'utiliser un format conditionnel qui change selon le signe de la valeur. Le format est consid&eacute;r&eacute; de type num&eacute;rique s'il contient le caract&egrave;re <span class="opt-value">0</span>, sinon il est consid&eacute;r&eacute; de type date/heure. La valeur &agrave; fusionner n'influe pas sur le type de format. <br>
        <br>
        <div class="title-1c">Format date/heure :</div>
        <br>
        Il s'agit d'un format semblable au format VisualBasic. Les mots-clés suivants sont reconnus :<br>
        <table  border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td width="150" valign="top"><span class="opt-value">d</span>, <span class="opt-value">dd</span>, <span class="opt-value">ddd</span>, <span class="opt-value">dddd</span> :</td>
            <td>numéro du jour, numéro du jour sur deux chiffres, nom du jour court, nom du jour complet. Utilisez le paramètre <span class="opt-name">locale</span> pour afficher des noms locaux. </td>
          </tr>
          <tr>
            <td valign="top" class="opt-value">xx</td>
            <td>affiche <span class="opt-html">st</span>, <span class="opt-html">nd</span>, <span class="opt-html">rd</span> ou <span class="opt-html">th</span> selon le numéro du jour.</td>
          </tr>
          <tr>
            <td valign="top" class="opt-value">w</td>
            <td>num&eacute;ro de jour de la semaine (de 0 &agrave; 6) </td>
          </tr>
          <tr>
            <td valign="top"><span class="opt-value">m</span>, <span class="opt-value">mm</span>, <span class="opt-value">mmm</span>, <span class="opt-value">mmmm</span> : </td>
            <td>numéro du mois, numéros du mois sur deux chiffres, nom du mois court, nom du mois complet. Utilisez le paramètre <span class="opt-name">locale</span> pour afficher des noms locaux. </td>
          </tr>
          <tr>
            <td valign="top"><span class="opt-value">yy</span>, <span class="opt-value">yyyy</span> :</td>
            <td>année sur deux chiffes, années complète.</td>
          </tr>
          <tr>
            <td valign="top"><span class="opt-value">hh</span>, <span class="opt-value">rr</span>, <span class="opt-value">nn</span>, <span class="opt-value">ss</span> :</td>
            <td>heure-24, heure-12, minutes, secondes forc&eacute;es &agrave;  deux chiffres.</td>
          </tr>
          <tr>
            <td valign="top"><span class="opt-value">h</span>, <span class="opt-value">r</span> </td>
            <td>heure-24, heure-12 </td>
          </tr>
          <tr>
          	<td valign="top"><span class="opt-value">ampm</span>, <span class="opt-value">AMPM</span> : </td>
          	<td>indice &quot;am&quot; ou &quot;pm&quot;, indice &quot;AM&quot; ou &quot;PM&quot;.</td>
         	</tr>
        </table>
        <br>
        Les autres caractères sont conservés. 
        Il est possible de mettre de protéger des chaînes texte en les plaçant entre guillemets doubles (&quot;).<br>
        <br>
        Exemples :<br>
				<div class="decal">[<span class="opt-value"><span class="opt-name">chp</span></span>;<span class="opt-name">frm</span>=<span class="opt-value">dd/mm/yyyy</span>] affichera <span class="opt-html">21/12/2002</span><br>
					[<span class="opt-value"><span class="opt-name">chp</span>;<span class="opt-name">frm</span>='yyyy-mm-dd hh:nn:ss'</span>] affichera <span class="opt-html">2002-12-21 15:45:03</span></div>
				<span class="opt-html"></span><br>
				<div class="versioning">Historique :<br>
				  - 
				  Les mots-cl&eacute;s ampm et AMPM sont support&eacute;s depuis TBS version 3.0.<br>
				  - Le mot-cl&eacute; hm support&eacute;s depuis TBS version 3.0 est d&eacute;pr&eacute;ci&eacute; et remplac&eacute; par rr depuis TBS 3.2.<br>
				- Les mots-cl&eacute;s rr, r et h sont support&eacute;s depuis TBS version 3.2.</div>
				<br>
        <br>
        <div class="title-1c">Format numérique :</div>
        <br>
        Pour définir la partie décimale, utilisez un expression du type '<span class="opt-value">0x0...</span>' où <span class="opt-value">'x'</span> est le séparateur de décimal, et <span class="opt-value">'0...'</span> est une répétition de zéro correspondant au nombre de décimales.<br>
        S'il n'y a aucune décimale, utilisez le format '<span class="opt-value">0.</span>' (avec un point).<br>
        <br>
        Pour définir un séparateur de milliers, utilisez une expression du type '<span class="opt-value">0z000x...</span>' où <span class="opt-value">'z'</span> est le séparateur de milliers. S'il n'y a aucune décimale, utilisez le format '<span class="opt-value">0z000.</span>' (avec un point).<br>
        <br>
        Si le format contient le caractère '<span class="opt-value">%</span>', alors la valeur affichée sera multipliée par 100. Le caractère '<span class="opt-value">%</span>' reste affiché.<br>
        <br>
        Le format numérique peut contenir d'autres chaînes texte. Mais seule l'expression de zéro placée la plus à droite sera considérée comme un format, les autres caractères seront conservés.<br>
        <br>
        Exemples :
        <div class="decal">
          <table border="0" cellspacing="0" cellpadding="1">
            <tr class="title-1b">
              <td width="100">Valeur</td>
              <td width="160">Champ</td>
              <td width="100">Affichage</td>
            </tr>
            <tr>
              <td>2456,1426</td>
              <td>[<span class="opt-value"><span class="opt-name">chp</span></span>;<span class="opt-name">frm</span>='<span class="opt-value">0,000</span>']</td>
              <td class="opt-html">2456,143</td>
            </tr>
            <tr>
              <td>&nbsp;</td>
              <td>[<span class="opt-value"><span class="opt-name">chp</span></span>;<span class="opt-name">frm</span>='<span class="opt-value">$ 0 000,00</span>']</td>
              <td class="opt-html">$ 2 456,14</td>
            </tr>
            <tr>
              <td>&nbsp;</td>
              <td>[<span class="opt-value"><span class="opt-name">chp</span></span>;<span class="opt-name">frm</span>='<span class="opt-value">$ 0 000.</span>']</td>
              <td class="opt-html">2 456</td>
            </tr>
            <tr>
              <td>0,2537</td>
              <td>[<span class="opt-value"><span class="opt-name">chp</span></span>;<span class="opt-name">frm</span>='<span class="opt-value">0,00 %</span>']</td>
              <td class="opt-html">25,37%</td>
            </tr>
            <tr>
              <td>&nbsp;</td>
              <td>[<span class="opt-value"><span class="opt-name">chp</span></span>;<span class="opt-name">frm</span>='<span class="opt-value">coef 0,00</span>']</td>
              <td class="opt-html">coef 0,25</td>
            </tr>
          </table>
        </div>
        <br>
        <div class="title-1c">Formats conditionnels :</div>
        <br>
        Il est possible de définir jusqu'a 4 formats conditionnels selon que la valeur est respectivement positive, négative, zéro ou nulle (ou chaîne vide). Les formats conditionnels doivent être séparés par un caractère '|'. Chaque format conditionnel est facultatif.<br>
        <br>
        Exemples :
        <div class="decal">
          <table border="0" cellspacing="0" cellpadding="1">
            <tr class="title-1b">
              <td>Valeur</td>
              <td>Champ</td>
              <td>Affichage</td>
            </tr>
            <tr>
              <td width="100">2456,1426</td>
              <td width="230">[<span class="opt-value"><span class="opt-name">chp</span></span>;<span class="opt-name">frm</span>='<span class="opt-value">+0,00|-(0,00)|*|vide</span>']</td>
              <td width="100" class="opt-html">+2456,14</td>
            </tr>
            <tr>
              <td>-156,333</td>
              <td>[<span class="opt-value"><span class="opt-name">chp</span></span>;<span class="opt-name">frm</span>='<span class="opt-value">+0,00|-(0,00)|*|vide</span>']</td>
              <td class="opt-html">-(156,33)</td>
            </tr>
            <tr>
              <td>0</td>
              <td>[<span class="opt-value"><span class="opt-name">chp</span></span>;<span class="opt-name">frm</span>='<span class="opt-value">+0,00|-(0,00)|*|vide</span>']</td>
              <td class="opt-html">*</td>
            </tr>
            <tr>
              <td>null</td>
              <td>[<span class="opt-value"><span class="opt-name">chp</span></span>;<span class="opt-name">frm</span>='<span class="opt-value">+0,00|-(0,00)|*|vide</span>']</td>
              <td class="opt-html">vide</td>
            </tr>
            <tr>
              <td>-8,75</td>
              <td>[<span class="opt-value"><span class="opt-name">chp</span></span>;<span class="opt-name">frm</span>='<span class="opt-value">+0,00|-(0,00)</span>']</td>
              <td class="opt-html">-(8,75)</td>
            </tr>
          </table>
      </div></td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-value"><a name="html_field_prm_locale" id="html_field_prm_locale"></a></span><span class="opt-name">locale</span></td>
      <td align="left" valign="top" class="border-sep">S'utilise avec le paramètre <span class="opt-name">frm</span>.<br>
        Indique que le format spécifié par <span class="opt-name">frm</span> doit afficher des noms de jours et de mois locaux.<br>
        Les informations de localisation peuvent être modifiés avec la fonction PHP <span class="txt-code"><a href="http://php.net/setlocale" target="_blank">setlocale()</a></span>.<br>
        <br>
        Exemple :<br>
&nbsp;[<span class="opt-value"><span class="opt-name">chp</span></span>;<span class="opt-name">frm</span>=<span class="opt-value">'dd mmmm yyyy'</span>;<span class="opt-value">locale</span>] affichera <span class="opt-html">21 d&eacute;cembre 2002</span> si vous avez d&eacute;fini au pr&eacute;alable <span class="txt-code">setlocale(LC_TIME,'fr');</span> du c&ocirc;t&eacute; PHP.<br>
<br>
Attention :<br>
* Le param&egrave;tre <span class="opt-name">locale</span> ne fonctionne que si les param&egrave;tres locaux ont &eacute;t&eacute; configur&eacute;s sur votre serveur. Si c'est le cas, la fonction <span class="txt-code"><a href="http://php.net/setlocale" target="_blank">setlocale()</a></span> utilis&eacute;e avec des  arguments valides  retourne la valeur <span class="opt-value">true</span>. <br>
* Pour des raisons d&ucirc;es &agrave; PHP, le mot cl&eacute; <span class="opt-value">xx</span> de <span class="opt-name">frm</span> ne fonctionne pas avec la param&egrave;tre <span class="opt-name">locale</span>.<br>
* Pour des raisons d&ucirc;es &agrave; PHP, le mot cl&eacute; <span class="opt-value">d</span> de <span class="opt-name">frm</span> fonctionne comme dd avec le param&egrave;tre <span class="opt-name">locale.</span><br></td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><a name="html_field_prm_tplvars" id="html_field_prm_tplvars"></a><span class="opt-name">tplvars</span></td>
      <td align="left" valign="top" class="border-sep">Permet de définir des variables dans le modèle que vous pouvez récupérer dans le programme Php en utilisant la propriété <a href="#php_tplvars">TplVars</a>. Ce paramètre ne fonctionne que avec des <a href="#html_automatic">champs automatiques</a> <span class="opt-name">onload</span>. </td>
    </tr>
  </table>
<br>
  <span class="opt-name"><a name="html_field_prm_order" id="html_field_prm_order"></a></span><br>
  <div class="title-1c">Ordre de traitement des param&egrave;tres :</div>
  <br>
Quand vous souhaitez utiliser plusieurs param&egrave;tres dans le m&ecirc;me champ TBS, il peut &ecirc;tre int&eacute;ressant de comprendre dans quel ordre ils sont trait&eacute;s.<br>
Chaque param&egrave;tre change la valeur &agrave; fusionner, mais la source d'o&ugrave; la valeur est prise n'est pas chang&eacute;e. <br>
<br>
<span class="title-1b"> Ordre :</span><br>
1) -&gt; R&eacute;cup&eacute;ration de la valeur du champ &agrave; fusionner.<br>
2) -&gt; Taritement des param&egrave;tres sur la valeur : <br>
&nbsp;&nbsp;&nbsp;&nbsp;2.1) -&gt; <a href="#html_field_prm_onformat" class="opt-name">onformat</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;2.2) -&gt; <a href="#html_field_prm_ope" class="opt-name">ope</a> / plug-ins OnOperation<br>
&nbsp;&nbsp;&nbsp;&nbsp;2.3) -&gt; <a href="#html_field_prm_frm" class="opt-name">frm</a> /  Html ou autre conversion de texte <br>
&nbsp;&nbsp;&nbsp;&nbsp;2.4) -&gt; <a href="#html_field_prm_if" class="opt-name">if</a> <br>
&nbsp;&nbsp;&nbsp;&nbsp;2.5) -&gt; <a href="#html_field_prm_file" class="opt-name">file</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;2.6) -&gt; <a href="#html_field_prm_script" class="opt-name">script</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;2.7) -&gt; . / <a href="#html_field_prm_ifempty" class="opt-name">ifempty</a> / <a href="#html_field_prm_magnet" class="opt-name">magnet</a><br>
3) -&gt; Insertion de la valeur dans le mod&egrave;le. </div>
<div class="title-2"><a name="html_field_var" id="html_field_var"></a>Les champs [var] :</div>
<div class="norm"> Un champ de variable Php est un champ qui affiche une variable Php.<br>
  Son nom doit être composé du mot-clé '<span class="opt-name">var.</span>' suivi du nom de la variable Php.<br>
  Les paramètres de champs standards sont valables pour les champs de variables Php.<br>
  <br>
  Par exemple [var.<span class="opt-name">x</span>] sera remplacé par la valeur de <span class="opt-name">$x</span>. Les variables utilisateurs ainsi que variables prédéfinies ne peuvent être fusionnées <span class="title-1c">que si elles sont globales</span>.<br>
  <br>
  Vous pouvez aussi fusionner des items de tableau, des propri&eacute;t&eacute;s d'objet ou des r&eacute;sultats de m&eacute;thode &agrave; l'aide du s&eacute;parateur point (&quot;.&quot;). Les variables de type <span class="opt-html">Ressource</span> sont ignor&eacute;es.<br>
  Par exemples :<br><div class="decal"> 
  <table border="0" cellpadding="3" cellspacing="0">
    <tr>
      <td>[var.<span class="opt-name">tbl</span>.<span class="opt-name">item1</span>] </td>
      <td width="5">&nbsp;</td>
      <td>va afficher </td>
      <td width="5" class="txt-code">&nbsp;</td>
      <td class="txt-code"><span class="opt-name">$tbl</span>[<span class="opt-value">'item1'</span>] </td>
    </tr>
    <tr>
      <td>[var.<span class="opt-name">tbl</span>.<span class="opt-name">item2</span>.<span class="opt-name">a</span>.<span class="opt-name">0</span>] </td>
      <td>&nbsp;</td>
      <td>va afficher </td>
      <td class="txt-code">&nbsp;</td>
      <td class="txt-code"><span class="opt-name">$tbl</span>[<span class="opt-value">'item2'</span>][<span class="opt-value">'a'</span>][<span class="opt-value">0</span>] </td>
    </tr>
    <tr>
      <td>[var.<span class="opt-name">obj</span>.<span class="opt-name">prop1</span>]</td>
      <td>&nbsp;</td>
      <td>va afficher</td>
      <td class="txt-code">&nbsp;</td>
      <td class="txt-code"><span class="opt-name">$obj</span>-&gt;prop1</td>
    </tr>
    <tr>
      <td>[var.<span class="opt-name">obj</span>.<span class="opt-name">methA</span>]</td>
      <td>&nbsp;</td>
      <td>va afficher</td>
      <td class="txt-code">&nbsp;</td>
      <td class="txt-code"><span class="opt-name">$obj</span>-&gt;methA()</td>
    </tr>
    <tr>
      <td>[var.<span class="opt-name">obj</span>.<span class="opt-name">methB(x,y)</span>]</td>
      <td>&nbsp;</td>
      <td>va afficher</td>
      <td class="txt-code">&nbsp;</td>
      <td class="txt-code"><span class="opt-name">$obj</span>-&gt;methB(<span class="opt-value">'x'</span>,<span class="opt-value">'y'</span>)</td>
    </tr>
    <tr>
      <td>[var.<span class="opt-name">tbl</span>.<span class="opt-name">item3</span>.<span class="opt-name">prop2</span>.<span class="opt-name">item4</span></td>
      <td>&nbsp;</td>
      <td>va afficher</td>
      <td class="txt-code">&nbsp;</td>
      <td class="txt-code"><span class="opt-name">$tbl</span>[<span class="opt-value">'item3'</span>]-&gt;prop2[<span class="opt-value">'item4'</span>]</td>
    </tr>
  </table>
  <span class="versioning">Historique : les m&eacute;thodes avec arguments dans les champs [var] sont support&eacute;es depuis TBS version 3.0.</span></div>
  <br>
  <span class="title-1b">Quand sont fusionn&eacute;s les champs [var] ?</span><br>
Les champs [var] sont fusionn&eacute;s lorsque vous faites appel de la m&eacute;thode <a href="#php_show">Show()</a>. Sauf pour les param&egrave;tres <a href="#html_field_prm_file" class="opt-name">file</a>, <a href="#html_field_prm_script" class="opt-name">script</a>, <a href="#html_field_prm_if" class="opt-name">if</a>, <span class="opt-name">then</span>, <span class="opt-name">else</span> et <a href="#html_block_prm_when" class="opt-name">when</a>. Les champs [var] plac&eacute;s &agrave; l'int&eacute;rieur de ces param&egrave;tres sont fusionn&eacute;s quand ces param&egrave;tres sont trait&eacute;s.<br>
Par exemple :<br> 
<div class="decal">Le champ <span class="opt-html">[var.x]</span> sera fusionn&eacute; sur Show(). <br>
  Mais dans <span class="opt-html">[onload;when [var.x]=1;block=div]</span> il sera fusionn&eacute; sur LoadTemplate() &agrave; cause du champ [onload].</div>
<br>
 Vous pouvez aussi forcer la fusion des champs [var] ou d'autres types de champ &agrave; tout moment gr&acirc;ce &agrave; la m&eacute;thode <a href="#php_mergefield">MergeField()</a>.<br>
 <span class="versioning">Historique : les champs [var] ne sont trait&eacute;s dans les param&egrave;tres &quot;then&quot; et &quot;else&quot; que depuis TBS version 2.02.</span><br>
 <br>
  <span class="title-1b">Champs [var] imbriqu&eacute;s</span><br>
  Les balises TBS qui contiennent des champs [var] imbriqu&eacute;s risquent de ne pas &ecirc;tre fusionn&eacute;s comme vous l'esp&eacute;rez. Vous devez vous souvenir que les champ [var] sont fusionn&eacute;s pendant Show() uniquement, (sauf pour certains param&egrave;tres cit&eacute;s plus haut). <br>
  Exemple : <br>
  <div class="decal"><span class="opt-html">[b1.name;block=tr;headergrp=[var.x]]</span><br>
    Dans cet exemple, [var.x] ne sera pas encore fusionn&eacute; quand vous  appelez <span class="txt-code"><span class="opt-value">$TBS-&gt;MergeBlock('b1',...)</span></span><br>
    L'ent&ecirc;te de groupe sera donc d&eacute;fini de fa&ccedil;on incorrecte.
    <br>
  Il faut : <br>
  - 
  soit appeler <span class="opt-value"><span class="txt-code">$TBS-&gt;MergeField('var') </span></span>avant<span class="opt-value"><span class="txt-code"> $TBS-&gt;MergeBlock('b1',...)</span></span><br>
  - soit utiliser un type de champ personnalis&eacute; <span class="opt-html">[b1.name;block=tr;headergrp=[zzz]]</span> fusionn&eacute; avec <span class="opt-value"><span class="txt-code">$TBS-&gt;MergeField('zzz',$x)</span></span><br>
  - soit utiliser un champ var/onload support&eacute;s depuis TBS 3.2.0 : <span class="opt-html">[b1.name;block=tr;headergrp=[onload.x]]</span></div>
  <br>
  <span class="title-1b">Sécurité : comment limiter l'utilisation des champs [var] dans les modèles ?</span><br>
  <br>
  Vous pouvez limiter l'utilisation des champs [var] en définissant un préfixe de variable autorisé lors de la création de l'objet TinyButStrong.<br>
  <div class="decal">Exemple :<br>
    <span class="txt-code"><span class="opt-name">&nbsp;&nbsp;$TBS</span> = new clsTinyButStrong(<span class="opt-value">''</span>,<span class="opt-value">'x1_'</span>);</span><br>
    Dans cet exemple, seules les variables Php globales préfixées par <span class="opt-value">'x1_'</span> sont autorisées dans le modèle. Les autres champs [var] produiront un message d'erreur explicite au moment de leur fusion.<br>
&nbsp;&nbsp;[<span class="opt-name">var</span>.<span class="opt-name">x1_title</span>] sera fusionné si la variable globale <span class="opt-name">$x1_title</span> existe. <br>
&nbsp;&nbsp;[<span class="opt-name">var</span>.<span class="opt-name">x2_title</span>] produira un message d'erreur explicite.<br>
    <br>
    NB: le premier paramètre <span class="opt-value">''</span> de clsTinyButStrong() dans cet exemple est utilisé pour définir les délimiteurs de balises TBS. Mais cela n'est pas décrit dans ce manuel.<br>
  </div>
</div>
<div class="title-2"><a name="html_field_specialvar" id="html_field_specialvar"></a>Les champs [var] Spéciaux :</div>
<div class="norm"> Un champ [var] Spécial est un champ TBS qui affiche des données fournies par le système TinyButStrong.<br>
  Le nom d'un champ [var] Spécial doit être un de la liste ci-dessous.<br>
  Les paramètres de champs TBS standards sont valables pour les champs [var] Spéciaux.<br>
  <br>
  Exemple : <span class="opt-html">Date du jour : </span>[<span class="opt-name">var..now</span>;frm='dd/mm/yyyy'] <br>
  <br>
  <table border="0" cellpadding="5" cellspacing="0">
    <tr class="title-1b">
      <td width="80" align="left" valign="top">Nom</td>
      <td align="left" valign="top">Description</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">var..now</td>
      <td align="left" valign="top">Date et heure du serveur.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">var..version</td>
      <td align="left" valign="top"> La version de TinyButStrong. </td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">var..script_name</td>
      <td align="left" valign="top">Le nom du fichier PHP en cours d'exécution.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">var..template_name</td>
      <td align="left" valign="top">Le nom du dernier fichier modèle chargé.<br>
        Il s'agit du nom tel que indiqué lors de l'appel à la méthode <a href="#php_loadtemplate">LoadTemplate()</a>.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">var..template_date</td>
      <td align="left" valign="top">La date de création du dernier fichier modèle chargé.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">var..template_path</td>
      <td align="left" valign="top">Le répertoire du dernier fichier modèle chargé.<br>
        Il s'agit du répertoire tel que indiqué lors de l'appel à la méthode <a href="#php_loadtemplate">LoadTemplate()</a>. </td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">var..tplvars.*</td>
      <td align="left" valign="top">La valeur d'un item défini dans la propriété <a href="#php_tplvars">TplVars</a>.<br>
        ('*' doit être la clé d'un item existant dans le tableau)</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">var..cst.*</td>
      <td align="left" valign="top">La valeur d'une constante PHP .<br>
        (* doit &ecirc;tre le nom d'une constante existante) </td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">var..tbs_info</td>
      <td align="left" valign="top">Information sur TBS et les plug-ins install&eacute;s. </td>
    </tr>
  </table>
  <br>
  <span class="versioning">Historique : les champs var sp&eacute;ciaux  &quot;cst&quot; et &quot;tbs_info&quot; sont support&eacute;s depuis TBS version 3.2.0</span><br>
  <br>
  <span class="title-1b">Quand sont fusionnés les champs [var] Spéciaux ?</span><br>
Les champ [var] Spéciaux sont fusionnés à l'appel de la méthode <a href="#php_show">Show()</a>, c'est à dire juste avant l'affichage du résultat de la fusion. Mais vous pouvez forcer la fusion à tout moment avec la méthode <a href="#php_mergefield">MergeField()</a>.</div>
<div class="title-2"><a name="html_block" id="html_block"></a>Les blocs TBS :</div>
<div class="norm">Un bloc TBS permet de d&eacute;finir une zone et d'afficher les données d'une source d'enregistrements.<br>
	On peut d&eacute;finir un bloc TBS &agrave; l'aide d'une ou deux balises TBS (voir plus bas). <br>
  <br>
  <span class="title-1b">Fusion avec des donn&eacute;es : </span><br>
  La fusion d'un bloc avec des données est réalisée gr&acirc;ce à la méthode <a href="#php_mergeblock">MergeBlock()</a>.
  Quand un bloc TBS est fusionn&eacute; avec des donn&eacute;es, il est répété autant de fois qu'il y a d'enregistrements ; et les champs TBS associés sont remplacés par les valeurs des colonnes de l'enregitrement en cours.<br>
  Un champ TBS associ&eacute; &agrave; un bloc est identifi&eacute; par son nom qui doit &ecirc;tre compos&eacute; du nom du bloc suivi du nom de la colonne &agrave; afficher  et s&eacute;par&eacute;s par un point.<br>
  Exemples :<br> 
  <div class="decal">  	- [<span class="opt-name">Bloc1</span>.<span class="opt-name">ColA</span>]   Ce champ affichera la valeur de la conne <span class="opt-name">ColA</span> lors de la fusion du bloc <span class="opt-name">Bloc1</span>.<br>
 	- [<span class="opt-name">Bloc1</span>.<span class="opt-name">ColB</span>;<span class="opt-name">frm</span>=<span class="opt-value">'dd-mm-yyyy'</span>] Champ avec un param&egrave;tre </div> 
  <br>
  <span class="title-1b">Attention </span>: lorsque deux blocs s&eacute;par&eacute;s portent le même nom, alors ils  seront considérés comme deux sections d'un même bloc. Tout ce qui se trouve entre deux sections d'un bloc sera <span class="title-1c">ignor&eacute; et supprim&eacute;</span> lors de la fusion. Voir <a href="#html_block_section">sections de bloc</a> pour plus de d&eacute;tail sur les sections.<br> 
  <br>
  <br>
  <div class="title-1c">Syntaxes des blocs :</div>
  <br>
  Il existe trois syntaxes possibles pour définir un bloc TBS :<br>
  <br>
  <div class="title-1b">Syntaxe explicite :</div>
  <div class="decal">On utilise deux balises TBS. L'une pour le début du bloc, l'autre pour la fin du bloc.
    <div class="decal">Exemple :<br>
      <span class="opt-html"><strong>HTML...</strong></span>[<span class="opt-name">NomBloc</span>;<span class="opt-name">block</span>=<span class="opt-value">begin</span><span class="opt-value">;<span class="opt-name">params</span></span>]<span class="opt-html"><strong>...HTML...</strong></span>[<span class="opt-name">NomBloc</span>;<span class="opt-name">block</span>=<span class="opt-value">end</span>]<span class="opt-html"><strong>...HTML</strong></span></div>
    <span class="opt-html"></span> Ces balises TBS de définition du bloc seront supprimées lors de la fusion.</div>
  <br>
  <div class="title-1b">Syntaxe relative :</div>
  <div class="decal">Le bloc est défini par un couple de balises Html ouvrante-fermante, qui est donn&eacute; par une balise TBS unique.<br>
    <div class="decal">Exemple :<br>
      <span class="opt-html"><strong>HTML...&lt;nom_balise...&gt;...</strong></span>[<span class="opt-name">NomBloc</span>;<span class="opt-name">block</span>=<span class="opt-value">nom_balise</span><span class="opt-value">;<span class="opt-name">params</span></span>]<span class="opt-html"><strong>...&lt;/nom_balise...&gt;...HTML</strong></span></div>
    Cette balise TBS de définition du bloc doit se trouver n'import où entre le couple de balises Html.<br>
  Cette balise TBS sera supprimée lors de la fusion.<br>
  <span class="title-1b">Remarque :</span> Vous pouvez aussi d&eacute;finir une zone de bloc en combinant des balises HTML. Voir le param&egrave;tre  <a href="#html_block_prm_block" class="opt-name">block</a> pour plus de d&eacute;tails. </div>
  <br>
  <div class="title-1b">Syntaxe simplifiée :</div>
  <div class="decal">On utilise un champ TBS associé pour définir le bloc de façon relative (voir syntaxe relative ci-dessus).<br>
    <div class="decal">Exemple :<br>
      <span class="opt-html"><strong>HTML...&lt;nom_balise...&gt;...</strong></span>[<span class="opt-name">NomBloc</span>.<span class="opt-name">NomColonne</span>;<span class="opt-name">block</span>=<span class="opt-value">nom_balise;<span class="opt-name">params</span></span>]<span class="opt-html"><strong>...&lt;/nom_balise...&gt;...HTML</strong></span></div>
    Le champ TBS qui contient la définition du bloc (c'est &agrave; dire le param&egrave;tre <span class="opt-name">block</span>=<span class="opt-value">...</span>) doit se trouver entre le couple de balises Html. Vous n'&ecirc;tre pas oblig&eacute; de le mettre le param&egrave;tre <span class="opt-name">block</span> sur le premier champ, &ccedil;a peut &ecirc;tre n'importe lequel &agrave; l'int&eacute;rieur de la zone d&eacute;finie par le bloc. <br>
    <span class="title-1b">Remarques :</span><br>
&bull;    vous ne devez pas r&eacute;peter le param&egrave;tre <span class="opt-name">block</span>=<span class="opt-value">...</span> sur chaque champ du bloc, un seul suffit. Si vous en mettez plusieurs, ce sera accept&eacute; par TBS mais il y aura peut &ecirc;tre des confusions sur  des  param&egrave;tres de bloc compl&eacute;mentaires.<br>
  &bull; Vous pouvez aussi d&eacute;finir une zone de bloc en combinant des balises HTML. Voir le param&egrave;tre <a href="#html_block_prm_block" class="opt-name">block</a> pour plus de d&eacute;tails. </div>
  <br>
	<div class="note">
<div class="title-1b">Quelle syntaxe utiliser ?</div>
  <br>
  La syntaxe 'explicite' est rarement utilisée avec des éditeurs visuels parce que les balises TBS doivent souvent être placés entre deux balises Html. Par contre, elle convient assez bien pour des éditeurs textuels. <br>
  <br>
  La syntaxe 'relative' permet de désigner un bloc avec seulement une balise TBS. De plus, on pas besoin de cacher la balise TBS car elle sera supprimée lors de l'affichage. Cette syntaxe est assez pratique.<br>
  <br>
  La syntaxe 'simplifiée' est réellement simple. Elle permet de définir un bloc TBS et un champ TBS avec une seule balise TBS. Cette syntaxe est la plus courante et la plus pratique.<br>
  <br>
  <div class="title-1b">Astuce :</div>
  Vous pouvez utiliser la syntaxe 'relative' ou 'simplifiée' avec des balises personnelles ayant la norme Html.<br>
  Exemple :<br>
  <span class="opt-html">&lt;balise_perso&gt;</span>Bonjour [<span class="opt-name">blk1</span>.<span class="opt-name">colonne1</span>;<span class="opt-name">block</span>=<span class="opt-value">balise_perso</span>], comment allez vous ?<span class="opt-html">&lt;/balise_perso&gt;</span><br>
 	</div>
  <br>
  <table border="0" cellpadding="5" cellspacing="0">
    <tr class="title-1b">
      <td width="80" align="left" valign="top">&Eacute;lément</td>
      <td align="left" valign="top">Description</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="opt-name">NomBloc</td>
      <td align="left" valign="top">Le nom du bloc.</td>
    </tr>
    <tr>
			<td align="left" valign="top" class="opt-name">params</td>
    	<td align="left" valign="top"> Facultatif. Un ou plusieurs param&egrave;tres de la liste ci-apr&egrave;s. S&eacute;par&eacute;s par des ';'.</td>
   	</tr>
    <tr>
      <td align="left" valign="top"><span class="opt-name">block</span>=<span class="opt-value">begin</span></td>
      <td align="left" valign="top">La balise TBS d&eacute;finie le début du bloc.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><span class="opt-name">block</span>=<span class="opt-value">end</span></td>
      <td align="left" valign="top">La balise TBS d&eacute;finie la fin du bloc.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><span class="opt-name"><span class="opt-value"><a name="html_block_prm_block" id="html_block_prm_block"></a></span>block</span>=<span class="opt-value">balise</span><br>
      	<span class="txt-small">ou</span><br>
      	<span class="opt-name">block</span>=<span class="opt-value">expr</span><br>      </td>
      <td align="left" valign="top">D&eacute;finie un bloc compris entre la balise Html ouvrante <span class="opt-html">&lt;balise...&gt;</span> et la balise Html fermante <span class="opt-html">&lt;/balise&gt;</span> qui encadrent la balise TBS. Les balises Html d&eacute;sign&eacute;es font partie int&eacute;grante du bloc.<br>
      	Exemple :<br>      	
      		<div class="decal"><span class="opt-html">&lt;table id=&quot;tab1&quot;&gt;</span>&nbsp;<span class="blockzone"><span class="opt-html">&lt;tr&gt;&lt;td&gt;</span>[<span class="opt-name">b1</span>.<span class="opt-name">champ1</span>;<span class="opt-name">block</span>=tr]<span class="opt-html">&lt;/td&gt;&lt;/tr&gt;</span></span><span class="opt-html">&lt;/table&gt;</span><br>
   			<span class="txt-small">Le bloc est d&eacute;finie par la zone encadr&eacute;e en pointillets.</span> </div>
     			<br>
     			<span class="title-1b">Indicateurs sp&eacute;ciaux :</span><br>
     			<table border="0" cellspacing="0" cellpadding="4">
						<tr>
							<td width="80" valign="top"><span class="opt-name">block</span>=<span class="opt-value">_</span></td>
							<td valign="top">D&eacute;fini un bloc sur la ligne texte qui porte la balise TBS. Une ligne texte se termine toujours par un caract&egrave;re saut-de-ligne. Les sauts de ligne Windows, Linux et Mac sont support&eacute;s. Cette fonctionalit&eacute; est tr&egrave;s pratique pour une mod&egrave;le de type texte par exemple. </td>
						</tr>
						<tr>
							<td valign="top"><span class="opt-name">block</span>=<span class="opt-value">tag/</span></td>
							<td valign="top">En ajoutant le caract&egrave;re / &agrave; la fin du nom de balise, TBS ne va pas chercher de balise fermante. Le bloc sera d&eacute;fini sur la simple balise HTML ouvrante qui contient la balise TBS. Cela peut &ecirc;tre pratique pour multiplier une image par exemple. </td>
						</tr>
					</table>
     			Remarque : les indicateurs sp&eacute;ciaux peuvent &ecirc;tre utilis&eacute;s pour les extensions de bloc (voir ci-dessous). <br>
     			<br> 
   			<br>
     			<div class="versioning">Historique : Les indicateurs sp&eacute;ciaux &quot;_&quot; et &quot;/&quot; sont support&eacute;s depuis TBS 3.1.0.</div>
     			<br>
      	<span class="title-1b">Extension de bloc  TBS :</span> <br>
      	Vous  pouvez d'&eacute;tendre  la zone du bloc (ou de la section) au d&eacute;l&agrave; de la simple balise Html en utilisant les expresions suivantes :<br>
      	<br>
      	Pour &eacute;tendre la zone du bloc sur plusieurs balises  successives  :<br> 
      	<div class="decal"><span class="opt-html">&lt;table&gt;</span><span class="blockzone"><span class="opt-html">&lt;tr&gt;</span>[<span class="opt-name">b1</span>.<span class="opt-name">champ1</span>;<span class="opt-name">block</span>=<span class="opt-value">tr</span>+<span class="opt-value">tr</span>+<span class="opt-value">tr</span>]<span class="opt-html">&lt;/tr&gt;<span class="blocksep">&lt;</span>tr&gt;...&lt;/tr&gt;<span class="blocksep">&lt;</span>tr&gt;...&lt;/tr&gt;</span></span>&lt;/table&gt;<br>
     		<span class="txt-small">Remarque : vous pouvez sp&eacute;cifier des balises de type diff&eacute;rents</span></div>
      	<br>
      	Pour &eacute;tendre la zone du bloc sur plusieurs  balises   successives plac&eacute;es avant : <br>
      	<div class="decal"><span class="opt-html">...</span> <span class="blockzone"><span class="opt-html">&lt;span&gt;...&lt;/span&gt;<span class="blocksep">&lt;</span>div&gt;</span>[<span class="opt-name">b1</span>.<span class="opt-name">champ1</span>;<span class="opt-name">block</span>=<span class="opt-value">span</span>+(<span class="opt-value">div)</span>]<span class="opt-html">&lt;/div&gt;</span></span> <span class="opt-html">...</span> <br>
      		Autre exemple : <br>
      		<span class="opt-html">...</span> <span class="blockzone"><span class="opt-html">&lt;span&gt;...&lt;/span&gt; <span class="blocksep">&lt;</span>div&gt;</span>[<span class="opt-name">b1</span>.<span class="opt-name">champ1</span>;<span class="opt-name">block</span>=<span class="opt-value">span</span>+(<span class="opt-value">div)</span>+<span class="opt-value">table</span>]<span class="opt-html">&lt;/div&gt; <span class="blocksep">&lt;</span>table&gt;...&lt;/table&gt;</span></span> <span class="opt-html">...</span> <br> 
      	La balise mise entre parenth&egrave;se repr&eacute;sente celle qui contient le champ de d&eacute;finition de bloc. </div>
      	<br>
      	Pour &eacute;tendre la zone du bloc sur une  balise d'un niveau  d'encapsulation sup&eacute;rieure : <br>
      	<div class="decal"><span class="blockzone"><span class="opt-html">&lt;div&gt; &lt;div&gt;</span> [<span class="opt-name">b1</span>.<span class="opt-name">champ1</span>;<span class="opt-name">block</span>=<span class="opt-value">((div))</span>] <span class="opt-html">&lt;/div&gt; &lt;/div&gt;</span></span> <br>
      	Le nombre de parent&egrave;se repr&eacute;sente le niveau d'encapuslation des balises. </div>
      	<br>
				<div class="versioning">Historique : L'extension de bloc a &eacute;t&eacute; ajout&eacute;e  &agrave;  TBS version 3.0. Avant cel&agrave;, il fallait utiliser les param&egrave;tres 'extend' et 'encaps' qui ne sont plus support&eacute;s actu&egrave;lement.<br>
				</div></td>
    </tr>
  </table>
  <br>
  <a name="html_block_prm" id="html_block_prm"></a>
  <div class="title-1c">Paramètres des blocs :</div>
  <br>
  <table border="0" cellpadding="5" cellspacing="0">
    <tr class="title-1b">
      <td width="80" align="left" valign="top">Paramètre</td>
      <td align="left" valign="top">Description</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><a name="html_block_prm_nodata" id="html_block_prm_nodata"></a><span class="opt-name">nodata</span></td>
      <td align="left" valign="top" class="border-sep">Désigne une section qui ne s'affiche que s'il n'y a aucune donnée à fusionner.<br>
        <br>
        Exemple :<br>
        <div class="decal">
        <table width="349" cellpadding="2" cellspacing="0" class="border-1">
          <tr>
            <td width="178" class="border-1">[b1.champ1;<span class="opt-name">block</span>=<span class="opt-value">tr</span>]</td>
            <td width="157" class="border-1">[b1.champ2]</td>
          </tr>
          <tr>
            <td colspan="2" class="border-1">[b1;<span class="opt-name">block</span>=<span class="opt-value">tr</span>;<span class="opt-name">nodata</span>]<font color="#FF3300">Il n'y a aucune donnée.</font></td>
          </tr>
        </table></div>
        <br>
      Pour plus d'information sur les sections, voir le paragraphe '<a href="#html_block_section">sections de bloc</a>'.</td>
    </tr>
    <tr>
    	<td align="left" valign="top" class="border-sep"><a name="html_block_prm_bmagnet" id="html_block_prm_bmagnet"></a><span class="opt-name">bmagnet</span>=<span class="opt-value">tag</span><br>
        <span class="txt-small">ou</span><br>
        <span class="opt-name">bmagnet</span>=<span class="opt-value">expr</span></td>
    	<td align="left" valign="top" class="border-sep">D&eacute;signe une zone Html qui doit &ecirc;tre supprim&eacute;e si le bloc n'est fusionn&eacute; avec aucun enregistrement (une requ&ecirc;te vide, par exemple, ou un tableau PHP sans item). Le param&egrave;tre <span class="opt-name">bmagnet</span> a la m&ecirc;me syntaxe que le param&egrave;tre <a href="#html_block_prm_block" class="opt-name">block</a>, c'est &agrave; dire que <span class="opt-value">expr</span> doit &ecirc;tre une balise Html ou une extension de bloc TBS.<br>
    		Exemple :
    			<div class="decal">
						<table cellpadding="2" cellspacing="0" class="border-1">
							<tr>
								<td class="border-1">[b1.champ1;<span class="opt-name">block</span>=<span class="opt-value">tr</span>;<span class="opt-name">bmagnet</span>=<span class="opt-value">table</span>]</td>
								<td class="border-1">[b1.champ2]</td>
							</tr>
						</table>
 						<span class="txt-small">Dans cet exemple, la table sera supprim&eacute;e si il n'y a aucun enregistrement &agrave; fusionner.</span> </div>
					<br>
					<span class="title-1b">Remarque :</span> La valeur <span class="opt-value">null</span> n'est pas accept&eacute;e par la m&eacute;thode MergeBlock() comme une source de donn&eacute;es, et elle provoque une erreur TBS au lieu de supprimer la zone <span class="opt-name">bmagnet</span>. Si votre source peut &ecirc;tre nulle, vous devez faire une v&eacute;rification pr&eacute;alable. <br>
					Exemple :
				<div class="decal"><span class="txt-code">if (is_null(<span class="opt-name">$data</span>)) <span class="opt-name">$data</span> = array();<br>
						<span class="opt-name">$TBS</span>-&gt;MergeBlock(<span class="opt-value">'b1'</span>,<span class="opt-name">$data</span>);</span></div>
					<br>
			<div class="versioning">Historique : le param&egrave;tre bmagnet   est support&eacute; depuis TBS version 3.0.</div></td>
   	</tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><a name="html_block_prm_headergrp" id="html_block_prm_headergrp"></a>headergrp</span>=<span class="opt-value">colnom</span></td>
      <td align="left" valign="top" class="border-sep">Désigne une section d'entête qui sera affichée chaque fois que la colonne <span class="opt-value">colnom</span> change de valeur. <span class="opt-value">colnom</span> doit être un nom de colonne valide retourné par la source de données.<br>
        <span class="versioning">Depuis  TBS version 3.3.0</span>, <span class="opt-value">colnom</span> peut aussi &ecirc;tre une colonne virtuelle  <a href="#php_mergeblock_counting"># ou $</a>, et il supporte aussi la syntaxe des sous-items des champs TBS.<br>
        Vous pouvez définir plusieurs sections <span class="opt-name">headergrp</span> sur des colonnes différentes. L'ordre de placement des sections <span class="opt-name">headergrp</span> dans un bloc peut changer le résulat. <br>
        <br>
      Pour plus d'information sur les sections, voir le paragraphe '<a href="#html_block_section">sections de bloc</a>'.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><a name="html_block_prm_footergrp" id="html_block_prm_footergrp"></a>footergrp</span>=<span class="opt-value">colnom</span></td>
      <td align="left" valign="top" class="border-sep">Désigne une section de pied qui sera affichée chaque fois que la colonne <span class="opt-value">colnom</span> change de valeur. See <span class="opt-name">headergrp</span>. </td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><a name="html_block_prm_splittergrp" id="html_block_prm_splittergrp"></a>splittergrp</span>=<span class="opt-value">colnom</span></td>
      <td align="left" valign="top" class="border-sep">Désigne une section de séparation qui sera affichée chaque fois que la colonne <span class="opt-value">colnom</span> change de valeur. See <span class="opt-name">headergrp</span>. </td>
    </tr>
    <tr id="v202_parentgrp">
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><a name="html_block_prm_parentgrp" id="html_block_prm_parentgrp"></a>parentgrp</span>=<span class="opt-value">colnom</span></td>
      <td align="left" valign="top" class="border-sep">D&eacute;signe une section parent qui sera affich&eacute;e chaque fois que la colonne  <span class="opt-value">colnom</span> change de valeur. Contrairement aux autres sections, une section <span class="opt-name">parentgrp</span> peut contenir des sections normales. C'est un moyen de d&eacute;finir un ent&ecirc;te et  pied de groupe avec une seule section. </td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><a name="html_block_prm_serial" id="html_block_prm_serial"></a><span class="opt-name">serial</span></td>
      <td align="left" valign="top" class="border-sep">Indique que le bloc est un bloc principal qui contient une série de blocs secondaires.<br>
      Pour plus d'information, voir le paragraphe '<a href="#html_block_serial">Affichage en série (en colonne)</a>'.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><a name="html_block_prm_p1" id="html_block_prm_p1"></a>p1</span>=<span class="opt-value">val1</span></td>
      <td align="left" valign="top" class="border-sep">Signal l'utilisation d'une requête dynamique. Toutes les occurrences de la chaîne '<span class="opt-value">%p1%</span>' trouvées dans la requête passée à la méthode MergeBlock() sont remplacées par la valeur <span class="opt-value">val1</span>.<br>
      Pour plus d'information, voir le paragraphe '<a href="#html_block_subblock">Requêtes dynamiques / sous blocs</a>'.</td>
    </tr>
    <tr id="v205_ondata">
      <td align="left" valign="top" class="border-sep"><span class="opt-value"><a name="html_block_prm_ondata" id="html_block_prm_ondata"></a></span><span class="opt-name">ondata</span>=<span class="opt-value">nom_fct</span></td>
      <td align="left" valign="top" class="border-sep"> Indique le nom d'une fonction  Php utilisateur qui sera ex&eacute;cut&eacute;e pendant la fusion du bloc. <br>
      	Depuis TBS version 3.0, il est aussi possible d'indiquer une m&eacute;thode de classe (voir <a href="#php_oop">POO</a>).<br>
      	Cette fonction est appel&eacute;e chaque fois qu'un enregistrement est r&eacute;cup&eacute;r&eacute; dans la source de donn&eacute;es. Vous pouvez utilisez les arguments d'une telle fonction Php pour modifier les enregistrements avants qu'ils ne soient fusionn&eacute;s. La fonction doit avoir la syntaxe suivante:<br>
          <span class="txt-code">&nbsp;&nbsp;function <span class="opt-value">nom_fct</span>(<span class="opt-name">$NomBloc</span>,&amp;<span class="opt-name">$Enreg</span>,<span class="opt-name">$NumEnreg</span>) { ... }<br>
          </span> <span class="opt-name"> </span>
          <table border="0" cellspacing="0" cellpadding="2">
            <tr class="title-1b">
              <td width="80" valign="top">Argument</td>
              <td>Description</td>
            </tr>
            <tr>
              <td valign="top"><span class="opt-name">$</span><span class="opt-name">NomBloc</span></td>
              <td>Returns the name of the block calling the function (read only).</td>
            </tr>
            <tr>
              <td valign="top" class="opt-name">$Enreg</td>
              <td>Returns an associative PHP array containing the current record (read/write<span class="txt-small"> <em>; don't forget the &amp; in the function header</em></span>).<br>
          If you set this variable to <span class="opt-value">False</span>, it ends the merging like it was the end of the record set.</td>
            </tr>
            <tr>
              <td valign="top"><span class="opt-name">$</span><span class="opt-name">NumEnreg</span></td>
              <td>Returns the number of the current record (read only, first record is number 1).</td>
            </tr>
          </table>
          <span class="title-1b">Exemples :</span>
          <div class="decal txt-code"> function f_ajout_colonne(<span class="opt-name">$NomBloc</span>,<span class="opt-name">&amp;$Enreg</span>,<span class="opt-name">$NumEnreg</span>) {<br>
&nbsp;&nbsp;<span class="opt-name">$</span><span class="opt-name">Enreg</span>[<span class="opt-value">'taille'</span>] = strlen(<span class="opt-name">$</span><span class="opt-name">Enreg</span>[<span class="opt-value">'texte'</span>]); <br>
      } </div>      </td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><span class="opt-name"><a name="html_block_prm_when" id="html_block_prm_when"></a>when</span> <span class="opt-value">expr1</span><span class="opt-name">=</span><span class="opt-value">expr2</span></td>
      <td align="left" valign="top" class="border-sep"> Rend la section conditionelle et d&eacute;finie la condition. Un section conditionelle est affich&eacute;e que si sa condition est v&eacute;rifi&eacute;e. <br>
        Les opérateurs supportés sont :<br>
        <div class="decal">
          <table  border="0" cellpadding="0" cellspacing="2">
            <tr>
              <td width="60"><span class="opt-name">=</span> ou<span class="opt-name">==</span> </td>
              <td>égale</td>
            	<td>&nbsp;</td>
            </tr>
            <tr>
              <td class="opt-name">!=</td>
              <td>différent</td>
            	<td>&nbsp;</td>
            </tr>
            <tr>
              <td class="opt-name">+-</td>
              <td>supérieur strictement </td>
            	<td>&nbsp;</td>
            </tr>
            <tr>
              <td class="opt-name">+=-</td>
              <td>supérieur ou égal</td>
            	<td>&nbsp;</td>
            </tr>
            <tr>
              <td class="opt-name">-+</td>
              <td>inférieur strictement</td>
            	<td>&nbsp;</td>
            </tr>
            <tr>
              <td class="opt-name">-=+</td>
              <td>inférieur ou égal</td>
            	<td>&nbsp;</td>
            </tr>
            <tr>
            	<td valign="top" class="opt-name">~=</td>
            	<td valign="top"><span class="opt-value">expr1</span> v&eacute;rifie l'expression  
           		rationelle <span class="opt-value">expr2</span><br>
           		<span class="txt-small">(pour utilisateurs exp&eacute;riment&eacute;s)</span></td>
           		<td valign="top"><div class="versioning">Historique : ajout&eacute; &agrave;  TBS 3.0 </div></td>
            </tr>
          </table>
        </div>
        <SPAN class=opt-value>exp1</SPAN> et <SPAN class=opt-value>exp2</SPAN> doivent être des expressions numériques ou textes. Les expressions peuvent contenir des <a href="#html_field_var">champs [var]</a> dans un <a href="#html_automatic">bloc automatique</a> ([onload], [onshow]), ou des champs li&eacute;s dans un bloc fusionn&eacute;. <br>
        <span class="title-1b">Exemple :</span>
				<div class="decal"><span class="opt-html">&lt;div&gt;</span>[<span class="opt-name">onload</span>;<span class="opt-name">block</span>=<span class="opt-value">div</span>;<span class="opt-name">when</span> [<span class="opt-name">var</span>.<span class="opt-name">x</span>]+-<span class="opt-value">0</span>] ... <span class="opt-html">&lt;/div&gt;</span><br>
					<span class="txt-small">Le bloc &lt;div&gt; ne sera affich&eacute; que si $x&gt;0. </span></div>
				<br>
				<span class="title-1b">Remarque :</span> ne pas confondre le param&egrave;tre <span class="opt-name">when</span> (qui ne marche qu'avec les blocs et sections TBS) et le param&egrave;tre <span class="opt-name">if</span> (qui ne marche qu'avec les champs TBS). Le param&egrave;tre <span class="opt-name">when</span> n'est pris en compte que si le param&egrave;tre <span class="opt-name">block</span> est pr&eacute;sent dans la m&ecirc;me balise TBS. <br>
			Consultez la rubrique  <a href="#html_conditional">blocs conditionnels</a> pour plus d'information.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><a name="html_block_prm_default" id="html_block_prm_default"></a><span class="opt-name">default</span></td>
      <td align="left" valign="top" class="border-sep">S'utilise uniquement avec les <a href="#html_conditional">blocs conditionnels</a>. Indique un bloc conditionnel qui ne doit s'afficher que si aucune des autres sections du même bloc (nommé) n'a été affiché.</td>
    </tr>
    <tr>
      <td align="left" valign="top" class="border-sep"><a name="html_block_prm_several" id="html_block_prm_several"></a><span class="opt-name">several</span></td>
      <td align="left" valign="top" class="border-sep">S'utilise uniquement avec les <a href="#html_conditional">blocs conditionnels</a>. Indique que plusieurs sections du bloc (nommé) peuvent être affichées si plusieurs conditions sont vérifiées. Par défaut, les sections sont exclusives.</td>
    </tr>
  </table>
</div>
<div class="title-2"><a name="html_block_section" id="html_block_section"></a>Sections de bloc :</div>
<div class="norm">Différents blocs portant le même nom seront considérés comme des sections du même bloc.<br>
  Les sections peuvent servir pour :<br>
  - alterner la présentation (sections normales),<br>
  - afficher quelque chose si il n'y a aucun enregistrement (section NoData),<br>
  - afficher un entête à chaque changement de la valeur d'une colonne (sections de regroupement).<br>
  <br>
  <div class="title-1b">Sections normales :</div>
  <br>
  Quand vous définissez plusieurs sections normales, elles seront utilisées de façons alternatives à chaque enregistrement.<br>
  <br>
  <div class="decal">Exemple :<br>
    <br>
    <table width="200" cellpadding="2" cellspacing="0" class="border-1">
      <tr>
        <td bgcolor="#F0FCFF" class="border-1">[<span class="opt-name">b1</span>.libelle;<span class="opt-name">block</span>=tr]</td>
      </tr>
      <tr>
        <td bgcolor="#D2FFE9" class="border-1">[<span class="opt-name">b1</span>.libelle;<span class="opt-name">block</span>=tr]</td>
      </tr>
    </table>
    <br>
    <span class="txt-small">Dans cet exemple, le bloc nommé 'b1' contient deux sections normales. Les enregistrements seront affichés alternativement avec un fond vert puis un fond bleu.</span></div>
  <br>
  <div class="title-1b">Section NoData :</div>
  <br>
  Affiche la section si la source de données de contient aucun enregistrement. <br>
  La section NoData est définie en ajoutant le paramètre <span class="opt-name">nodata</span>.<br>
  <br>
  <div class="decal">Exemple :<br>
    <br>
    <table width="250" cellpadding="2" cellspacing="0" class="border-1">
      <tr>
        <td class="border-1">[<span class="opt-name">b1</span>.libelle;<span class="opt-name">block</span>=tr]</td>
      </tr>
      <tr>
        <td bgcolor="#FFCCCC" class="border-1"><span class="opt-html">Il n'y a rien</span>. [<span class="opt-name">b1</span>;<span class="opt-name">block</span>=tr;<span class="opt-name">nodata</span>]</td>
      </tr>
    </table>
  </div>
  <br>
  <div class="title-1b">Sections de regroupement :</div>
  <br>
  Les sections de regroupement s'affichent chaque fois que la valeur d'une colonne du jeu d'enregistrement change. Vous pouvez d&eacute;finir des sections d'ent&ecirc;tes, de pieds-de-groupe, de s&eacute;paration et des sections parent &agrave; l'aide des param&egrave;tres <span class="opt-name">headergrp</span>, <span class="opt-name">footergrp</span>, <span class="opt-name">splittergrp</span> et <span class="opt-name">parentgrp</span>. Voir les <a href="#html_block_prm_headergrp">param&egrave;tres de bloc</a> pour plus de d&eacute;tail. <br>
  <br>
  <div class="decal">Exemple :<br>
    <br>
    <table width="300" cellpadding="2" cellspacing="0" class="border-1">
      <tr>
        <td colspan="2" class="border-1"><span class="opt-html"><strong>Année&nbsp;:</strong></span>[<span class="opt-name">b1</span>.annee;<span class="opt-name">block</span>=tr;<span class="opt-name">headergrp</span>=annee] </td>
      </tr>
      <tr>
        <td class="border-1">[<span class="opt-name">b1</span>.libelle]</td>
        <td class="border-1">[<span class="opt-name">b1</span>.montant;<span class="opt-name">block</span>=tr]</td>
      </tr>
    </table>
  </div>
  <br>
  <div id="v202_section_cond"><div class="title-1b">Sections conditionnelles :</div>
  <br>
  Les sections conditionnelles ne s'affichent que lorsque leur condition est v&eacute;rifi&eacute;e. La condition d'affichage est d&eacute;finie avec le param&egrave;tre <a href="#html_block_prm_when" class="opt-name">when</a>. D&egrave;s qu'une section a ce param&egrave;tre, elle devient conditionnelle. Voir le chapitre sur l'<a href="#html_conditional">affichage conditionnel</a> pour plus de d&eacute;tail. <br>
  <br>
  <div class="decal">Exemple :<br>
    <br>
    <table width="300" cellpadding="2" cellspacing="0" class="border-1">
      <tr>
        <td class="border-1">[<span class="opt-name">b1</span>.nom;<span class="opt-name">block</span>=tr]</td>
      </tr>
      <tr>
        <td bgcolor="#DDDDDD" class="border-1">[<span class="opt-name">b1</span>.adresse;<span class="opt-name">block</span>=tr;<span class="opt-name">when</span> [<span class="opt-name">b1</span>.adr_ok]==1]</td>
      </tr>
    </table>
  </div>
  <br></div>
</div>
<div class="title-2"><a name="html_block_serial" id="html_block_serial"></a>Affichage en série (en colonnes) :</div>
<div class="norm">L'affichage en série permet d'afficher plusieurs enregistrements dans un même bloc. Pour cela, on utilise un bloc principal et des blocs secondaires.<br>
  <br>
  <div class="decal">Exemple :<br>
    <br>
    <table width="200" cellpadding="4" cellspacing="0" class="border-2">
      <tr>
        <td class="border-2"><table width="100%" cellpadding="0" cellspacing="0" class="border-1">
            <tr>
              <td width="25%" class="border-1"><div align="center">Enr 1</div></td>
              <td width="25%" class="border-1"><div align="center">Enr 2</div></td>
              <td width="25%" class="border-1"><div align="center">Enr 3</div></td>
              <td width="25%" class="border-1"><div align="center">Enr 4</div></td>
            </tr>
          </table></td>
      </tr>
      <tr>
        <td class="border-2"><table width="100%" cellpadding="2" cellspacing="0" class="border-1">
            <tr>
              <td width="25%" class="border-1"><div align="center">Enr 5</div></td>
              <td width="25%" class="border-1"><div align="center">Enr 6</div></td>
              <td width="25%" class="border-1"><div align="center">Enr 7</div></td>
              <td width="25%" class="border-1"><div align="center">Enr 8</div></td>
            </tr>
          </table></td>
      </tr>
      <tr>
        <td class="border-2"><table width="100%" cellpadding="2" cellspacing="0" class="border-1">
            <tr>
              <td width="25%" class="border-1"><div align="center">Enr 9</div></td>
              <td width="25%" class="border-1"><div align="center">...</div></td>
              <td width="25%" class="border-1"><div align="center">...</div></td>
              <td width="25%" class="border-1"><div align="center">...</div></td>
            </tr>
          </table></td>
      </tr>
    </table>
    <br>
    <span class="txt-small">Dans cet exemple, les blocs principaux sont les lignes bleues du tableau, les blocs secondaires sont les cases roses.</span></div>
  <br>
  <div class="title-1b">Syntaxe :</div>
  Le bloc principal et ses blocs secondaires sont fusionnés à l'aide d'un seul appel à la méthode MergeBock(). Le bloc principal doit être défini en utilisant le paramètre <span class="opt-name">serial</span>. Les blocs secondaires doivent être inclus dans le bloc principal. Leur nom de bloc doit être celui du bloc principal suivi de &quot;_&quot; puis du numéro d'ordre d'affichage.<br>
  <br>
  <div class="decal">Exemple :<br>
    <br>
    <table width="200" cellpadding="4" cellspacing="0" class="border-2">
      <tr>
        <td class="border-2"><table width="100%" cellpadding="2" cellspacing="0" class="border-1">
            <tr>
              <td width="25%" class="border-1"><div align="center">[bx;block=tr;serial][bx_1.txt;block=td]</div></td>
              <td width="25%" class="border-1"><div align="center">[bx_2.txt;block=td]</div></td>
              <td width="25%" class="border-1"><div align="center">[bx_3.txt;block=td]</div></td>
              <td width="25%" class="border-1"><div align="center">[bx_4.txt;block=td]</div></td>
            </tr>
          </table></td>
      </tr>
    </table>
    <br>
    <span class="txt-small">Le code PHP correspondant est :</span><br>
    <span class="txt-code"> &nbsp;$TBS-&gt;MergeBlock('<font color="#000099">bx</font>',$cnx_id,'<font color="#000099">SELECT txt FROM t_info ORDER BY txt</font>')</span></div>
  <br>
  <div class="title-1b"> Bloc secondaire vide :</div>
  Vous pouvez désigner un bloc secondaire spécial qui sera utilisé en remplacement des blocs secondaires inexploités (sans enregistrement). Ce bloc secondaire &quot;vide&quot; doit avoir l'indice 0. Il peut être placé dans un bloc principal avec les blocs secondaires normaux, ou alors seul dans autre bloc <span class="opt-name">serial</span>. Le bloc secondaire &quot;vide&quot; est facultatif.<br>
  <br>
  <div class="decal">Exemple :<br>
    <br>
    <table width="200" cellpadding="4" cellspacing="0" class="border-2">
      <tr>
        <td class="border-2"><table width="100%" cellpadding="2" cellspacing="0" class="border-1">
            <tr>
              <td width="25%" class="border-1"><div align="center">[bx;block=tr;serial][bx_1.txt;block=td]</div></td>
              <td width="25%" class="border-1"><div align="center">[bx_2.txt;block=td]</div></td>
              <td width="25%" class="border-1"><div align="center">[bx_3.txt;block=td]</div></td>
              <td width="25%" class="border-1"><div align="center">[bx_4.txt;block=td]</div></td>
            </tr>
          </table></td>
      </tr>
      <tr>
        <td class="border-2"><table width="100%" cellpadding="2" cellspacing="0" class="border-1">
            <tr>
              <td width="25%" class="border-1"><div align="center">[bx;block=tr;serial][bx_0;block=td] <strong>Vide</strong></div></td>
              <td width="25%" class="border-1">&nbsp;</td>
              <td width="25%" class="border-1">&nbsp;</td>
              <td width="25%" class="border-1">&nbsp;</td>
            </tr>
          </table></td>
      </tr>
    </table>
  </div>
  <br>
  Remarque :<br>
  L'affichage en série marche aussi avec les <a href="#html_block_section">sections de bloc</a> et les <a href="#html_block_subblock">requêtes dynamiques</a>.</div>
<div class="title-2"><a name="html_block_subblock" id="html_block_subblock"></a>Requêtes dynamiques / sous-blocs :</div>
<div class="norm">
  <div class="title-1b">Principe des requêtes dynamiques :</div>
  <br>
  Il est possible d'utiliser la méthode MergeBlock() avec une requête dynamique.<br>
  Dans votre modèle, vous devez définir un bloc en ajoutant les paramètres <span class="opt-name">p1</span>, <span class="opt-name">p2</span>, <span class="opt-name">p3</span>,... avec leurs valeurs.<br>
  La requête passée à la méthode MergeBlock() doit contenir des marqueurs <span class="opt-value">%p1%</span>, <span class="opt-value">%p2%</span>, <span class="opt-value">%p3%</span>, ... pour accueillir les valeurs des paramètres <span class="opt-name">p1</span>, <span class="opt-name">p2</span>, <span class="opt-name">p3</span>,... .<br>
  <br>
  Chaque section du bloc à fusionner contenant un paramètre <span class="opt-name">p1</span> sera traité comme un bloc à part pour lequel on ré-exécute la requête dynamique. Les sections du bloc sui n'ont pas de paramètre <span class="opt-name">p1</span> sont rattachées à la section avec paramètre <span class="opt-name">p1</span> qui précède.<br>
  <br>
  <div class="decal">Exemple :<br>
    <br>
    Pays : France
    <br>
    <table cellpadding="2" cellspacing="0" class="border-1">
      <tr>
        <td width="200" class="border-1">[blk.ville;block=tr;p1='france']</td>
        <td width="100" class="border-1">[blk.pays]</td>
      </tr>
    </table>
    <br>
    Pays : USA
    <br>
    <table cellpadding="2" cellspacing="0" class="border-1">
      <tr>
        <td width="200" class="border-1">[blk.ville;block=tr;p1='us']</td>
        <td width="100" class="border-1">[blk.pays]</td>
      </tr>
    </table>
    <br>
    <span class="txt-small">Code PHP correspondant :</span><br>
    <span class="txt-code">&nbsp;$TBS-&gt;MergeBlock('<span class="opt-value">blk</span>',$cnx_id,&quot;<span class="opt-value">SELECT ville,pays FROM t_geo WHERE (pays='%p1%')</span>&quot;)<br>
    <br>
    </span><span class="txt-small">Résultat de la fusion :<br>
    </span><br>
    Pays : France
    <br>
    
    <table cellpadding="2" cellspacing="0" class="border-1">
      <tr>
        <td width="200" class="border-1">Paris</td>
        <td width="100" class="border-1">france</td>
      </tr>
      <tr>
        <td class="border-1">Toulouse</td>
        <td class="border-1">france</td>
      </tr>
    </table>
    <br>
    Pays : USA
    <br>
    <table cellpadding="2" cellspacing="0" class="border-1">
      <tr>
        <td width="200" class="border-1">Washington</td>
        <td width="100" class="border-1">us</td>
      </tr>
      <tr class="border-1">
        <td class="border-1">Boston</td>
        <td class="border-1">us</td>
      </tr>
    </table>
  </div>
  <br>
  <div class="title-1b">Utilisation avec des sous-blocs :</div>
  <br>
  Les requêtes dynamiques vous permettent de réaliser simplement un système de bloc-principal / sous-blocs. Voici comment vous pouvez faire :<br>
  - Créez un bloc principal, puis un sous-bloc contenu dans le bloc principal.<br>
  - Liez-les en ajoutant au sous-bloc un paramètre p1 qui prend pour valeur un champ du bloc principal.<br>
  - Du c&ocirc;té PHP, fusionnez d'abord le bloc principal, puis le sous-bloc.<br>
  <br>
  <div class="decal">Exemple :<br>
    <br>
    <table width="400" cellpadding="2" cellspacing="0" class="border-2">
      <tr>
        <td class="border-2"><font color="#336699">Pays :</font> [pri.pays;block=table]<br>
          <table cellpadding="1" cellspacing="0" class="border-1">
            <tr>
              <td width="200" class="border-1">[sub.ville;block=tr;p1=[pri.pays_id]]</td>
            </tr>
          </table></td>
      </tr>
    </table>
    <br>
    <span class="txt-small">Code PHP correspondant :</span><br>
    <span class="txt-code">&nbsp;$TBS-&gt;MergeBlock('<span class="opt-value">pri</span>',$cnx_id,'<span class="opt-value">SELECT pays,pays_id FROM t_pays</span>')</span><br>
    <span class="txt-code">&nbsp;$TBS-&gt;MergeBlock('<span class="opt-value">sub</span>',$cnx_id,'<span class="opt-value">SELECT ville FROM t_ville WHERE (pays_id=%p1%)</span>') </span><br>
    <br>
    <span class="txt-small">Résultat de la fusion :</span><br>
    <br>
    <table width="400" cellpadding="2" cellspacing="0" class="border-2">
      <tr>
        <td class="border-2"><font color="#336699">Pays :</font> France<br>
          <table cellpadding="1" cellspacing="0" class="border-1">
            <tr>
              <td class="border-1">Paris</td>
            </tr>
            <tr>
              <td width="190" class="border-1">Toulouse</td>
            </tr>
          </table></td>
      </tr>
      <tr>
        <td class="border-2"><font color="#336699">Pays :</font> Allemagne<br>
          <table cellpadding="1" cellspacing="0" class="border-1">
            <tr>
              <td class="border-1">Berlin</td>
            </tr>
            <tr>
              <td width="190" class="border-1">Munique</td>
            </tr>
          </table></td>
      </tr>
      <tr>
        <td class="border-2"><font color="#336699">Pays : </font>Espagne<br>
          <table cellpadding="1" cellspacing="0" class="border-1">
            <tr>
              <td class="border-1">Madrid</td>
            </tr>
            <tr>
              <td width="190" class="border-1">Barcelone</td>
            </tr>
          </table></td>
      </tr>
    </table>
  </div>
  <br>
  Remarques :<br>
  - Le paramètre <span class="opt-name">htmlconv</span>=<span class="opt-value">esc</span> permet de passer à la requête des valeurs chaînes protégées.<br>
  - Les requêtes dynamiques marchent aussi avec les <a href="#html_block_section">sections de bloc</a> et l'<a href="#html_block_serial">affichages en série</a>.</div>
<div class="title-2"><a name="html_automatic" id="html_automatic"></a>Champs et blocs automatiques :</div>
<div class="norm"><span class="opt-name">onload</span> et <span class="opt-name">onshow</span> sont des noms réservés pour les champs et de blocs TBS qui sont fusionnés automatiquement quand le modèle est chargé par la méthode LoadTemplate() et quand le résultat est affiché par la méthode Show().<br>
  <br>
  Les champs automatiques sont fusionnés avec une valeur vide. Ils acceptent tous les paramètres de champs TBS.<br>
  Ils sont pratiques pour les <a href="#html_subtemplate">sous-modèles</a> ou les <a href="#php_tplvars">variables de modèle</a>.<br>
  <div class="decal">Exemple :<br>
    [<span class="opt-name">onload</span>;<span class="opt-name">file</span>=<span class="opt-value">entete.htm</span>]</div>
  <br>
  Les blocs automatiques ne sont pas fusionn&eacute;s avec des donn&eacute;es. Il ne peuvent avoir que des <a href="#html_conditional">sections conditionnelles</a>.<br>
  <br>
  <div class="decal">Exemples :<br>
    <table cellpadding="1" cellspacing="0" class="border-1">
      <tr>
        <td class="border-1">[<span class="opt-name">onload</span>;<span class="opt-name">block</span>=<span class="opt-value">tr</span>;<span class="opt-name">when </span>[<span class="opt-name">var</span>.statut]==1] <span class="opt-html">Statut 1</span></td>
      </tr>
      <tr>
        <td class="border-1">[<span class="opt-name">onload</span>;<span class="opt-name">block</span>=<span class="opt-value">tr</span>;<span class="opt-name">when </span>[<span class="opt-name">var</span>.statut]==2] <span class="opt-html">Statut 2</span></td>
      </tr>
    </table>
  </div>
  <br>
  Voir les <a href="#html_conditional_section">sections conditionnelles</a> pour plus d'information.<br>
</div>
<div class="title-2"><a name="html_subtemplate" id="html_subtemplate"></a>Sous-modèles :</div>
<div class="norm">Il y a deux fa&ccedil;ons pour ins&eacute;rer des sous-mod&egrave;les dans votre mod&egrave;le principal.<br>
  <br>
  <span class="title-1c">Insertion brute avec le  param&egrave;tre <span class="opt-name">file </span>:</span><br>
  <br>
C'est la meilleur fa&ccedil;on pour ins&eacute;rer une partie  se trouvant dans un autre fichier, comme cela est habituellement fait pour les ent&ecirc;tes et pieds-de-page. <br>
<br>
La valeur donn&eacute;e au param&egrave;tre <span class="opt-name">file</span> doit &ecirc;tre le nom d'un fichier existant sur le serveur. Vous pouvez utiliser une expression avec des champs [var] et le mot-cl&eacute; [val] qui repr&eacute;sente la valeur du champ.<br>
<br>
<span class="title-1b">Exemples :</span><br>
<div class="decal">[<span class="opt-name">onload</span>;<span class="opt-name">file</span>=entete.htm]<br>
  [<span class="opt-name">onload</span>;<span class="opt-name">file</span>=[<span class="opt-name">var</span>.fichier_entete]]<br>
  [<span class="opt-name">var</span>.sub1;<span class="opt-name">file</span>=[<span class="opt-name">val</span>]]</div>
<br>
Le contenu du fichier est ins&eacute;rer &agrave; la place du champ, sans <a href="#html_field_prm_htmlconv">conversion Html</a> et sans <a href="#html_field_prm_protect">protection TBS </a>.<br>
Les balises [onload] contenues dans le fichier ne sont pas trait&eacute;es au moment de l'insertion. Les balises 
[onshow] et les <a href="#html_field_var">champs [var]</a> seront fusionn&eacute;s sur la m&eacute;thode Show() parce qu'il sont devenus partie int&eacute;grante du mod&egrave;le principal.<br>
<br>
Le sous-mod&egrave;le peut contenir des champs TBS, y compris des champs [var] et des blocs &agrave; fusionner. Si vous avez l'intention de fusionner des donn&eacute;es avec un bloc d&eacute;fini dans un sous-mod&egrave;le, alors il est conseill&eacute; d'utiliser le param&egrave;tre <span class="opt-name">file</span> dans un champ  [onload] pour s'assurer que le sous-mod&egrave;le soit ins&eacute;r&eacute; avant que vous appeliez MergeBlock(). <br>
<br>
Vous pouvez concevoir un sous-mod&egrave;le comme une page HTML ind&eacute;pendante, et demander &agrave; TBS de n'inclure que la partie <span class="opt-html">&lt;body&gt;</span> (ou une autre partie) dans le mod&egrave;le principal. Ceci se r&eacute;alise en utilisant le param&egrave;tre <a href="#html_field_prm_getbody" class="opt-name">getbody</a> en plus du param&egrave;tre <span class="opt-name">file</span> dans le champ TBS du mod&egrave;le principal. Cette technique vous permet de travailler en <span class="contextual" title="What You See Is What You Get">WYSIWYG</span> sur vos sous-mod&egrave;les.<br>
<br>
<br>
<div id="v202_subtpl_overview"> <span class="title-1c">Insertion assist&eacute;e par du code Php avec le param&egrave;tre <span class="opt-name">subtpl </span>:</span><br>
    <br>
  Le param&egrave;tre <span class="opt-name">subtpl</span> est utile pour g&eacute;rer l'insertion d'un sous-mod&egrave;le &agrave; l'aide de code Php. La param&egrave;tre <span class="opt-name">subtpl</span> n'est actif que lorsqu'il est utilis&eacute; avec un param&egrave;tre <span class="opt-name">script</span> ou <span class="opt-name">onformat</span>. Il bascule l'insance courante de TBS dans le mode Sous-mod&egrave;le pendant l'ex&eacute;cution du script ou de la fonction, et peut agir sur un nouveau mod&egrave;le sans alt&eacute;rer le mod&egrave;le principal.<br>
  <br>
  Le mode Sous-mod&egrave;le pr&eacute;sente les caract&eacute;ristiques suivantes :<br>
  <br>
  <table width="100%" border="0" cellpadding="2" cellspacing="0" >
    <tr>
      <td valign="top">*</td>
      <td>Les sorties  Php  sont affich&eacute;es &agrave; l'emplacement du champ au lieu d'&ecirc;tre envoy&eacute;s imm&eacute;diatement au client. Par exemple, l'utilisation de la commande Php echo() ins&eacute;rera un texte dans le mod&egrave;le principal au lieu de le sortir directement. L'utilisation de la m&eacute;thode Show() ins&eacute;rera aussi le r&eacute;sultat de la sous-fusion dans le mod&egrave;le principal.</td>
    </tr>
    <tr>
      <td valign="top">&nbsp;</td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td width="10" valign="top">*</td>
      <td>Une r&eacute;f&eacute;rence &agrave; l'instance de TBS est fournie par la variable <span class="opt-name">$this</span> ou <span class="opt-name">$TBS</span>, selon que vous utilisez le param&egrave;tre <span class="opt-name">script</span> ou <span class="opt-name">onformat</span>. Cette variable peut &ecirc;tre utilis&eacute;e pour de nouvelles sous-fusions sans alt&eacute;rer le mod&egrave;le principal. La m&eacute;thode Show() n'arr&ecirc;tera pas l'ex&eacute;cution de script durant le mode Sous-mod&egrave;le, comme cela est fait par d&eacute;fait dans le mode normal.</td>
    </tr>
  </table>
  <br>
  Quand le script ou la fonction se termine, l'instance TBS retourne en mode normal et agit sur le mod&egrave;le principal.<br>
  <br>
  Exemple <span class="txt-small">avec le param&egrave;tre <span class="opt-name">script </span>:</span><br>
  <br>
  <div class="decal">
    <table width="100%" border="0" cellpadding="4" cellspacing="0" >
      <tr>
        <td width="120" valign="top" class="title-1b">HTML :</td>
        <td>[<span class="opt-name">var</span>.fichier;<span class="opt-name">script</span>=<span class="opt-value">specialbox.php</span>;<span class="opt-name">subtpl</span>]</td>
      </tr>
      <tr>
        <td valign="top" class="title-1b">Script PHP :</td>
        <td class="txt-code"><span class="opt-html">&lt;?php</span><br>
&nbsp;&nbsp;echo(<span class="opt-value">'* Ici insertion d'un sous-mod&egrave;le *'</span>);<br>
&nbsp;&nbsp;<span class="opt-name">$this</span>-&gt;LoadTemplate(<span class="opt-name">$CurrVal</span>);<br>
&nbsp;&nbsp;<span class="opt-name">$this</span>-&gt;MergeBlock(<span class="opt-value">'blk1'</span>,<span class="opt-name">$GLOBALS</span>[<span class="opt-value">'conn_id'</span>],<span class="opt-value">'SELECT * FROM table1'</span>);<br>
&nbsp;&nbsp;<span class="opt-name">$this</span>-&gt;Show(); <br>
          <span class="opt-html">?&gt;</span></td>
      </tr>
      <tr>
        <td valign="top" class="title-1b">Remarques : </td>
        <td class="txt-small"><span class="opt-name">$CurrVal</span> est une variable locale fournie par TBS quand on utilise le param&egrave;tre <span class="opt-name">script</span> ; cette variable fait r&eacute;f&eacute;rence &agrave; la valeur du champ en cours de fusion. Dans l'exemple ci-dessus, <span class="opt-name">$CurrVal</span> contient la valeur de la variable globale <span class="opt-name">$file</span>. Vous pouvez la remplacer, par exemple, par le nom du fichier du sous-mod&egrave;le &agrave; charger (par exemple  : <span class="opt-value">'monsousmodele.htm'</span>). Voir le param&egrave;tre <a href="#html_field_prm_script" class="opt-name">script</a> pour plus d'information. </td>
      </tr>
    </table>
    <span class="txt-code"></span></div>
  <br>
  Exemple <span class="txt-small">avec le param&egrave;tre <span class="opt-name">onformat</span> :</span><br>
  <br>
  <div class="decal">
    <table width="100%" border="0" cellpadding="4" cellspacing="0" >
      <tr>
        <td width="120" valign="top" class="title-1b">HTML :</td>
        <td>[<span class="opt-name">var</span>.user_mode;<span class="opt-name">onformat</span>=<span class="opt-value">f_user_info</span>;<span class="opt-name">subtpl</span>]</td>
      </tr>
      <tr>
        <td valign="top" class="title-1b">Fonction PHP :</td>
        <td class="txt-code">function f_user_info(<span class="opt-name">$FieldName</span>,&amp;<span class="opt-name">$CurrVal</span>,&amp;<span class="opt-name">$CurrPrm</span>,&amp;<span class="opt-name">$TBS</span>) {<br>
&nbsp;&nbsp;if ($CurrVal==1) { <span class="opt-html">// User is logged in </span> <br>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="opt-name">$TBS</span>-&gt;LoadTemplate(<span class="opt-value">'user_info.htm'</span>);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="opt-name">$TBS</span>-&gt;MergeBlock(<span class="opt-value">'blk1'</span>,<span class="opt-name">$GLOBALS</span>[<span class="opt-value">'conn_id'</span>],<span class="opt-value">'SELECT * FROM table1'</span>);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="opt-name">$TBS</span>-&gt;Show();<br>
&nbsp;&nbsp;} else { <span class="opt-html">// User not logged in</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;echo(<span class="opt-value">'You are not logged in.'</span>); <br>
&nbsp;&nbsp;}<br>
          }</td>
      </tr>
      <tr>
        <td valign="top" class="title-1b">Remarques : </td>
        <td class="txt-small"><span class="opt-name">$CurrVal</span> est une variable d&eacute;clar&eacute;e en tant qu'argument de la fonction. C'est TBS qui se charge d'appeler  cette fonction de sorte que <span class="opt-name">$CurrVal</span> fasse r&eacute;f&eacute;rence &agrave; la valeur du champ en cours de fusion. Dans  exemple ci-dessus, <span class="opt-name">$CurrVal</span> est &eacute;gal &agrave; la valeur global <span class="opt-name">$user_mode</span>. De m&ecirc;me la variable <span class="opt-name">$CurrPrm</span> fait r&eacute;f&eacute;rence au tableau des param&egrave;tres du champ en cours de fusion, et <span class="opt-name">$TBS</span> fait r&eacute;f&eacute;rence l'instance de TinyButStrong en cours d'utilisation. Voir le param&egrave;tre <a href="#html_field_prm_script" class="opt-name">onformat</a> pour plus d'information. </td>
      </tr>
    </table>
  </div>
</div>
</div>
<div class="title-2"><a name="html_conditional" id="html_conditional"></a>Affichage conditionnel :</div>
<div class="norm">TinyButStrong offre plusieurs outils pour gérer l'affichage conditionnel pour les champs et les blocs.<br>
  <br>
  <span class="title-1c">Champs conditionnels</span><br>
  <br>
  Tous les champs TBS acceptent les paramètres d'affichage conditionnel rappel&eacute;s ci-dessous. <br>
  <div class="decal">
    <table border="0" cellpadding="2" cellspacing="0" >
      <tr class="title-1b">
        <td width="250" valign="top">Paramètre</td>
        <td valign="top">Description</td>
      </tr>
      <tr>
        <td valign="top">. (point) </td>
        <td valign="top">Affiche un espace insécable Html si la valeur du champ est vide.</td>
      </tr>
      <tr>
        <td valign="top"><span class="opt-name">ifempty</span>=<span class="opt-value">valeur2</span></td>
        <td valign="top">Affiche <span class="opt-value">valeur2</span> si la valeur du champ est vide.</td>
      </tr>
      <tr>
        <td valign="top"><span class="opt-name">magnet</span>=<span class="opt-value">tag</span></td>
        <td valign="top">Supprime une balise ou un couple de balise si la valeur du champ est vide.</td>
      </tr>
      <tr>
        <td valign="top"><span class="opt-name">if</span> <span class="opt-value">condition</span><br>
          <span class="opt-name">then</span> <span class="opt-value">valeur1</span><br>
          <span class="opt-name">else</span> <span class="opt-value">valeur2</span></td>
        <td valign="top">Affiche <span class="opt-value">valeur1</span> ou <span class="opt-value">valeur2</span> selon que la condition est vérifiée ou non.</td>
      </tr>
      <tr>
        <td valign="top"><span class="opt-name">frm</span>=<span class="opt-value">format1</span>|<span class="opt-value">format2</span>|<span class="opt-value">format3</span>|<span class="opt-value">format4</span></td>
        <td valign="top">Change le format numérique ou date/heure selon que la valeur du champ est positive, négative, zéro ou vide. </td>
      </tr>
    </table>
    <br>
  </div>
  <div class="decal">Exemple :<br>
    [<span class="opt-name">var.error_id</span>;<span class="opt-name">if</span> <span class="opt-value">[val]=0</span>;<span class="opt-name">then</span> <span class="opt-value">'pas d''erreur'</span>;<span class="opt-name">else</span> <span class="opt-value">'erreur constatée'</span>] </div>
  <br>
  <span class="title-1c"><a name="html_conditional_section"></a>Sections conditionnelles</span> <br>
  <br>
  Vous pouvez utiliser des sections conditionnelles dans n'importe quel bloc TBS. Une section conditionelle est une section normale qui a un param&egrave;tre <span class="opt-name">when</span> d&eacute;finissant une condition, ou bien un param&egrave;tre <span class="opt-name">default</span>. Lors de la fusion du bloc, chaque condition <span class="opt-name">when</span> est &eacute;valu&eacute;e jusqu'a ce qu'une soit v&eacute;rifi&eacute;e. D&egrave;s qu'une condition <span class="opt-name">when</span> est v&eacute;rifi&eacute;e, sa section conditionnelle est conserv&eacute;e et toutes les autre sont supprim&eacute;es. Si aucune condition <span class="opt-name">when</span> n'est v&eacute;rifi&eacute;e, alors la section <span class="opt-name">default</span> est conserv&eacute;e si elle existe. <br>
  Par d&eacute;faut, les sections conditionnelles sont exclusives pour un m&ecirc;me bloc. C'est &agrave; dire qu'une seule section conditionelle peut &ecirc;tre affich&eacute; par bloc. Mais cela peut &ecirc;tre chang&eacute; en utilisant le param&egrave;tre <span class="opt-name">several</span>. Voir ci-apr&egrave;s pour plus de d&eacute;tails. <br>
  <br>
  <div id="v202_section_cond_overview"> <span class="title-1b">Section conditionnelle pour les blocs normaux :</span><br>
      <br>
  Les blocs normaux sont ceux que vous fusionnez avec des donn&eacute;es en utilisant la m&eacute;thode MergeBlock(). Les blocs normaux peuvent avec des sections conditionnelles. Les conditions sont &eacute;valu&eacute;es pour chaque enregistrement de la source de donn&eacute;es, et elles peuvent &ecirc;tre des expressions contenant des champs li&eacute;s ou des champs [var]. <br>
  <br>
  <div class="decal">Exemple :<br>
      <br>
      <table width="500" cellpadding="2" cellspacing="0" class="border-1">
        <tr>
          <td class="border-1"><span class="opt-html">Nom : </span>[<span class="opt-name">b1</span>.Nom;<span class="opt-name">block</span>=tr]</td>
          <td valign="top" class="opt-html"> section normale </td>
        </tr>
        <tr>
          <td class="border-1"><span class="opt-html">Adresse :</span><br>
          [<span class="opt-name">b1</span>.ad_ligne1;<span class="opt-name">block</span>=tr;<span class="opt-name">when</span> [<span class="opt-name">b1.</span>adresse]=<span class="opt-value">1</span>]<br>
          [<span class="opt-name">b1</span>.ad_ligne2]<br>
          [<span class="opt-name">b1</span>.ad_cp] - [<span class="opt-name">b1</span>.add_town]<br>
          </td>
          <td valign="top" class="opt-html"> section conditionnelle </td>
        </tr>
        <tr>
          <td class="border-1"><span class="opt-html">Sans  adresse.</span>[<span class="opt-name">b1</span>;<span class="opt-name">block</span>=tr;<span class="opt-name">default</span><span class="opt-value"></span>]</td>
          <td valign="top" class="opt-html">section conditionnelle</td>
        </tr>
      </table>
  </div>
  </div>
  <br>
  <br>
  <span class="title-1b">Section conditionnelle pour les blocs automatiques : </span><br>
  <a href="#html_automatic"><br>
</a>Les <a href="#html_automatic">blocs automatiques</a> ne sont pas fusionn&eacute;s avec des donn&eacute;es ; c'est pourquoi ils ne peuvent pas avoir de sections normales ni de  champs li&eacute;s. Les blocs automatiques ne peuvent avoir que des sections conditionnelles. Les conditions sont &eacute;valu&eacute;es une seule fois, et elles peuvent &ecirc;tre des expressions contenant des champs [var].<br>
<br>
<div class="decal">Exemple :<br>
    <br>
    <table width="460" cellpadding="2" cellspacing="0" class="border-1">
      <tr>
        <td class="border-1">[<span class="opt-name">onload_lumiere</span>;<span class="opt-name">block</span>=tr;<span class="opt-name">when</span> [<span class="opt-name">var.</span>lumiere]=<span class="opt-value">1</span>]<span class="opt-html"> Lumi&egrave;re allum&eacute;e.</span></td>
      </tr>
      <tr>
        <td class="border-1">[<span class="opt-name">onload_lumiere</span>;<span class="opt-name">block</span>=tr;<span class="opt-name">when</span> [<span class="opt-name">var.</span>lumiere]=<span class="opt-value">0</span>]<span class="opt-html"> Lumi&egrave;re &eacute;teinte.</span></td>
      </tr>
      <tr>
        <td class="border-1">[<span class="opt-name">onload_lumiere</span>;<span class="opt-name">block</span>=tr;<span class="opt-name">default</span>] <span class="opt-html">Lumi&egrave;re  ?</span></td>
      </tr>
    </table>
    <br>
  Ce bloc sera fusionn&eacute; automatiquement quand le mod&egrave;le est charg&eacute;.</div>
<br>
<span class="title-1b">Sections conditionnelles non-exclusives :</span> <br>
<br>
Si vous souhaitez qu'un bloc ait des sections conditionnelles non-exclusives, vous pouvez utiliser le param&egrave;tre <span class="opt-name">several</span> sur la premi&egrave;re section conditionnelle. Avec ce param&egrave;tre, toutes les conditions sont &eacute;valu&eacute;es et chaque condition vraie fera afficher se section.<br>
<br>
<div class="decal">Exemple :<br>
    <br>
    <table cellpadding="2" cellspacing="0" class="border-1">
      <tr>
        <td class="border-1">[<span class="opt-name">onload_err</span>;<span class="opt-name">block</span>=tr;<span class="opt-name">when</span> [<span class="opt-name">var.</span>email]='';<span class="opt-name">several</span>]<span class="opt-html"> Votre email est vide.</span></td>
      </tr>
      <tr>
        <td class="border-1">[<span class="opt-name">onload_err</span>;<span class="opt-name">block</span>=tr;<span class="opt-name">when</span> [<span class="opt-name">var.</span>nom]=<span class="opt-value">0</span>]<span class="opt-html"> Votre nom est vide.</span></td>
      </tr>
      <tr>
        <td class="border-1">[<span class="opt-name">onload_err</span>;<span class="opt-name">block</span>=tr;<span class="opt-name">default</span>] <span class="opt-html">Tout est ok.</span></td>
      </tr>
    </table>
</div>
<br>
</div>
<div class="title-3 pagebreak"><a name="plugins" id="plugins"></a>Coder des plug-ins :</div>
Il est possible d'ajouter des fonctionnalit&eacute;s &agrave; TinyButStrong &agrave; l'aide de plug-ins. Les <span class="title-1c">plug-ins de bases de donn&eacute;es</span>  permettent simplement &agrave; la m&eacute;thode MergeBlock() de reconna&icirc;tre de nouveaux types de bases de donn&eacute;es. Les <span class="title-1c">autres plug-ins</span> permettent d'ajouter des fonctionnalit&eacute;s &agrave; TBS ou bien de modifier ses principales m&eacute;thodes pour le rendre plus sp&eacute;cialis&eacute;. <br>
<br>
Dans le deux cas, un  plug-in se pr&eacute;sente sous la forme d'un jeu de fonctions PHP ou d'une seule classe PHP qui doivent r&eacute;pondre &agrave; une syntaxe pr&eacute;cise attendue par TBS. Des plug-in sont propos&eacute;s au t&eacute;l&eacute;chargement sur le <a href="http://www.tinybutstrong.com/fr">site web de TinyButStrong</a>. <br>
<br>
<div class="title-2"><a name="plugins_db" id="plugins_db"></a>Plug-ins de base de donn&eacute;es :</div>
<div class="norm"><span class="versioning">Historique : les plug-ins de bases de donn&eacute;es sont support&eacute;s depuis TBS version 1.8.</span> <br>
 <br>
 <span class="title-1c">Coder un plug-in sous forme de fonctions PHP : </span> <br>
 <br>
 <span class="opt-html">... (en cours de r&eacute;-&eacute;criture, voir manuel TBS version 2.x) ...</span> <br>
 <br> 
 <span class="title-1c">Coder un plug-in sous forme d'une  classe PHP :</span> <br> 
 <br>
 <span class="opt-html">... (en cours de r&eacute;-&eacute;criture, voir manuel TBS version 2.x) ...</span><br>
 <br>
 <span class="title-1c">Coder un plug-in sous forme d'une classe PHP r&eacute;f&eacute;renc&eacute;e sous la propri&eacute;t&eacute; ObjectRef :<br>
 </span>
 <br>
 <span class="opt-html">... (en cours de r&eacute;-&eacute;criture, voir manuel TBS version 2.x) ...</span><br> 
 <br>
</div>
<div class="title-2"><a name="plugins_tbs" id="plugins_tbs"></a>Autres plug-ins :</div>
<div class="norm"><span class="zone-normal"><span class="versioning">Versioning:  plug-ins are supported since TBS version 3.0.</span><br>
			<br>
			<span class="title-1c">Coding a plug-in using a PHP class:</span><br>
			<br>
			<span class="title-1b">&bull; Plug-in's key:</span><br>
			<br>
	Each plug-in has a plug-in key which is  the name of its Php class. This key must be given to the method <a href="#php_plugin">PlugIn()</a> when you use it. Thus, it is recommended to  define a PHP constant for the plug-in's key (see example below).<br>
	<br>
	</span><span class="title-1b"><span class="zone-normal">&bull; </span>Plug-in events:</span><span class="zone-normal"><br>
	<br>
		A TBS plug-in must be a PHP class which contains one or several specific methods that will be recognized and plugged by TBS. Those specific methods are called plug-in events because they are executed automatically  by TBS when the corresponding event occurs. A TBS plug-in can also have other methods and properties for internal purpose. A TBS plug-in must have at least the OnInstall event.<br>
	<br>
		For example:<br>
	</span>
	<div class="decal txt-code"><span class="opt-html">// TBS plug-in XXX </span><br>
			<span class="opt-name">define</span>(<span class="opt-value">'TBS_XXX'</span>,<span class="opt-value">'clsTbsPlugIng_XXX'</span>); <span class="opt-html">// That is the plug-in's key</span> <br>
			<span class="opt-name">class</span> clsTbsPlugIng_XXX() {<br>
		&nbsp;&nbsp;<span class="opt-name">function</span> OnInstall(...) {...} <span class="opt-html">// That is the OnInstall event</span> <br>
		&nbsp;&nbsp;...<br>
		}</div>
	<span class="zone-normal"><br>
	<br>
		See the PHP file <span class="opt-html">&quot;tbs_plugin_syntaxes&quot;</span> to have all plug-in events, their usage and expected  arguments. There is also a list of supported events at the bottom of this section. <br>
	<br>
		The OnInstall event is special. It has to return an array with all activated events for the current plug-in (see  the PHP file <span class="opt-html">&quot;tbs_plugin_syntaxes&quot;</span>). The OnInstall event  is called when the plug-in is installed at the TBS instance.<br>
		This event can be  called in three situations:<br>
		- When using  method <a href="#php_plugin">PlugIn() </a>with the plug-in's key for the first time.<br>
		- 
		When using method PlugIn() with the plug-in's key and the argument TBS_INSTALL. <br>
		- When a new TBS instance is created,  if the plug-in's key has be added to the global array <span class="opt-name">$_TBS_AutoInstallPlugIns[]</span> (see file <span class="opt-html">&quot;tbs_plugin_syntaxes.php&quot;</span> for more details). <br>
	<br>
	</span><span class="title-1b">Property -&gt;TBS:</span> <br>
	<br>
	As soon as the plug-in is installed on the TBS instance, a property <span class="opt-name"><span class="txt-code">-&gt;TBS</span></span> is automatically  added to the plug-in, its value is a reference to the parent TBS instance. Remember this because this property can be very useful inside the plug-in's code. <br>
	<span class="zone-normal"><br>
	</span><span class="zone-normal"><span class="title-1c">Coding a plug-in using PHP functions: </span></span><br>
	<br>
	The plug-ins' key is a string that you choose and which will be used for naming the function. <span class="zone-normal">It is recommended to  define a PHP constant for the plug-in's key (see example below).</span><br>
	<br>
	The plug-in events are coded using functions, and they names must be the string 'tbspi_', followed by the plug-in's key, followed by '_' and the event's name. <br>
	Example:<br>
	<div class="decal txt-code"><span class="opt-name">define</span>(<span class="opt-value">'TBS_XXX'</span>,<span class="opt-value">'xxx'</span>);<br>
			<span class="opt-name">function</span> tbspi_xxx_OnInstall(...) {...}<br>
		...</div>
	<br>
	All the rest works like for plug-in coded with a class. You must have at least the event OnInstall created, and it works the same way. <br>
	<br>
	<span class="title-1b">Remark:</span> PHP functions are often faster than methods, but they don't let you having  a -&gt;TBS property to reach the parent TBS instance.<br>
	<br>
	<span class="title-1c">List of plug-in events: </span><br>
	<table border="0" cellpadding="4" cellspacing="0" width="100%">
		<tbody>
			<tr>
				<td width="10" valign="top" class="title-1b">&nbsp;</td>
				<td width="120" class="title-1b">Plug-in Events </td>
				<td class="title-1b">Description</td>
			</tr>
			<tr>
				<td valign="top">&bull;</td>
				<td valign="top">OnInstall</td>
				<td>Executed automatically  when the plug-in is called for the first time, or when PlugIn() method is called with the specific argument for installing. </td>
			</tr>
			<tr>
				<td valign="top">&bull;</td>
				<td valign="top">OnCommand</td>
				<td>Executed when  PlugIn() method is called.    		This is a way to execute any user command specific to the plug-in. </td>
			</tr>
			<tr>
				<td valign="top" width="10">&bull;</td>
				<td valign="top">BeforeLoadTemplate<br></td>
				<td>Executed when  LoadTemplate() method is called. Can cancel TBS basic process. </td>
			</tr>
			<tr>
				<td valign="top" width="10">&bull;</td>
				<td valign="top">AfterLoadTemplate </td>
				<td>Executed at the end of LoadTemplate(). </td>
			</tr>
			<tr>
				<td valign="top">&bull;</td>
				<td valign="top">BeforeShow</td>
				<td>Executed when  Show() method is called. Can cancel TBS basic process. </td>
			</tr>
			<tr>
				<td valign="top">&bull;</td>
				<td valign="top">AfterShow</td>
				<td>Executed at the end of Show(). </td>
			</tr>
			<tr>
				<td valign="top">&bull;</td>
				<td valign="top">OnData</td>
				<td>Executed each time a record of data is retrieved for a MergeBlock() process. (similar to parameter 'ondata' but for every block) </td>
			</tr>
			<tr>
				<td valign="top">&bull;</td>
				<td valign="top">OnFormat</td>
				<td>Executed each time a fields is being merged. (similar to parameter 'onformat' but for every fields) </td>
			</tr>
			<tr>
				<td valign="top">&bull;</td>
				<td valign="top">OnOperation</td>
				<td>Executed each time parameter 'ope' is defined with an unsupported  keyword.</td>
			</tr>
			<tr>
				<td valign="top" width="10">&bull;</td>
				<td valign="top">BeforeMergeBlock</td>
				<td>Executed when    bounds of a block are founded. Can cancel TBS basic process. </td>
			</tr>
			<tr>
				<td valign="top" width="10">&bull;</td>
				<td valign="top">OnMergeSection</td>
				<td>Executed when a section is merged, and before it is added to other sections. </td>
			</tr>
			<tr>
        <td valign="top">&bull;</td>
			  <td valign="top">OnMergeGroup</td>
			  <td>Executed before a header, a footer or a splitter section is merged. (<span class="versioning">supported since TBS 3.3.0</span>)</td>
		  </tr>
			<tr>
				<td valign="top" width="10">&bull;</td>
				<td valign="top">AfterMergeBlock</td>
				<td>Executed just before a merged block is inserted into the template. </td>
			</tr>
			<tr>
				<td valign="top">&bull;</td>
				<td valign="top">OnSpecialVar</td>
				<td>Executed when a non native Special Var Field (like [var..now]) is met. </td>
			</tr>
			<tr>
				<td valign="top">&bull;</td>
				<td valign="top">OnMergeField</td>
				<td>Executed on each field met when using the MergeField() method.</td>
			</tr>
		</tbody>
	</table>
	<br>
	<br>
</div>
<div class="title-3 pagebreak"><a name="summaries" id="summaries"></a>Résumés :</div>
<div class="title-2"><a name="appendix_field" id="appendix_field"></a>Paramètres de champ TBS :</div>
<div class="norm">
  <table width="100%" border="0" cellpadding="5" cellspacing="0">
    <tr class="title-1b">
      <td width="80" align="left" valign="top">Paramètre</td>
      <td align="left" valign="top">Résumé</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_htmlconv" class="opt-name">htmlconv</a></td>
      <td align="left" valign="top"><p>Mode de conversion Html pour la valeur du champ.</p></td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_dot" class="opt-name">. </a>(point)</td>
      <td align="left" valign="top">Si la valeur du champ est vide, affiche un espace insécable.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_ifempty" class="opt-name">ifempty</a></td>
      <td align="left" valign="top">Si la valeur du champ est vide, affiche une autre valeur.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_magnet" class="opt-name">magnet</a></td>
      <td align="left" valign="top">Si la valeur du champ est vide, supprime des balises proches.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_mtype" class="opt-name">mtype</a></td>
      <td align="left" valign="top">S'utilise avec<a href="#html_field_prm_magnet" class="opt-name"> magnet</a>.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_if" class="opt-name">if</a> </td>
      <td align="left" valign="top">Si la condition est vérifiée, change la valeur affichée.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_then" class="opt-name">then</a></td>
      <td align="left" valign="top">S'utilise avec <span class="opt-name">if</span>.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_else" class="opt-name">else</a></td>
      <td align="left" valign="top">S'utilise avec <span class="opt-name">if</span>.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_onformat" class="opt-name">onformat</a></td>
      <td align="left" valign="top">Exécute une fonction Php de l'utilisateur qui modifie la fusion du champ.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_frm" class="opt-name">frm</a></td>
      <td align="left" valign="top">Applique un format date-heure ou numérique. </td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_locale" class="opt-name">locale</a></td>
      <td align="left" valign="top">S'utilise avec <span class="opt-name">frm</span>. Affiche des noms de jours et de mois locaux. </td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_protect" class="opt-name">protect</a></td>
      <td align="left" valign="top">Mode de protection sur les caractères '['.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_comm" class="opt-name">comm</a></td>
      <td align="left" valign="top">&Eacute;tend les limites du champ à la balise commentaire qui l'entoure.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_noerr" class="opt-name">noerr</a></td>
      <td align="left" valign="top">Empêche l'affichage de certaines erreurs TBS.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_file" class="opt-name">file</a></td>
      <td align="left" valign="top">Insert le contenu du fichier.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_script" class="opt-name">script</a></td>
      <td align="left" valign="top">Exécute le script Php.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_getbody" class="opt-name">getbody</a></td>
      <td align="left" valign="top">S'utilise  avec <span class="opt-name">script</span> ou <span class="opt-name">onformat</span>. Insert seulement une partie du sous-mod&egrave;le. </td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_subtpl" class="opt-name">subtpl</a></td>
      <td align="left" valign="top">S'utilise  avec <span class="opt-name">script</span> ou <span class="opt-name">onformat</span>. Passe l'instance TBS en mode Sous-mod&egrave;le. </td>
    </tr>
  </table>
</div>
<div class="title-2"><a name="appendix_block" id="appendix_block"></a>Paramètres de bloc TBS :</div>
<div class="norm">
  <table width="100%" border="0" cellpadding="5" cellspacing="0">
    <tr class="title-1b">
      <td width="80" align="left" valign="top">Paramètre</td>
      <td align="left" valign="top">Résumé</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_block_prm_block" class="opt-name">block</a></td>
      <td align="left" valign="top">Défini les limites du bloc.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_block_prm_nodata" class="opt-name">nodata</a></td>
      <td align="left" valign="top">Désigne la section qui s'affiche lorsqu'il n'y a aucun enregistrement dans la source de données.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_block_prm_headergrp" class="opt-name">headergrp</a></td>
      <td align="left" valign="top">Désigne une section d'entête qui sera affichée lorsque la valeur d'une colonne change.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_block_prm_footergrp" class="opt-name">footergrp</a></td>
      <td align="left" valign="top">Désigne une section de pied qui sera affichée lorsque la valeur d'une colonne change.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_block_prm_splittergrp" class="opt-name">splittergrp</a></td>
      <td align="left" valign="top">Désigne une section de séparation qui sera affichée lorsque la valeur d'une colonne change.</td>
    </tr>
    <tr id="v202_parentgrp_sum">
      <td align="left" valign="top"><a href="#html_block_prm_parentgrp" class="opt-name">parentgrp</a></td>
      <td align="left" valign="top">D&eacute;signe une section  parent qui sera affich&eacute;e lorsque la valeur d'une colonne change.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_block_prm_serial" class="opt-name">serial</a></td>
      <td align="left" valign="top">Désigne une section qui contient une série de plusieurs enregistrements.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_block_prm_p1" class="opt-name">p1</a></td>
      <td align="left" valign="top">Envoie un paramètre à la requête dynamique de la source de données.</td>
    </tr>
    <tr id="v205_ondata_sum">
      <td align="left" valign="top"><a href="#html_block_prm_ondata" class="opt-name">ondata</a></td>
      <td align="left" valign="top">Ex&eacute;cute une fonction Php de l'utilisateur pour  modifier l'


l'enregistrement

 lorsqu'il vient juste d'&ecirc;tre r&eacute;cup&eacute;rer de la source de donn&eacute;es.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_tplvars" class="opt-name">tplvars</a></td>
      <td align="left" valign="top">S'utilise avec des champs <span class="opt-name"></span><span class="opt-name">onload </span>uniquement. Définie des variables de modèle.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_block_prm_when" class="opt-name">when</a></td>
      <td align="left" valign="top">S'utilise avec <span class="opt-name"></span><span class="opt-name">onload </span>ou <span class="opt-name">onshow</span>. Affiche la section quand la condition est vérifiée.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_block_prm_default" class="opt-name">default</a></td>
      <td align="left" valign="top">S'utilise avec <span class="opt-name"></span><span class="opt-name">onload </span>ou <span class="opt-name">onshow</span>. Affiche la section quand aucune condition n'est vérifiée.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_block_prm_several" class="opt-name">several</a></td>
      <td align="left" valign="top">S'utilise avec <span class="opt-name"></span><span class="opt-name">when</span>. Indique que plusieurs sections du groupe peuvent être affichées.</td>
    </tr>
  </table>
</div>
<div class="title-2"><a name="appendix_specialname" id="appendix_specialname"></a>Noms de blocs et champs spéciaux :</div>
<div class="norm">
  <table border="0" cellpadding="5" cellspacing="0">
    <tr class="title-1b">
      <td width="140" align="left" valign="top">Nom</td>
      <td align="left" valign="top">Résumé</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_prm_if" class="opt-name">val</a></td>
      <td align="left" valign="top">Le mot-clé [val] peut être utilisé dans des paramètres de champs pour représenter la valeur de ce champ.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_var" class="opt-name">var.*</a></td>
      <td align="left" valign="top">Affiche une variable Php.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_field_specialvar" class="opt-name">var..*</a></td>
      <td align="left" valign="top">Affiche une information du système TinyButStrong.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#php_mergeblock_counting" class="opt-name">#</a></td>
      <td align="left" valign="top">Colonne virtuelle pour un bloc. Affiche le numéro de l'enregistrement en cours.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#php_mergeblock_counting" class="opt-name">$</a></td>
      <td align="left" valign="top">Colonne virtuelle pour un bloc. Affiche la clé de l'enregistrement en cours si la source de données est un tableau Php.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_automatic" class="opt-name">onload</a></td>
      <td align="left" valign="top">Champ ou bloc automatique, fusionné lorsque le modèle est chargé.</td>
    </tr>
    <tr>
      <td align="left" valign="top"><a href="#html_automatic" class="opt-name">onshow</a></td>
      <td align="left" valign="top">Champ ou bloc automatique, fusionné lorsque le modèle est affiché.</td>
    </tr>
  </table>
</div>
<div align="center">
  <div class="asciiart"> .:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:</div>
</div>
</body>
</html>
